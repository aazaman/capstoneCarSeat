

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Sat Apr 30 17:39:41 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F87J11
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    53                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    54  0000                     
    55                           	psect	idataCOMRAM
    56  001BDA                     __pidataCOMRAM:
    57                           	opt stack 0
    58                           
    59                           ;initializer for UART_SmartSeatStatus@F6754
    60  001BDA  53                 	db	83
    61  001BDB  30                 	db	48
    62  001BDC  30                 	db	48
    63  001BDD  30                 	db	48
    64  001BDE  30                 	db	48
    65  0000                     _ADCON0bits	set	4034
    66  0000                     _ADCON1bits	set	4033
    67  0000                     _ADRESH	set	4036
    68  0000                     _ADRESL	set	4035
    69  0000                     _BAUDCON1bits	set	3966
    70  0000                     _INTCONbits	set	4082
    71  0000                     _IPR1bits	set	3999
    72  0000                     _LATAbits	set	3977
    73  0000                     _LATBbits	set	3978
    74  0000                     _LATD	set	3980
    75  0000                     _LATDbits	set	3980
    76  0000                     _OSCCON	set	4051
    77  0000                     _PIE1bits	set	3997
    78  0000                     _PIR1bits	set	3998
    79  0000                     _PORTHbits	set	3975
    80  0000                     _RCONbits	set	4048
    81  0000                     _RCREG1	set	4015
    82  0000                     _RCSTA1bits	set	4012
    83  0000                     _SPBRG1	set	4016
    84  0000                     _SSP1CON2bits	set	4037
    85  0000                     _T0CONbits	set	4053
    86  0000                     _TMR0H	set	4055
    87  0000                     _TMR0L	set	4054
    88  0000                     _TRISAbits	set	3986
    89  0000                     _TRISBbits	set	3987
    90  0000                     _TRISCbits	set	3988
    91  0000                     _TRISD	set	3989
    92  0000                     _TRISFbits	set	3991
    93  0000                     _TRISHbits	set	3993
    94  0000                     _TXREG	set	4014
    95  0000                     _TXSTA1bits	set	4013
    96  0000                     _TXSTAbits	set	4013
    97  0000                     _WDTCONbits	set	4032
    98                           
    99                           	psect	smallconst
   100  001000                     __psmallconst:
   101                           	opt stack 0
   102  001000  00                 	db	0
   103  001001                     STR_1:
   104  001001  53                 	db	83	;'S'
   105  001002  4E                 	db	78	;'N'
   106  001003  2C                 	db	44
   107  001004  53                 	db	83	;'S'
   108  001005  6D                 	db	109	;'m'
   109  001006  61                 	db	97	;'a'
   110  001007  72                 	db	114	;'r'
   111  001008  74                 	db	116	;'t'
   112  001009  53                 	db	83	;'S'
   113  00100A  65                 	db	101	;'e'
   114  00100B  61                 	db	97	;'a'
   115  00100C  74                 	db	116	;'t'
   116  00100D  0D                 	db	13
   117  00100E  00                 	db	0
   118  00100F  4E                 	db	78	;'N'
   119  001010  6F                 	db	111	;'o'
   120  001011  20                 	db	32
   121  001012  43                 	db	67	;'C'
   122  001013  6F                 	db	111	;'o'
   123  001014  6E                 	db	110	;'n'
   124  001015  6E                 	db	110	;'n'
   125  001016  65                 	db	101	;'e'
   126  001017  63                 	db	99	;'c'
   127  001018  74                 	db	116	;'t'
   128  001019  69                 	db	105	;'i'
   129  00101A  6F                 	db	111	;'o'
   130  00101B  6E                 	db	110	;'n'
   131  00101C  00                 	db	0
   132  00101D                     STR_2:
   133  00101D  53                 	db	83	;'S'
   134  00101E  52                 	db	82	;'R'
   135  00101F  2C                 	db	44
   136  001020  33                 	db	51	;'3'
   137  001021  36                 	db	54	;'6'
   138  001022  30                 	db	48	;'0'
   139  001023  30                 	db	48	;'0'
   140  001024  34                 	db	52	;'4'
   141  001025  38                 	db	56	;'8'
   142  001026  30                 	db	48	;'0'
   143  001027  30                 	db	48	;'0'
   144  001028  0D                 	db	13
   145  001029  00                 	db	0
   146  00102A                     STR_5:
   147  00102A  52                 	db	82	;'R'
   148  00102B  2C                 	db	44
   149  00102C  31                 	db	49	;'1'
   150  00102D  0D                 	db	13
   151  00102E  00                 	db	0
   152  00102F  51                 	db	81	;'Q'
   153  001030  0D                 	db	13
   154  001031  00                 	db	0
   155                           
   156                           ; #config settings
   157  001032  00                 	db	0	; dummy byte at the end
   158  0000                     
   159                           	psect	cinit
   160  001992                     __pcinit:
   161                           	opt stack 0
   162  001992                     start_initialization:
   163                           	opt stack 0
   164  001992                     __initialization:
   165                           	opt stack 0
   166                           
   167                           ; Clear objects allocated to BANK0 (64 bytes)
   168  001992  EE00  F060         	lfsr	0,__pbssBANK0
   169  001996  0E40               	movlw	64
   170  001998                     clear_0:
   171  001998  6AEE               	clrf	postinc0,c
   172  00199A  06E8               	decf	wreg,f,c
   173  00199C  E1FD               	bnz	clear_0
   174                           
   175                           ; Clear objects allocated to COMRAM (2 bytes)
   176  00199E  6A46               	clrf	(__pbssCOMRAM+1)& (0+255),c
   177  0019A0  6A45               	clrf	__pbssCOMRAM& (0+255),c
   178                           
   179                           ; Initialize objects allocated to COMRAM (5 bytes)
   180                           ; load TBLPTR registers with __pidataCOMRAM
   181  0019A2  0EDA               	movlw	low __pidataCOMRAM
   182  0019A4  6EF6               	movwf	tblptrl,c
   183  0019A6  0E1B               	movlw	high __pidataCOMRAM
   184  0019A8  6EF7               	movwf	tblptrh,c
   185  0019AA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   186  0019AC  6EF8               	movwf	tblptru,c
   187  0019AE  EE00  F040         	lfsr	0,__pdataCOMRAM
   188  0019B2  EE10 F005          	lfsr	1,5
   189  0019B6                     copy_data0:
   190  0019B6  0009               	tblrd		*+
   191  0019B8  CFF5 FFEE          	movff	tablat,postinc0
   192  0019BC  50E5               	movf	postdec1,w,c
   193  0019BE  50E1               	movf	fsr1l,w,c
   194  0019C0  E1FA               	bnz	copy_data0
   195  0019C2                     end_of_initialization:
   196                           	opt stack 0
   197  0019C2                     __end_of__initialization:
   198                           	opt stack 0
   199  0019C2  9047               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   200  0019C4  9247               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   201  0019C6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   202  0019C8  6EF8               	movwf	tblptru,c
   203  0019CA  0100               	movlb	0
   204  0019CC  EFC0  F00B         	goto	_main	;jump to C main() function
   205                           tblptru	equ	0xFF8
   206                           tblptrh	equ	0xFF7
   207                           tblptrl	equ	0xFF6
   208                           tablat	equ	0xFF5
   209                           postinc0	equ	0xFEE
   210                           wreg	equ	0xFE8
   211                           postdec1	equ	0xFE5
   212                           fsr1l	equ	0xFE1
   213                           
   214                           	psect	bssCOMRAM
   215  000045                     __pbssCOMRAM:
   216                           	opt stack 0
   217  000045                     _asciiValue:
   218                           	opt stack 0
   219  000045                     	ds	1
   220  000046                     _ptr:
   221                           	opt stack 0
   222  000046                     	ds	1
   223                           tblptru	equ	0xFF8
   224                           tblptrh	equ	0xFF7
   225                           tblptrl	equ	0xFF6
   226                           tablat	equ	0xFF5
   227                           postinc0	equ	0xFEE
   228                           wreg	equ	0xFE8
   229                           postdec1	equ	0xFE5
   230                           fsr1l	equ	0xFE1
   231                           
   232                           	psect	dataCOMRAM
   233  000040                     __pdataCOMRAM:
   234                           	opt stack 0
   235  000040                     UART_SmartSeatStatus@F6754:
   236                           	opt stack 0
   237  000040                     	ds	5
   238                           tblptru	equ	0xFF8
   239                           tblptrh	equ	0xFF7
   240                           tblptrl	equ	0xFF6
   241                           tablat	equ	0xFF5
   242                           postinc0	equ	0xFEE
   243                           wreg	equ	0xFE8
   244                           postdec1	equ	0xFE5
   245                           fsr1l	equ	0xFE1
   246                           
   247                           	psect	bssBANK0
   248  000060                     __pbssBANK0:
   249                           	opt stack 0
   250  000060                     _message:
   251                           	opt stack 0
   252  000060                     	ds	32
   253  000080                     _rxBuffer:
   254                           	opt stack 0
   255  000080                     	ds	32
   256                           tblptru	equ	0xFF8
   257                           tblptrh	equ	0xFF7
   258                           tblptrl	equ	0xFF6
   259                           tablat	equ	0xFF5
   260                           postinc0	equ	0xFEE
   261                           wreg	equ	0xFE8
   262                           postdec1	equ	0xFE5
   263                           fsr1l	equ	0xFE1
   264                           
   265                           	psect	cstackBANK0
   266  0000A0                     __pcstackBANK0:
   267                           	opt stack 0
   268  0000A0                     ??___fttol:
   269  0000A0                     ADC_getCarPower@Vref:
   270                           	opt stack 0
   271                           
   272                           ; 3 bytes @ 0x0
   273  0000A0                     	ds	3
   274  0000A3                     ADC_getCarPower@L_byte:
   275                           	opt stack 0
   276                           
   277                           ; 2 bytes @ 0x3
   278  0000A3                     	ds	2
   279  0000A5                     ___fttol@sign1:
   280                           	opt stack 0
   281  0000A5                     ADC_getCarPower@stepNumber:
   282                           	opt stack 0
   283                           
   284                           ; 2 bytes @ 0x5
   285  0000A5                     	ds	1
   286  0000A6                     ___fttol@lval:
   287                           	opt stack 0
   288                           
   289                           ; 4 bytes @ 0x6
   290  0000A6                     	ds	1
   291  0000A7                     ADC_getCarPower@H_byte:
   292                           	opt stack 0
   293                           
   294                           ; 2 bytes @ 0x7
   295  0000A7                     	ds	3
   296  0000AA                     ___fttol@exp1:
   297                           	opt stack 0
   298                           
   299                           ; 1 bytes @ 0xA
   300  0000AA                     	ds	1
   301  0000AB                     ?_ADC_getTemperature:
   302                           	opt stack 0
   303                           
   304                           ; 2 bytes @ 0xB
   305  0000AB                     	ds	2
   306  0000AD                     ADC_getTemperature@b:
   307                           	opt stack 0
   308                           
   309                           ; 3 bytes @ 0xD
   310  0000AD                     	ds	3
   311  0000B0                     ADC_getTemperature@m:
   312                           	opt stack 0
   313                           
   314                           ; 3 bytes @ 0x10
   315  0000B0                     	ds	3
   316  0000B3                     ADC_getTemperature@stepNumber:
   317                           	opt stack 0
   318                           
   319                           ; 3 bytes @ 0x13
   320  0000B3                     	ds	3
   321  0000B6                     ADC_getTemperature@L_byte:
   322                           	opt stack 0
   323                           
   324                           ; 2 bytes @ 0x16
   325  0000B6                     	ds	2
   326  0000B8                     ADC_getTemperature@result:
   327                           	opt stack 0
   328                           
   329                           ; 2 bytes @ 0x18
   330  0000B8                     	ds	2
   331  0000BA                     ADC_getTemperature@H_byte:
   332                           	opt stack 0
   333                           
   334                           ; 2 bytes @ 0x1A
   335  0000BA                     	ds	2
   336  0000BC                     ?_getTemperature:
   337                           	opt stack 0
   338                           
   339                           ; 2 bytes @ 0x1C
   340  0000BC                     	ds	2
   341  0000BE                     main@temperature:
   342                           	opt stack 0
   343                           
   344                           ; 2 bytes @ 0x1E
   345  0000BE                     	ds	2
   346  0000C0                     main@weight:
   347                           	opt stack 0
   348                           
   349                           ; 1 bytes @ 0x20
   350  0000C0                     	ds	1
   351  0000C1                     main@carPower:
   352                           	opt stack 0
   353                           
   354                           ; 1 bytes @ 0x21
   355  0000C1                     	ds	1
   356  0000C2                     main@tempFlag:
   357                           	opt stack 0
   358                           
   359                           ; 1 bytes @ 0x22
   360  0000C2                     	ds	1
   361  0000C3                     main@bitmap:
   362                           	opt stack 0
   363                           
   364                           ; 1 bytes @ 0x23
   365  0000C3                     	ds	1
   366                           tblptru	equ	0xFF8
   367                           tblptrh	equ	0xFF7
   368                           tblptrl	equ	0xFF6
   369                           tablat	equ	0xFF5
   370                           postinc0	equ	0xFEE
   371                           wreg	equ	0xFE8
   372                           postdec1	equ	0xFE5
   373                           fsr1l	equ	0xFE1
   374                           
   375                           	psect	cstackCOMRAM
   376  000001                     __pcstackCOMRAM:
   377                           	opt stack 0
   378  000001                     i2clearStringBuffer@i:
   379                           	opt stack 0
   380  000001                     str_copy@s1:
   381                           	opt stack 0
   382                           
   383                           ; 2 bytes @ 0x0
   384  000001                     	ds	2
   385  000003                     str_copy@s2:
   386                           	opt stack 0
   387                           
   388                           ; 2 bytes @ 0x2
   389  000003                     	ds	2
   390  000005                     str_copy@c:
   391                           	opt stack 0
   392                           
   393                           ; 1 bytes @ 0x4
   394  000005                     	ds	1
   395  000006                     str_copy@i:
   396                           	opt stack 0
   397                           
   398                           ; 1 bytes @ 0x5
   399  000006                     	ds	1
   400  000007                     ??_ISR:
   401                           
   402                           ; 1 bytes @ 0x6
   403  000007                     	ds	14
   404  000015                     ?___ftpack:
   405                           	opt stack 0
   406  000015                     packageBitmap@c:
   407                           	opt stack 0
   408  000015                     clearStringBuffer@i:
   409                           	opt stack 0
   410  000015                     delay_sec@i:
   411                           	opt stack 0
   412  000015                     checkTemperature@t:
   413                           	opt stack 0
   414  000015                     UART_transmit@s:
   415                           	opt stack 0
   416  000015                     ___ftpack@arg:
   417                           	opt stack 0
   418  000015                     ___ftge@ff1:
   419                           	opt stack 0
   420                           
   421                           ; 3 bytes @ 0x14
   422  000015                     	ds	1
   423  000016                     packageBitmap@t:
   424                           	opt stack 0
   425                           
   426                           ; 1 bytes @ 0x15
   427  000016                     	ds	1
   428  000017                     checkTemperature@c:
   429                           	opt stack 0
   430  000017                     packageBitmap@w:
   431                           	opt stack 0
   432  000017                     UART_SmartSeatStatus@bitmap:
   433                           	opt stack 0
   434                           
   435                           ; 1 bytes @ 0x16
   436  000017                     	ds	1
   437  000018                     packageBitmap@result:
   438                           	opt stack 0
   439  000018                     ___ftpack@exp:
   440                           	opt stack 0
   441  000018                     ___ftge@ff2:
   442                           	opt stack 0
   443  000018                     UART_SmartSeatStatus@s:
   444                           	opt stack 0
   445                           
   446                           ; 5 bytes @ 0x17
   447  000018                     	ds	1
   448  000019                     ___ftpack@sign:
   449                           	opt stack 0
   450                           
   451                           ; 1 bytes @ 0x18
   452  000019                     	ds	1
   453  00001A                     ??___ftpack:
   454                           
   455                           ; 1 bytes @ 0x19
   456  00001A                     	ds	1
   457  00001B                     ??___ftge:
   458                           
   459                           ; 1 bytes @ 0x1A
   460  00001B                     	ds	2
   461  00001D                     ?___awtoft:
   462                           	opt stack 0
   463  00001D                     ___awtoft@c:
   464                           	opt stack 0
   465                           
   466                           ; 2 bytes @ 0x1C
   467  00001D                     	ds	3
   468  000020                     ___awtoft@sign:
   469                           	opt stack 0
   470                           
   471                           ; 1 bytes @ 0x1F
   472  000020                     	ds	1
   473  000021                     ?___ftmul:
   474                           	opt stack 0
   475  000021                     ___ftmul@f1:
   476                           	opt stack 0
   477                           
   478                           ; 3 bytes @ 0x20
   479  000021                     	ds	3
   480  000024                     ___ftmul@f2:
   481                           	opt stack 0
   482                           
   483                           ; 3 bytes @ 0x23
   484  000024                     	ds	3
   485  000027                     ??___ftmul:
   486                           
   487                           ; 1 bytes @ 0x26
   488  000027                     	ds	3
   489  00002A                     ___ftmul@exp:
   490                           	opt stack 0
   491                           
   492                           ; 1 bytes @ 0x29
   493  00002A                     	ds	1
   494  00002B                     ___ftmul@f3_as_product:
   495                           	opt stack 0
   496                           
   497                           ; 3 bytes @ 0x2A
   498  00002B                     	ds	3
   499  00002E                     ___ftmul@cntr:
   500                           	opt stack 0
   501                           
   502                           ; 1 bytes @ 0x2D
   503  00002E                     	ds	1
   504  00002F                     ___ftmul@sign:
   505                           	opt stack 0
   506                           
   507                           ; 1 bytes @ 0x2E
   508  00002F                     	ds	1
   509  000030                     ?___ftadd:
   510                           	opt stack 0
   511  000030                     ?___ftdiv:
   512                           	opt stack 0
   513  000030                     ___ftadd@f1:
   514                           	opt stack 0
   515  000030                     ___ftdiv@f1:
   516                           	opt stack 0
   517                           
   518                           ; 3 bytes @ 0x2F
   519  000030                     	ds	3
   520  000033                     ___ftadd@f2:
   521                           	opt stack 0
   522  000033                     ___ftdiv@f2:
   523                           	opt stack 0
   524                           
   525                           ; 3 bytes @ 0x32
   526  000033                     	ds	3
   527  000036                     ??___ftadd:
   528  000036                     ??___ftdiv:
   529                           
   530                           ; 1 bytes @ 0x35
   531  000036                     	ds	3
   532  000039                     ___ftadd@sign:
   533                           	opt stack 0
   534  000039                     ___ftdiv@cntr:
   535                           	opt stack 0
   536                           
   537                           ; 1 bytes @ 0x38
   538  000039                     	ds	1
   539  00003A                     ___ftadd@exp2:
   540                           	opt stack 0
   541  00003A                     ___ftdiv@f3:
   542                           	opt stack 0
   543                           
   544                           ; 3 bytes @ 0x39
   545  00003A                     	ds	1
   546  00003B                     ___ftadd@exp1:
   547                           	opt stack 0
   548                           
   549                           ; 1 bytes @ 0x3A
   550  00003B                     	ds	1
   551  00003C                     ?___fttol:
   552                           	opt stack 0
   553  00003C                     ___fttol@f1:
   554                           	opt stack 0
   555                           
   556                           ; 3 bytes @ 0x3B
   557  00003C                     	ds	1
   558  00003D                     ___ftdiv@exp:
   559                           	opt stack 0
   560                           
   561                           ; 1 bytes @ 0x3C
   562  00003D                     	ds	1
   563  00003E                     ___ftdiv@sign:
   564                           	opt stack 0
   565                           
   566                           ; 1 bytes @ 0x3D
   567  00003E                     	ds	1
   568  00003F                     
   569                           ; 1 bytes @ 0x3E
   570  00003F                     	ds	1
   571  000040                     tblptru	equ	0xFF8
   572                           tblptrh	equ	0xFF7
   573                           tblptrl	equ	0xFF6
   574                           tablat	equ	0xFF5
   575                           postinc0	equ	0xFEE
   576                           wreg	equ	0xFE8
   577                           postdec1	equ	0xFE5
   578                           fsr1l	equ	0xFE1
   579                           
   580                           ; 1 bytes @ 0x3F
   581 ;;
   582 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   583 ;;
   584 ;; *************** function _main *****************
   585 ;; Defined at:
   586 ;;		line 49 in file "main.c"
   587 ;; Parameters:    Size  Location     Type
   588 ;;		None
   589 ;; Auto vars:     Size  Location     Type
   590 ;;  temperature     2   30[BANK0 ] short 
   591 ;;  bitmap          1   35[BANK0 ] unsigned char 
   592 ;;  tempFlag        1   34[BANK0 ] unsigned char 
   593 ;;  carPower        1   33[BANK0 ] unsigned char 
   594 ;;  weight          1   32[BANK0 ] unsigned char 
   595 ;; Return value:  Size  Location     Type
   596 ;;                  1    wreg      void 
   597 ;; Registers used:
   598 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   599 ;; Tracked objects:
   600 ;;		On entry : 0/0
   601 ;;		On exit  : 0/0
   602 ;;		Unchanged: 0/0
   603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   605 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   607 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   608 ;;Total ram usage:        6 bytes
   609 ;; Hardware stack levels required when called:    6
   610 ;; This function calls:
   611 ;;		_ADC_set
   612 ;;		_BTLE_set
   613 ;;		_UART_SmartSeatStatus
   614 ;;		_UART_init
   615 ;;		_checkTemperature
   616 ;;		_clearStringBuffer
   617 ;;		_delay_sec
   618 ;;		_getCarPower
   619 ;;		_getTemperature
   620 ;;		_getWeightInSeat
   621 ;;		_packageBitmap
   622 ;;		_set_Fosc
   623 ;;		_set_interrupts
   624 ;;		_set_pins
   625 ;;		_set_timer0
   626 ;; This function is called by:
   627 ;;		Startup code after reset
   628 ;; This function uses a non-reentrant model
   629 ;;
   630                           
   631                           	psect	text0
   632  001780                     __ptext0:
   633                           	opt stack 0
   634  001780                     _main:
   635                           	opt stack 25
   636                           
   637                           ;main.c: 52: clearStringBuffer();
   638                           
   639                           ;incstack = 0
   640  001780  EC33  F00D         	call	_clearStringBuffer	;wreg free
   641                           
   642                           ;main.c: 53: set_Fosc();
   643  001784  ECE4  F00D         	call	_set_Fosc	;wreg free
   644                           
   645                           ;main.c: 54: set_pins();
   646  001788  ECD5  F00D         	call	_set_pins	;wreg free
   647                           
   648                           ;main.c: 55: ADC_set();
   649  00178C  EC81  F00D         	call	_ADC_set	;wreg free
   650                           
   651                           ;main.c: 56: UART_init();
   652  001790  EC95  F00D         	call	_UART_init	;wreg free
   653                           
   654                           ;main.c: 57: set_interrupts();
   655  001794  ECDF  F00D         	call	_set_interrupts	;wreg free
   656                           
   657                           ;main.c: 58: set_timer0();
   658  001798  ECC3  F00D         	call	_set_timer0	;wreg free
   659                           
   660                           ;main.c: 59: BTLE_set();
   661  00179C  EC81  F00C         	call	_BTLE_set	;wreg free
   662                           
   663                           ;main.c: 62: unsigned char weight = 0;
   664  0017A0  0E00               	movlw	0
   665  0017A2  0100               	movlb	0	; () banked
   666  0017A4  6FC0               	movwf	main@weight& (0+255),b
   667                           
   668                           ; BSR set to: 0
   669                           ;main.c: 63: unsigned char carPower = 0;
   670  0017A6  0E00               	movlw	0
   671  0017A8  0100               	movlb	0	; () banked
   672  0017AA  6FC1               	movwf	main@carPower& (0+255),b
   673                           
   674                           ; BSR set to: 0
   675                           ;main.c: 64: short temperature = 0;
   676  0017AC  0E00               	movlw	0
   677  0017AE  0100               	movlb	0	; () banked
   678  0017B0  6FBF               	movwf	(main@temperature+1)& (0+255),b
   679  0017B2  0E00               	movlw	0
   680  0017B4  6FBE               	movwf	main@temperature& (0+255),b
   681                           
   682                           ; BSR set to: 0
   683                           ;main.c: 65: unsigned char tempFlag = 0;
   684  0017B6  0E00               	movlw	0
   685  0017B8  0100               	movlb	0	; () banked
   686  0017BA  6FC2               	movwf	main@tempFlag& (0+255),b
   687                           
   688                           ; BSR set to: 0
   689                           ;main.c: 66: unsigned char bitmap = 0;
   690  0017BC  0E00               	movlw	0
   691  0017BE  0100               	movlb	0	; () banked
   692  0017C0  6FC3               	movwf	main@bitmap& (0+255),b
   693  0017C2                     l2525:
   694                           
   695                           ;main.c: 71: delay_sec(1);
   696  0017C2  0E01               	movlw	1
   697  0017C4  EC8C  F00D         	call	_delay_sec
   698                           
   699                           ;main.c: 75: weight = getWeightInSeat();
   700  0017C8  ECC9  F00D         	call	_getWeightInSeat	;wreg free
   701  0017CC  0100               	movlb	0	; () banked
   702  0017CE  6FC0               	movwf	main@weight& (0+255),b
   703                           
   704                           ; BSR set to: 0
   705                           ;main.c: 77: carPower = getCarPower();
   706  0017D0  ECE7  F00D         	call	_getCarPower	;wreg free
   707  0017D4  0100               	movlb	0	; () banked
   708  0017D6  6FC1               	movwf	main@carPower& (0+255),b
   709                           
   710                           ; BSR set to: 0
   711                           ;main.c: 79: temperature = getTemperature();
   712  0017D8  ECAE  F00D         	call	_getTemperature	;wreg free
   713  0017DC  C0BC  F0BE         	movff	?_getTemperature,main@temperature
   714  0017E0  C0BD  F0BF         	movff	?_getTemperature+1,main@temperature+1
   715                           
   716                           ;main.c: 81: tempFlag = checkTemperature(temperature);
   717  0017E4  C0BE  F015         	movff	main@temperature,checkTemperature@t
   718  0017E8  C0BF  F016         	movff	main@temperature+1,checkTemperature@t+1
   719  0017EC  EC04  F00D         	call	_checkTemperature	;wreg free
   720  0017F0  0100               	movlb	0	; () banked
   721  0017F2  6FC2               	movwf	main@tempFlag& (0+255),b
   722                           
   723                           ; BSR set to: 0
   724                           ;main.c: 83: bitmap = packageBitmap(weight, carPower, tempFlag);
   725  0017F4  C0C1  F015         	movff	main@carPower,packageBitmap@c
   726  0017F8  C0C2  F016         	movff	main@tempFlag,packageBitmap@t
   727  0017FC  0100               	movlb	0	; () banked
   728  0017FE  51C0               	movf	main@weight& (0+255),w,b
   729  001800  EC57  F00D         	call	_packageBitmap
   730  001804  0100               	movlb	0	; () banked
   731  001806  6FC3               	movwf	main@bitmap& (0+255),b
   732                           
   733                           ; BSR set to: 0
   734                           ;main.c: 86: UART_SmartSeatStatus(bitmap);
   735  001808  0100               	movlb	0	; () banked
   736  00180A  51C3               	movf	main@bitmap& (0+255),w,b
   737  00180C  ECA6  F00C         	call	_UART_SmartSeatStatus
   738  001810  D7D8               	goto	l2525
   739  001812                     __end_of_main:
   740                           	opt stack 0
   741                           tblptru	equ	0xFF8
   742                           tblptrh	equ	0xFF7
   743                           tblptrl	equ	0xFF6
   744                           tablat	equ	0xFF5
   745                           postinc0	equ	0xFEE
   746                           wreg	equ	0xFE8
   747                           postdec1	equ	0xFE5
   748                           fsr1l	equ	0xFE1
   749                           
   750 ;; *************** function _set_timer0 *****************
   751 ;; Defined at:
   752 ;;		line 24 in file "timers.c"
   753 ;; Parameters:    Size  Location     Type
   754 ;;		None
   755 ;; Auto vars:     Size  Location     Type
   756 ;;		None
   757 ;; Return value:  Size  Location     Type
   758 ;;                  1    wreg      void 
   759 ;; Registers used:
   760 ;;		None
   761 ;; Tracked objects:
   762 ;;		On entry : 0/0
   763 ;;		On exit  : 0/0
   764 ;;		Unchanged: 0/0
   765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   770 ;;Total ram usage:        0 bytes
   771 ;; Hardware stack levels used:    1
   772 ;; Hardware stack levels required when called:    2
   773 ;; This function calls:
   774 ;;		Nothing
   775 ;; This function is called by:
   776 ;;		_main
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780                           	psect	text1
   781  001B86                     __ptext1:
   782                           	opt stack 0
   783  001B86                     _set_timer0:
   784                           	opt stack 28
   785                           
   786                           ;timers.c: 25: T0CONbits.TMR0ON = 0;
   787                           
   788                           ;incstack = 0
   789  001B86  9ED5               	bcf	4053,7,c	;volatile
   790                           
   791                           ;timers.c: 26: T0CONbits.T08BIT = 0;
   792  001B88  9CD5               	bcf	4053,6,c	;volatile
   793                           
   794                           ;timers.c: 27: T0CONbits.T0CS = 0;
   795  001B8A  9AD5               	bcf	4053,5,c	;volatile
   796                           
   797                           ;timers.c: 28: T0CONbits.T0SE = 0;
   798  001B8C  98D5               	bcf	4053,4,c	;volatile
   799                           
   800                           ;timers.c: 29: T0CONbits.PSA = 0;
   801  001B8E  96D5               	bcf	4053,3,c	;volatile
   802  001B90  0012               	return		;funcret
   803  001B92                     __end_of_set_timer0:
   804                           	opt stack 0
   805                           tblptru	equ	0xFF8
   806                           tblptrh	equ	0xFF7
   807                           tblptrl	equ	0xFF6
   808                           tablat	equ	0xFF5
   809                           postinc0	equ	0xFEE
   810                           wreg	equ	0xFE8
   811                           postdec1	equ	0xFE5
   812                           fsr1l	equ	0xFE1
   813                           
   814 ;; *************** function _set_pins *****************
   815 ;; Defined at:
   816 ;;		line 47 in file "MCU_config.c"
   817 ;; Parameters:    Size  Location     Type
   818 ;;		None
   819 ;; Auto vars:     Size  Location     Type
   820 ;;		None
   821 ;; Return value:  Size  Location     Type
   822 ;;                  1    wreg      void 
   823 ;; Registers used:
   824 ;;		wreg, status,2, cstack
   825 ;; Tracked objects:
   826 ;;		On entry : 0/0
   827 ;;		On exit  : 0/0
   828 ;;		Unchanged: 0/0
   829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   834 ;;Total ram usage:        0 bytes
   835 ;; Hardware stack levels used:    1
   836 ;; Hardware stack levels required when called:    3
   837 ;; This function calls:
   838 ;;		_set_input_pins
   839 ;;		_set_output_pins
   840 ;; This function is called by:
   841 ;;		_main
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           
   845                           	psect	text2
   846  001BAA                     __ptext2:
   847                           	opt stack 0
   848  001BAA                     _set_pins:
   849                           	opt stack 27
   850                           
   851                           ;MCU_config.c: 48: set_input_pins();
   852                           
   853                           ;incstack = 0
   854  001BAA  ECDA  F00D         	call	_set_input_pins	;wreg free
   855                           
   856                           ;MCU_config.c: 49: set_output_pins();
   857  001BAE  ECA7  F00D         	call	_set_output_pins	;wreg free
   858  001BB2  0012               	return		;funcret
   859  001BB4                     __end_of_set_pins:
   860                           	opt stack 0
   861                           tblptru	equ	0xFF8
   862                           tblptrh	equ	0xFF7
   863                           tblptrl	equ	0xFF6
   864                           tablat	equ	0xFF5
   865                           postinc0	equ	0xFEE
   866                           wreg	equ	0xFE8
   867                           postdec1	equ	0xFE5
   868                           fsr1l	equ	0xFE1
   869                           
   870 ;; *************** function _set_output_pins *****************
   871 ;; Defined at:
   872 ;;		line 37 in file "MCU_config.c"
   873 ;; Parameters:    Size  Location     Type
   874 ;;		None
   875 ;; Auto vars:     Size  Location     Type
   876 ;;		None
   877 ;; Return value:  Size  Location     Type
   878 ;;                  1    wreg      void 
   879 ;; Registers used:
   880 ;;		wreg, status,2
   881 ;; Tracked objects:
   882 ;;		On entry : 0/0
   883 ;;		On exit  : 0/0
   884 ;;		Unchanged: 0/0
   885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   890 ;;Total ram usage:        0 bytes
   891 ;; Hardware stack levels used:    1
   892 ;; Hardware stack levels required when called:    2
   893 ;; This function calls:
   894 ;;		Nothing
   895 ;; This function is called by:
   896 ;;		_set_pins
   897 ;; This function uses a non-reentrant model
   898 ;;
   899                           
   900                           	psect	text3
   901  001B4E                     __ptext3:
   902                           	opt stack 0
   903  001B4E                     _set_output_pins:
   904                           	opt stack 27
   905                           
   906                           ;MCU_config.c: 38: TRISCbits.TRISC6 = 0;
   907                           
   908                           ;incstack = 0
   909  001B4E  9C94               	bcf	3988,6,c	;volatile
   910                           
   911                           ;MCU_config.c: 39: TRISAbits.TRISA4 = 0;
   912  001B50  9892               	bcf	3986,4,c	;volatile
   913                           
   914                           ;MCU_config.c: 40: TRISAbits.TRISA5 = 0;
   915  001B52  9A92               	bcf	3986,5,c	;volatile
   916                           
   917                           ;MCU_config.c: 41: TRISBbits.TRISB2 = 0;
   918  001B54  9493               	bcf	3987,2,c	;volatile
   919                           
   920                           ;MCU_config.c: 42: TRISD = 0;
   921  001B56  0E00               	movlw	0
   922  001B58  6E95               	movwf	3989,c	;volatile
   923  001B5A  0012               	return		;funcret
   924  001B5C                     __end_of_set_output_pins:
   925                           	opt stack 0
   926                           tblptru	equ	0xFF8
   927                           tblptrh	equ	0xFF7
   928                           tblptrl	equ	0xFF6
   929                           tablat	equ	0xFF5
   930                           postinc0	equ	0xFEE
   931                           wreg	equ	0xFE8
   932                           postdec1	equ	0xFE5
   933                           fsr1l	equ	0xFE1
   934                           
   935 ;; *************** function _set_input_pins *****************
   936 ;; Defined at:
   937 ;;		line 27 in file "MCU_config.c"
   938 ;; Parameters:    Size  Location     Type
   939 ;;		None
   940 ;; Auto vars:     Size  Location     Type
   941 ;;		None
   942 ;; Return value:  Size  Location     Type
   943 ;;                  1    wreg      void 
   944 ;; Registers used:
   945 ;;		None
   946 ;; Tracked objects:
   947 ;;		On entry : 0/0
   948 ;;		On exit  : 0/0
   949 ;;		Unchanged: 0/0
   950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   955 ;;Total ram usage:        0 bytes
   956 ;; Hardware stack levels used:    1
   957 ;; Hardware stack levels required when called:    2
   958 ;; This function calls:
   959 ;;		Nothing
   960 ;; This function is called by:
   961 ;;		_set_pins
   962 ;; This function uses a non-reentrant model
   963 ;;
   964                           
   965                           	psect	text4
   966  001BB4                     __ptext4:
   967                           	opt stack 0
   968  001BB4                     _set_input_pins:
   969                           	opt stack 27
   970                           
   971                           ;MCU_config.c: 28: TRISHbits.TRISH2 = 1;
   972                           
   973                           ;incstack = 0
   974  001BB4  8499               	bsf	3993,2,c	;volatile
   975                           
   976                           ;MCU_config.c: 29: TRISFbits.TRISF4 = 1;
   977  001BB6  8897               	bsf	3991,4,c	;volatile
   978                           
   979                           ;MCU_config.c: 30: TRISAbits.TRISA3 = 1;
   980  001BB8  8692               	bsf	3986,3,c	;volatile
   981                           
   982                           ;MCU_config.c: 31: TRISCbits.TRISC7 = 1;
   983  001BBA  8E94               	bsf	3988,7,c	;volatile
   984  001BBC  0012               	return		;funcret
   985  001BBE                     __end_of_set_input_pins:
   986                           	opt stack 0
   987                           tblptru	equ	0xFF8
   988                           tblptrh	equ	0xFF7
   989                           tblptrl	equ	0xFF6
   990                           tablat	equ	0xFF5
   991                           postinc0	equ	0xFEE
   992                           wreg	equ	0xFE8
   993                           postdec1	equ	0xFE5
   994                           fsr1l	equ	0xFE1
   995                           
   996 ;; *************** function _set_interrupts *****************
   997 ;; Defined at:
   998 ;;		line 22 in file "interrupts.c"
   999 ;; Parameters:    Size  Location     Type
  1000 ;;		None
  1001 ;; Auto vars:     Size  Location     Type
  1002 ;;		None
  1003 ;; Return value:  Size  Location     Type
  1004 ;;                  1    wreg      void 
  1005 ;; Registers used:
  1006 ;;		None
  1007 ;; Tracked objects:
  1008 ;;		On entry : 0/0
  1009 ;;		On exit  : 0/0
  1010 ;;		Unchanged: 0/0
  1011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1016 ;;Total ram usage:        0 bytes
  1017 ;; Hardware stack levels used:    1
  1018 ;; Hardware stack levels required when called:    2
  1019 ;; This function calls:
  1020 ;;		Nothing
  1021 ;; This function is called by:
  1022 ;;		_main
  1023 ;; This function uses a non-reentrant model
  1024 ;;
  1025                           
  1026                           	psect	text5
  1027  001BBE                     __ptext5:
  1028                           	opt stack 0
  1029  001BBE                     _set_interrupts:
  1030                           	opt stack 28
  1031                           
  1032                           ;interrupts.c: 23: INTCONbits.GIE = 1;
  1033                           
  1034                           ;incstack = 0
  1035  001BBE  8EF2               	bsf	intcon,7,c	;volatile
  1036                           
  1037                           ;interrupts.c: 24: RCONbits.IPEN = 1;
  1038  001BC0  8ED0               	bsf	4048,7,c	;volatile
  1039                           
  1040                           ;interrupts.c: 25: PIE1bits.RCIE = 1;
  1041  001BC2  8A9D               	bsf	3997,5,c	;volatile
  1042                           
  1043                           ;interrupts.c: 26: IPR1bits.RCIP = 1;
  1044  001BC4  8A9F               	bsf	3999,5,c	;volatile
  1045  001BC6  0012               	return		;funcret
  1046  001BC8                     __end_of_set_interrupts:
  1047                           	opt stack 0
  1048                           tblptru	equ	0xFF8
  1049                           tblptrh	equ	0xFF7
  1050                           tblptrl	equ	0xFF6
  1051                           tablat	equ	0xFF5
  1052                           intcon	equ	0xFF2
  1053                           postinc0	equ	0xFEE
  1054                           wreg	equ	0xFE8
  1055                           postdec1	equ	0xFE5
  1056                           fsr1l	equ	0xFE1
  1057                           
  1058 ;; *************** function _set_Fosc *****************
  1059 ;; Defined at:
  1060 ;;		line 21 in file "MCU_config.c"
  1061 ;; Parameters:    Size  Location     Type
  1062 ;;		None
  1063 ;; Auto vars:     Size  Location     Type
  1064 ;;		None
  1065 ;; Return value:  Size  Location     Type
  1066 ;;                  1    wreg      void 
  1067 ;; Registers used:
  1068 ;;		wreg, status,2
  1069 ;; Tracked objects:
  1070 ;;		On entry : 0/0
  1071 ;;		On exit  : 0/0
  1072 ;;		Unchanged: 0/0
  1073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1078 ;;Total ram usage:        0 bytes
  1079 ;; Hardware stack levels used:    1
  1080 ;; Hardware stack levels required when called:    2
  1081 ;; This function calls:
  1082 ;;		Nothing
  1083 ;; This function is called by:
  1084 ;;		_main
  1085 ;; This function uses a non-reentrant model
  1086 ;;
  1087                           
  1088                           	psect	text6
  1089  001BC8                     __ptext6:
  1090                           	opt stack 0
  1091  001BC8                     _set_Fosc:
  1092                           	opt stack 28
  1093                           
  1094                           ;MCU_config.c: 22: OSCCON = 0xFC;
  1095                           
  1096                           ;incstack = 0
  1097  001BC8  0EFC               	movlw	252
  1098  001BCA  6ED3               	movwf	4051,c	;volatile
  1099  001BCC  0012               	return		;funcret
  1100  001BCE                     __end_of_set_Fosc:
  1101                           	opt stack 0
  1102                           tblptru	equ	0xFF8
  1103                           tblptrh	equ	0xFF7
  1104                           tblptrl	equ	0xFF6
  1105                           tablat	equ	0xFF5
  1106                           intcon	equ	0xFF2
  1107                           postinc0	equ	0xFEE
  1108                           wreg	equ	0xFE8
  1109                           postdec1	equ	0xFE5
  1110                           fsr1l	equ	0xFE1
  1111                           
  1112 ;; *************** function _packageBitmap *****************
  1113 ;; Defined at:
  1114 ;;		line 60 in file "carseat.c"
  1115 ;; Parameters:    Size  Location     Type
  1116 ;;  w               1    wreg     unsigned char 
  1117 ;;  c               1   20[COMRAM] unsigned char 
  1118 ;;  t               1   21[COMRAM] unsigned char 
  1119 ;; Auto vars:     Size  Location     Type
  1120 ;;  w               1   22[COMRAM] unsigned char 
  1121 ;;  result          1   23[COMRAM] unsigned char 
  1122 ;; Return value:  Size  Location     Type
  1123 ;;                  1    wreg      unsigned char 
  1124 ;; Registers used:
  1125 ;;		wreg, status,2, status,0
  1126 ;; Tracked objects:
  1127 ;;		On entry : 0/0
  1128 ;;		On exit  : 0/0
  1129 ;;		Unchanged: 0/0
  1130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1131 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1132 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1134 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1135 ;;Total ram usage:        4 bytes
  1136 ;; Hardware stack levels used:    1
  1137 ;; Hardware stack levels required when called:    2
  1138 ;; This function calls:
  1139 ;;		Nothing
  1140 ;; This function is called by:
  1141 ;;		_main
  1142 ;; This function uses a non-reentrant model
  1143 ;;
  1144                           
  1145                           	psect	text7
  1146  001AAE                     __ptext7:
  1147                           	opt stack 0
  1148  001AAE                     _packageBitmap:
  1149                           	opt stack 28
  1150                           
  1151                           ;incstack = 0
  1152                           ;packageBitmap@w stored from wreg
  1153  001AAE  6E17               	movwf	packageBitmap@w,c
  1154                           
  1155                           ;carseat.c: 61: unsigned char result;
  1156                           ;carseat.c: 66: c = c<<1;
  1157  001AB0  5015               	movf	packageBitmap@c,w,c
  1158  001AB2  2415               	addwf	packageBitmap@c,w,c
  1159  001AB4  6E15               	movwf	packageBitmap@c,c
  1160                           
  1161                           ;carseat.c: 67: t = t<<2;
  1162  001AB6  4416               	rlncf	packageBitmap@t,w,c
  1163  001AB8  46E8               	rlncf	wreg,f,c
  1164  001ABA  0BFC               	andlw	252
  1165  001ABC  6E16               	movwf	packageBitmap@t,c
  1166                           
  1167                           ;carseat.c: 69: result = t | c | w;
  1168  001ABE  5016               	movf	packageBitmap@t,w,c
  1169  001AC0  1015               	iorwf	packageBitmap@c,w,c
  1170  001AC2  1017               	iorwf	packageBitmap@w,w,c
  1171  001AC4  6E18               	movwf	packageBitmap@result,c
  1172                           
  1173                           ;carseat.c: 71: return result;
  1174  001AC6  5018               	movf	packageBitmap@result,w,c
  1175  001AC8  0012               	return	
  1176  001ACA                     __end_of_packageBitmap:
  1177                           	opt stack 0
  1178                           tblptru	equ	0xFF8
  1179                           tblptrh	equ	0xFF7
  1180                           tblptrl	equ	0xFF6
  1181                           tablat	equ	0xFF5
  1182                           intcon	equ	0xFF2
  1183                           postinc0	equ	0xFEE
  1184                           wreg	equ	0xFE8
  1185                           postdec1	equ	0xFE5
  1186                           fsr1l	equ	0xFE1
  1187                           
  1188 ;; *************** function _getWeightInSeat *****************
  1189 ;; Defined at:
  1190 ;;		line 23 in file "carseat.c"
  1191 ;; Parameters:    Size  Location     Type
  1192 ;;		None
  1193 ;; Auto vars:     Size  Location     Type
  1194 ;;		None
  1195 ;; Return value:  Size  Location     Type
  1196 ;;                  1    wreg      unsigned char 
  1197 ;; Registers used:
  1198 ;;		wreg
  1199 ;; Tracked objects:
  1200 ;;		On entry : 0/0
  1201 ;;		On exit  : 0/0
  1202 ;;		Unchanged: 0/0
  1203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1208 ;;Total ram usage:        0 bytes
  1209 ;; Hardware stack levels used:    1
  1210 ;; Hardware stack levels required when called:    2
  1211 ;; This function calls:
  1212 ;;		Nothing
  1213 ;; This function is called by:
  1214 ;;		_main
  1215 ;; This function uses a non-reentrant model
  1216 ;;
  1217                           
  1218                           	psect	text8
  1219  001B92                     __ptext8:
  1220                           	opt stack 0
  1221  001B92                     _getWeightInSeat:
  1222                           	opt stack 28
  1223                           
  1224                           ;carseat.c: 26: if(PORTHbits.RH2 == 1)
  1225                           
  1226                           ;incstack = 0
  1227  001B92  A487               	btfss	3975,2,c	;volatile
  1228  001B94  D002               	goto	l1997
  1229                           
  1230                           ;carseat.c: 27: return 1;
  1231  001B96  0E01               	movlw	1
  1232  001B98  0012               	return	
  1233  001B9A                     l1997:
  1234                           
  1235                           ;carseat.c: 28: return 0;
  1236  001B9A  0E00               	movlw	0
  1237  001B9C  0012               	return	
  1238  001B9E                     __end_of_getWeightInSeat:
  1239                           	opt stack 0
  1240                           tblptru	equ	0xFF8
  1241                           tblptrh	equ	0xFF7
  1242                           tblptrl	equ	0xFF6
  1243                           tablat	equ	0xFF5
  1244                           intcon	equ	0xFF2
  1245                           postinc0	equ	0xFEE
  1246                           wreg	equ	0xFE8
  1247                           postdec1	equ	0xFE5
  1248                           fsr1l	equ	0xFE1
  1249                           
  1250 ;; *************** function _getTemperature *****************
  1251 ;; Defined at:
  1252 ;;		line 41 in file "carseat.c"
  1253 ;; Parameters:    Size  Location     Type
  1254 ;;		None
  1255 ;; Auto vars:     Size  Location     Type
  1256 ;;		None
  1257 ;; Return value:  Size  Location     Type
  1258 ;;                  2   28[BANK0 ] short 
  1259 ;; Registers used:
  1260 ;;		wreg, status,2, status,0, cstack
  1261 ;; Tracked objects:
  1262 ;;		On entry : 0/0
  1263 ;;		On exit  : 0/0
  1264 ;;		Unchanged: 0/0
  1265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1266 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1269 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1270 ;;Total ram usage:        2 bytes
  1271 ;; Hardware stack levels used:    1
  1272 ;; Hardware stack levels required when called:    5
  1273 ;; This function calls:
  1274 ;;		_ADC_getTemperature
  1275 ;; This function is called by:
  1276 ;;		_main
  1277 ;; This function uses a non-reentrant model
  1278 ;;
  1279                           
  1280                           	psect	text9
  1281  001B5C                     __ptext9:
  1282                           	opt stack 0
  1283  001B5C                     _getTemperature:
  1284                           	opt stack 25
  1285                           
  1286                           ;carseat.c: 43: return ADC_getTemperature();
  1287                           
  1288                           ;incstack = 0
  1289  001B5C  EC87  F009         	call	_ADC_getTemperature	;wreg free
  1290  001B60  C0AB  F0BC         	movff	?_ADC_getTemperature,?_getTemperature
  1291  001B64  C0AC  F0BD         	movff	?_ADC_getTemperature+1,?_getTemperature+1
  1292  001B68  0012               	return	
  1293  001B6A                     __end_of_getTemperature:
  1294                           	opt stack 0
  1295                           tblptru	equ	0xFF8
  1296                           tblptrh	equ	0xFF7
  1297                           tblptrl	equ	0xFF6
  1298                           tablat	equ	0xFF5
  1299                           intcon	equ	0xFF2
  1300                           postinc0	equ	0xFEE
  1301                           wreg	equ	0xFE8
  1302                           postdec1	equ	0xFE5
  1303                           fsr1l	equ	0xFE1
  1304                           
  1305 ;; *************** function _ADC_getTemperature *****************
  1306 ;; Defined at:
  1307 ;;		line 34 in file "atod_converter.c"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;		None
  1310 ;; Auto vars:     Size  Location     Type
  1311 ;;  stepNumber      3   19[BANK0 ] float 
  1312 ;;  m               3   16[BANK0 ] float 
  1313 ;;  b               3   13[BANK0 ] float 
  1314 ;;  H_byte          2   26[BANK0 ] short 
  1315 ;;  result          2   24[BANK0 ] short 
  1316 ;;  L_byte          2   22[BANK0 ] short 
  1317 ;; Return value:  Size  Location     Type
  1318 ;;                  2   11[BANK0 ] short 
  1319 ;; Registers used:
  1320 ;;		wreg, status,2, status,0, cstack
  1321 ;; Tracked objects:
  1322 ;;		On entry : 0/0
  1323 ;;		On exit  : 0/0
  1324 ;;		Unchanged: 0/0
  1325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1326 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1327 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1329 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1330 ;;Total ram usage:       17 bytes
  1331 ;; Hardware stack levels used:    1
  1332 ;; Hardware stack levels required when called:    4
  1333 ;; This function calls:
  1334 ;;		___awtoft
  1335 ;;		___ftadd
  1336 ;;		___ftmul
  1337 ;;		___fttol
  1338 ;; This function is called by:
  1339 ;;		_getTemperature
  1340 ;; This function uses a non-reentrant model
  1341 ;;
  1342                           
  1343                           	psect	text10
  1344  00130E                     __ptext10:
  1345                           	opt stack 0
  1346  00130E                     _ADC_getTemperature:
  1347                           	opt stack 25
  1348                           
  1349                           ;atod_converter.c: 44: short L_byte = 0;
  1350                           
  1351                           ;incstack = 0
  1352  00130E  0E00               	movlw	0
  1353  001310  0100               	movlb	0	; () banked
  1354  001312  6FB7               	movwf	(ADC_getTemperature@L_byte+1)& (0+255),b
  1355  001314  0E00               	movlw	0
  1356  001316  6FB6               	movwf	ADC_getTemperature@L_byte& (0+255),b
  1357                           
  1358                           ;atod_converter.c: 45: short H_byte = 0;
  1359  001318  0E00               	movlw	0
  1360  00131A  0100               	movlb	0	; () banked
  1361  00131C  6FBB               	movwf	(ADC_getTemperature@H_byte+1)& (0+255),b
  1362  00131E  0E00               	movlw	0
  1363  001320  6FBA               	movwf	ADC_getTemperature@H_byte& (0+255),b
  1364                           
  1365                           ;atod_converter.c: 46: float b = 81.8193832599119;
  1366  001322  0EA4               	movlw	164
  1367  001324  0100               	movlb	0	; () banked
  1368  001326  6FAD               	movwf	ADC_getTemperature@b& (0+255),b
  1369  001328  0EA3               	movlw	163
  1370  00132A  0100               	movlb	0	; () banked
  1371  00132C  6FAE               	movwf	(ADC_getTemperature@b+1)& (0+255),b
  1372  00132E  0E42               	movlw	66
  1373  001330  0100               	movlb	0	; () banked
  1374  001332  6FAF               	movwf	(ADC_getTemperature@b+2)& (0+255),b
  1375                           
  1376                           ;atod_converter.c: 47: float m = -0.039647577092511;
  1377  001334  0E65               	movlw	101
  1378  001336  0100               	movlb	0	; () banked
  1379  001338  6FB0               	movwf	ADC_getTemperature@m& (0+255),b
  1380  00133A  0E22               	movlw	34
  1381  00133C  0100               	movlb	0	; () banked
  1382  00133E  6FB1               	movwf	(ADC_getTemperature@m+1)& (0+255),b
  1383  001340  0EBD               	movlw	189
  1384  001342  0100               	movlb	0	; () banked
  1385  001344  6FB2               	movwf	(ADC_getTemperature@m+2)& (0+255),b
  1386                           
  1387                           ;atod_converter.c: 48: float stepNumber = 0;
  1388  001346  0E00               	movlw	0
  1389  001348  0100               	movlb	0	; () banked
  1390  00134A  6FB3               	movwf	ADC_getTemperature@stepNumber& (0+255),b
  1391  00134C  0E00               	movlw	0
  1392  00134E  0100               	movlb	0	; () banked
  1393  001350  6FB4               	movwf	(ADC_getTemperature@stepNumber+1)& (0+255),b
  1394  001352  0E00               	movlw	0
  1395  001354  0100               	movlb	0	; () banked
  1396  001356  6FB5               	movwf	(ADC_getTemperature@stepNumber+2)& (0+255),b
  1397                           
  1398                           ;atod_converter.c: 49: short result = 0;
  1399  001358  0E00               	movlw	0
  1400  00135A  0100               	movlb	0	; () banked
  1401  00135C  6FB9               	movwf	(ADC_getTemperature@result+1)& (0+255),b
  1402  00135E  0E00               	movlw	0
  1403  001360  6FB8               	movwf	ADC_getTemperature@result& (0+255),b
  1404                           
  1405                           ; BSR set to: 0
  1406                           ;atod_converter.c: 51: ADCON0bits.ADON = 1;
  1407  001362  80C2               	bsf	4034,0,c	;volatile
  1408                           
  1409                           ;atod_converter.c: 52: ADCON0bits.CHS = 3;
  1410  001364  50C2               	movf	4034,w,c	;volatile
  1411  001366  0BC3               	andlw	-61
  1412  001368  090C               	iorlw	12
  1413  00136A  6EC2               	movwf	4034,c	;volatile
  1414                           
  1415                           ; BSR set to: 0
  1416                           ;atod_converter.c: 53: ADCON0bits.GODONE = 1;
  1417  00136C  82C2               	bsf	4034,1,c	;volatile
  1418  00136E                     l270:
  1419  00136E  B2C2               	btfsc	4034,1,c	;volatile
  1420  001370  D7FE               	goto	l270
  1421                           
  1422                           ;atod_converter.c: 55: ADCON0bits.ADON = 0;
  1423  001372  90C2               	bcf	4034,0,c	;volatile
  1424                           
  1425                           ;atod_converter.c: 57: L_byte = ADRESL;
  1426  001374  CFC3 F0B6          	movff	4035,ADC_getTemperature@L_byte	;volatile
  1427  001378  0100               	movlb	0	; () banked
  1428  00137A  6BB7               	clrf	(ADC_getTemperature@L_byte+1)& (0+255),b
  1429                           
  1430                           ;atod_converter.c: 58: H_byte = ADRESH;
  1431  00137C  CFC4 F0BA          	movff	4036,ADC_getTemperature@H_byte	;volatile
  1432  001380  0100               	movlb	0	; () banked
  1433  001382  6BBB               	clrf	(ADC_getTemperature@H_byte+1)& (0+255),b
  1434                           
  1435                           ; BSR set to: 0
  1436                           ;atod_converter.c: 59: H_byte = H_byte << 8;
  1437  001384  0100               	movlb	0	; () banked
  1438  001386  51BA               	movf	ADC_getTemperature@H_byte& (0+255),w,b
  1439  001388  0100               	movlb	0	; () banked
  1440  00138A  6FBB               	movwf	(ADC_getTemperature@H_byte+1)& (0+255),b
  1441  00138C  6BBA               	clrf	ADC_getTemperature@H_byte& (0+255),b
  1442                           
  1443                           ; BSR set to: 0
  1444                           ;atod_converter.c: 61: stepNumber = (H_byte | L_byte);
  1445  00138E  0100               	movlb	0	; () banked
  1446  001390  51B6               	movf	ADC_getTemperature@L_byte& (0+255),w,b
  1447  001392  0100               	movlb	0	; () banked
  1448  001394  11BA               	iorwf	ADC_getTemperature@H_byte& (0+255),w,b
  1449  001396  6E1D               	movwf	___awtoft@c,c
  1450  001398  0100               	movlb	0	; () banked
  1451  00139A  51B7               	movf	(ADC_getTemperature@L_byte+1)& (0+255),w,b
  1452  00139C  0100               	movlb	0	; () banked
  1453  00139E  11BB               	iorwf	(ADC_getTemperature@H_byte+1)& (0+255),w,b
  1454  0013A0  6E1E               	movwf	___awtoft@c+1,c
  1455  0013A2  ECE8  F00C         	call	___awtoft	;wreg free
  1456  0013A6  C01D  F0B3         	movff	?___awtoft,ADC_getTemperature@stepNumber
  1457  0013AA  C01E  F0B4         	movff	?___awtoft+1,ADC_getTemperature@stepNumber+1
  1458  0013AE  C01F  F0B5         	movff	?___awtoft+2,ADC_getTemperature@stepNumber+2
  1459                           
  1460                           ;atod_converter.c: 64: result = (short)(m*stepNumber + b);
  1461  0013B2  C0AD  F033         	movff	ADC_getTemperature@b,___ftadd@f2
  1462  0013B6  C0AE  F034         	movff	ADC_getTemperature@b+1,___ftadd@f2+1
  1463  0013BA  C0AF  F035         	movff	ADC_getTemperature@b+2,___ftadd@f2+2
  1464  0013BE  C0B3  F024         	movff	ADC_getTemperature@stepNumber,___ftmul@f2
  1465  0013C2  C0B4  F025         	movff	ADC_getTemperature@stepNumber+1,___ftmul@f2+1
  1466  0013C6  C0B5  F026         	movff	ADC_getTemperature@stepNumber+2,___ftmul@f2+2
  1467  0013CA  C0B0  F021         	movff	ADC_getTemperature@m,___ftmul@f1
  1468  0013CE  C0B1  F022         	movff	ADC_getTemperature@m+1,___ftmul@f1+1
  1469  0013D2  C0B2  F023         	movff	ADC_getTemperature@m+2,___ftmul@f1+2
  1470  0013D6  EC06  F00A         	call	___ftmul	;wreg free
  1471  0013DA  C021  F030         	movff	?___ftmul,___ftadd@f1
  1472  0013DE  C022  F031         	movff	?___ftmul+1,___ftadd@f1+1
  1473  0013E2  C023  F032         	movff	?___ftmul+2,___ftadd@f1+2
  1474  0013E6  EC1A  F008         	call	___ftadd	;wreg free
  1475  0013EA  C030  F03C         	movff	?___ftadd,___fttol@f1
  1476  0013EE  C031  F03D         	movff	?___ftadd+1,___fttol@f1+1
  1477  0013F2  C032  F03E         	movff	?___ftadd+2,___fttol@f1+2
  1478  0013F6  ECF0  F008         	call	___fttol	;wreg free
  1479  0013FA  C03C  F0B8         	movff	?___fttol,ADC_getTemperature@result
  1480  0013FE  C03D  F0B9         	movff	?___fttol+1,ADC_getTemperature@result+1
  1481                           
  1482                           ;atod_converter.c: 66: return result;
  1483  001402  C0B8  F0AB         	movff	ADC_getTemperature@result,?_ADC_getTemperature
  1484  001406  C0B9  F0AC         	movff	ADC_getTemperature@result+1,?_ADC_getTemperature+1
  1485  00140A  0012               	return	
  1486  00140C                     __end_of_ADC_getTemperature:
  1487                           	opt stack 0
  1488                           tblptru	equ	0xFF8
  1489                           tblptrh	equ	0xFF7
  1490                           tblptrl	equ	0xFF6
  1491                           tablat	equ	0xFF5
  1492                           intcon	equ	0xFF2
  1493                           postinc0	equ	0xFEE
  1494                           wreg	equ	0xFE8
  1495                           postdec1	equ	0xFE5
  1496                           fsr1l	equ	0xFE1
  1497                           
  1498 ;; *************** function ___fttol *****************
  1499 ;; Defined at:
  1500 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fttol.c"
  1501 ;; Parameters:    Size  Location     Type
  1502 ;;  f1              3   59[COMRAM] float 
  1503 ;; Auto vars:     Size  Location     Type
  1504 ;;  lval            4    6[BANK0 ] unsigned long 
  1505 ;;  exp1            1   10[BANK0 ] unsigned char 
  1506 ;;  sign1           1    5[BANK0 ] unsigned char 
  1507 ;; Return value:  Size  Location     Type
  1508 ;;                  4   59[COMRAM] long 
  1509 ;; Registers used:
  1510 ;;		wreg, status,2, status,0
  1511 ;; Tracked objects:
  1512 ;;		On entry : 0/0
  1513 ;;		On exit  : 0/0
  1514 ;;		Unchanged: 0/0
  1515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1516 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1517 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1518 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1519 ;;      Totals:         4      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1520 ;;Total ram usage:       15 bytes
  1521 ;; Hardware stack levels used:    1
  1522 ;; Hardware stack levels required when called:    2
  1523 ;; This function calls:
  1524 ;;		Nothing
  1525 ;; This function is called by:
  1526 ;;		_ADC_getTemperature
  1527 ;; This function uses a non-reentrant model
  1528 ;;
  1529                           
  1530                           	psect	text11
  1531  0011E0                     __ptext11:
  1532                           	opt stack 0
  1533  0011E0                     ___fttol:
  1534                           	opt stack 26
  1535                           
  1536                           ;incstack = 0
  1537  0011E0  C03E  F0A0         	movff	___fttol@f1+2,??___fttol
  1538  0011E4  0100               	movlb	0	; () banked
  1539  0011E6  6BA1               	clrf	(??___fttol+1)& (0+255),b
  1540  0011E8  6BA2               	clrf	(??___fttol+2)& (0+255),b
  1541  0011EA  343D               	rlcf	___fttol@f1+1,w,c
  1542  0011EC  0100               	movlb	0	; () banked
  1543  0011EE  37A0               	rlcf	??___fttol& (0+255),f,b
  1544  0011F0  E301               	bnc	u2161
  1545  0011F2  81A1               	bsf	(??___fttol+1)& (0+255),0,b
  1546  0011F4                     u2161:
  1547  0011F4  0100               	movlb	0	; () banked
  1548  0011F6  51A0               	movf	??___fttol& (0+255),w,b
  1549  0011F8  0100               	movlb	0	; () banked
  1550  0011FA  6FAA               	movwf	___fttol@exp1& (0+255),b
  1551  0011FC  0100               	movlb	0	; () banked
  1552  0011FE  51AA               	movf	___fttol@exp1& (0+255),w,b
  1553  001200  A4D8               	btfss	status,2,c
  1554  001202  D009               	goto	l2413
  1555                           
  1556                           ; BSR set to: 0
  1557  001204  0E00               	movlw	0
  1558  001206  6E3C               	movwf	?___fttol,c
  1559  001208  0E00               	movlw	0
  1560  00120A  6E3D               	movwf	?___fttol+1,c
  1561  00120C  0E00               	movlw	0
  1562  00120E  6E3E               	movwf	?___fttol+2,c
  1563  001210  0E00               	movlw	0
  1564  001212  6E3F               	movwf	?___fttol+3,c
  1565                           
  1566                           ; BSR set to: 0
  1567  001214  0012               	return	
  1568  001216                     l2413:
  1569                           
  1570                           ; BSR set to: 0
  1571  001216  0E17               	movlw	23
  1572  001218  0100               	movlb	0	; () banked
  1573  00121A  6FA0               	movwf	??___fttol& (0+255),b
  1574  00121C  C03C  F0A1         	movff	___fttol@f1,??___fttol+1
  1575  001220  C03D  F0A2         	movff	___fttol@f1+1,??___fttol+2
  1576  001224  C03E  F0A3         	movff	___fttol@f1+2,??___fttol+3
  1577  001228  0100               	movlb	0	; () banked
  1578  00122A  29A0               	incf	??___fttol& (0+255),w,b
  1579  00122C  0100               	movlb	0	; () banked
  1580  00122E  6FA4               	movwf	(??___fttol+4)& (0+255),b
  1581  001230  D005               	goto	u2180
  1582  001232                     u2185:
  1583  001232  0100               	movlb	0	; () banked
  1584  001234  90D8               	bcf	status,0,c
  1585  001236  33A3               	rrcf	(??___fttol+3)& (0+255),f,b
  1586  001238  33A2               	rrcf	(??___fttol+2)& (0+255),f,b
  1587  00123A  33A1               	rrcf	(??___fttol+1)& (0+255),f,b
  1588  00123C                     u2180:
  1589  00123C  0100               	movlb	0	; () banked
  1590  00123E  2FA4               	decfsz	(??___fttol+4)& (0+255),f,b
  1591  001240  D7F8               	goto	u2185
  1592  001242  0100               	movlb	0	; () banked
  1593  001244  51A1               	movf	(??___fttol+1)& (0+255),w,b
  1594  001246  0100               	movlb	0	; () banked
  1595  001248  6FA5               	movwf	___fttol@sign1& (0+255),b
  1596                           
  1597                           ; BSR set to: 0
  1598  00124A  8E3D               	bsf	___fttol@f1+1,7,c
  1599                           
  1600                           ; BSR set to: 0
  1601  00124C  0EFF               	movlw	255
  1602  00124E  163C               	andwf	___fttol@f1,f,c
  1603  001250  0EFF               	movlw	255
  1604  001252  163D               	andwf	___fttol@f1+1,f,c
  1605  001254  0E00               	movlw	0
  1606  001256  163E               	andwf	___fttol@f1+2,f,c
  1607                           
  1608                           ; BSR set to: 0
  1609  001258  503C               	movf	___fttol@f1,w,c
  1610  00125A  0100               	movlb	0	; () banked
  1611  00125C  6FA6               	movwf	___fttol@lval& (0+255),b
  1612  00125E  503D               	movf	___fttol@f1+1,w,c
  1613  001260  0100               	movlb	0	; () banked
  1614  001262  6FA7               	movwf	(___fttol@lval+1)& (0+255),b
  1615  001264  503E               	movf	___fttol@f1+2,w,c
  1616  001266  0100               	movlb	0	; () banked
  1617  001268  6FA8               	movwf	(___fttol@lval+2)& (0+255),b
  1618  00126A  0100               	movlb	0	; () banked
  1619  00126C  6BA9               	clrf	(___fttol@lval+3)& (0+255),b
  1620                           
  1621                           ; BSR set to: 0
  1622  00126E  0E8E               	movlw	142
  1623  001270  0100               	movlb	0	; () banked
  1624  001272  5FAA               	subwf	___fttol@exp1& (0+255),f,b
  1625                           
  1626                           ; BSR set to: 0
  1627  001274  0100               	movlb	0	; () banked
  1628  001276  AFAA               	btfss	___fttol@exp1& (0+255),7,b
  1629  001278  D019               	goto	l2435
  1630                           
  1631                           ; BSR set to: 0
  1632  00127A  0100               	movlb	0	; () banked
  1633  00127C  51AA               	movf	___fttol@exp1& (0+255),w,b
  1634  00127E  0A80               	xorlw	128
  1635  001280  0F8F               	addlw	143
  1636  001282  B0D8               	btfsc	status,0,c
  1637  001284  D009               	goto	l2431
  1638                           
  1639                           ; BSR set to: 0
  1640  001286  0E00               	movlw	0
  1641  001288  6E3C               	movwf	?___fttol,c
  1642  00128A  0E00               	movlw	0
  1643  00128C  6E3D               	movwf	?___fttol+1,c
  1644  00128E  0E00               	movlw	0
  1645  001290  6E3E               	movwf	?___fttol+2,c
  1646  001292  0E00               	movlw	0
  1647  001294  6E3F               	movwf	?___fttol+3,c
  1648                           
  1649                           ; BSR set to: 0
  1650  001296  0012               	return	
  1651  001298                     l2431:
  1652                           
  1653                           ; BSR set to: 0
  1654  001298  0100               	movlb	0	; () banked
  1655  00129A  90D8               	bcf	status,0,c
  1656  00129C  33A9               	rrcf	(___fttol@lval+3)& (0+255),f,b
  1657  00129E  33A8               	rrcf	(___fttol@lval+2)& (0+255),f,b
  1658  0012A0  33A7               	rrcf	(___fttol@lval+1)& (0+255),f,b
  1659  0012A2  33A6               	rrcf	___fttol@lval& (0+255),f,b
  1660                           
  1661                           ; BSR set to: 0
  1662  0012A4  0100               	movlb	0	; () banked
  1663  0012A6  3FAA               	incfsz	___fttol@exp1& (0+255),f,b
  1664  0012A8  D7F7               	goto	l2431
  1665                           
  1666                           ; BSR set to: 0
  1667  0012AA  D01A               	goto	l2445
  1668  0012AC                     l2435:
  1669                           
  1670                           ; BSR set to: 0
  1671  0012AC  0E17               	movlw	23
  1672  0012AE  0100               	movlb	0	; () banked
  1673  0012B0  65AA               	cpfsgt	___fttol@exp1& (0+255),b
  1674  0012B2  D011               	goto	l2443
  1675                           
  1676                           ; BSR set to: 0
  1677  0012B4  0E00               	movlw	0
  1678  0012B6  6E3C               	movwf	?___fttol,c
  1679  0012B8  0E00               	movlw	0
  1680  0012BA  6E3D               	movwf	?___fttol+1,c
  1681  0012BC  0E00               	movlw	0
  1682  0012BE  6E3E               	movwf	?___fttol+2,c
  1683  0012C0  0E00               	movlw	0
  1684  0012C2  6E3F               	movwf	?___fttol+3,c
  1685                           
  1686                           ; BSR set to: 0
  1687  0012C4  0012               	return	
  1688  0012C6                     l2441:
  1689                           
  1690                           ; BSR set to: 0
  1691  0012C6  0100               	movlb	0	; () banked
  1692  0012C8  90D8               	bcf	status,0,c
  1693  0012CA  37A6               	rlcf	___fttol@lval& (0+255),f,b
  1694  0012CC  37A7               	rlcf	(___fttol@lval+1)& (0+255),f,b
  1695  0012CE  37A8               	rlcf	(___fttol@lval+2)& (0+255),f,b
  1696  0012D0  37A9               	rlcf	(___fttol@lval+3)& (0+255),f,b
  1697  0012D2  0100               	movlb	0	; () banked
  1698  0012D4  07AA               	decf	___fttol@exp1& (0+255),f,b
  1699  0012D6                     l2443:
  1700                           
  1701                           ; BSR set to: 0
  1702  0012D6  0100               	movlb	0	; () banked
  1703  0012D8  51AA               	movf	___fttol@exp1& (0+255),w,b
  1704  0012DA  0100               	movlb	0	; () banked
  1705  0012DC  A4D8               	btfss	status,2,c
  1706  0012DE  D7F3               	goto	l2441
  1707  0012E0                     l2445:
  1708                           
  1709                           ; BSR set to: 0
  1710  0012E0  0100               	movlb	0	; () banked
  1711  0012E2  51A5               	movf	___fttol@sign1& (0+255),w,b
  1712  0012E4  0100               	movlb	0	; () banked
  1713  0012E6  B4D8               	btfsc	status,2,c
  1714  0012E8  D009               	goto	l2449
  1715                           
  1716                           ; BSR set to: 0
  1717  0012EA  0100               	movlb	0	; () banked
  1718  0012EC  1FA9               	comf	(___fttol@lval+3)& (0+255),f,b
  1719  0012EE  1FA8               	comf	(___fttol@lval+2)& (0+255),f,b
  1720  0012F0  1FA7               	comf	(___fttol@lval+1)& (0+255),f,b
  1721  0012F2  6DA6               	negf	___fttol@lval& (0+255),b
  1722  0012F4  0E00               	movlw	0
  1723  0012F6  23A7               	addwfc	(___fttol@lval+1)& (0+255),f,b
  1724  0012F8  23A8               	addwfc	(___fttol@lval+2)& (0+255),f,b
  1725  0012FA  23A9               	addwfc	(___fttol@lval+3)& (0+255),f,b
  1726  0012FC                     l2449:
  1727                           
  1728                           ; BSR set to: 0
  1729  0012FC  C0A6  F03C         	movff	___fttol@lval,?___fttol
  1730  001300  C0A7  F03D         	movff	___fttol@lval+1,?___fttol+1
  1731  001304  C0A8  F03E         	movff	___fttol@lval+2,?___fttol+2
  1732  001308  C0A9  F03F         	movff	___fttol@lval+3,?___fttol+3
  1733  00130C  0012               	return	
  1734  00130E                     __end_of___fttol:
  1735                           	opt stack 0
  1736                           tblptru	equ	0xFF8
  1737                           tblptrh	equ	0xFF7
  1738                           tblptrl	equ	0xFF6
  1739                           tablat	equ	0xFF5
  1740                           intcon	equ	0xFF2
  1741                           postinc0	equ	0xFEE
  1742                           wreg	equ	0xFE8
  1743                           postdec1	equ	0xFE5
  1744                           fsr1l	equ	0xFE1
  1745                           status	equ	0xFD8
  1746                           
  1747 ;; *************** function ___ftadd *****************
  1748 ;; Defined at:
  1749 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftadd.c"
  1750 ;; Parameters:    Size  Location     Type
  1751 ;;  f1              3   47[COMRAM] float 
  1752 ;;  f2              3   50[COMRAM] float 
  1753 ;; Auto vars:     Size  Location     Type
  1754 ;;  exp1            1   58[COMRAM] unsigned char 
  1755 ;;  exp2            1   57[COMRAM] unsigned char 
  1756 ;;  sign            1   56[COMRAM] unsigned char 
  1757 ;; Return value:  Size  Location     Type
  1758 ;;                  3   47[COMRAM] float 
  1759 ;; Registers used:
  1760 ;;		wreg, status,2, status,0, cstack
  1761 ;; Tracked objects:
  1762 ;;		On entry : 0/0
  1763 ;;		On exit  : 0/0
  1764 ;;		Unchanged: 0/0
  1765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1766 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1767 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1768 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1769 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1770 ;;Total ram usage:       12 bytes
  1771 ;; Hardware stack levels used:    1
  1772 ;; Hardware stack levels required when called:    3
  1773 ;; This function calls:
  1774 ;;		___ftpack
  1775 ;; This function is called by:
  1776 ;;		_ADC_getTemperature
  1777 ;; This function uses a non-reentrant model
  1778 ;;
  1779                           
  1780                           	psect	text12
  1781  001034                     __ptext12:
  1782                           	opt stack 0
  1783  001034                     ___ftadd:
  1784                           	opt stack 25
  1785                           
  1786                           ; BSR set to: 0
  1787                           ;incstack = 0
  1788  001034  C032  F036         	movff	___ftadd@f1+2,??___ftadd
  1789  001038  6A37               	clrf	(??___ftadd+1)& (0+255),c
  1790  00103A  6A38               	clrf	(??___ftadd+2)& (0+255),c
  1791  00103C  3431               	rlcf	___ftadd@f1+1,w,c
  1792  00103E  3636               	rlcf	??___ftadd& (0+255),f,c
  1793  001040  E301               	bnc	u1801
  1794  001042  8037               	bsf	(??___ftadd+1)& (0+255),0,c
  1795  001044                     u1801:
  1796  001044  5036               	movf	??___ftadd,w,c
  1797  001046  6E3B               	movwf	___ftadd@exp1,c
  1798  001048  C035  F036         	movff	___ftadd@f2+2,??___ftadd
  1799  00104C  6A37               	clrf	(??___ftadd+1)& (0+255),c
  1800  00104E  6A38               	clrf	(??___ftadd+2)& (0+255),c
  1801  001050  3434               	rlcf	___ftadd@f2+1,w,c
  1802  001052  3636               	rlcf	??___ftadd& (0+255),f,c
  1803  001054  E301               	bnc	u1811
  1804  001056  8037               	bsf	(??___ftadd+1)& (0+255),0,c
  1805  001058                     u1811:
  1806  001058  5036               	movf	??___ftadd,w,c
  1807  00105A  6E3A               	movwf	___ftadd@exp2,c
  1808  00105C  503B               	movf	___ftadd@exp1,w,c
  1809  00105E  B4D8               	btfsc	status,2,c
  1810  001060  D00B               	goto	l563
  1811  001062  503A               	movf	___ftadd@exp2,w,c
  1812  001064  5C3B               	subwf	___ftadd@exp1,w,c
  1813  001066  B0D8               	btfsc	status,0,c
  1814  001068  D00E               	goto	l2221
  1815  00106A  503B               	movf	___ftadd@exp1,w,c
  1816  00106C  0800               	sublw	0
  1817  00106E  243A               	addwf	___ftadd@exp2,w,c
  1818  001070  6E36               	movwf	??___ftadd& (0+255),c
  1819  001072  0E18               	movlw	24
  1820  001074  6436               	cpfsgt	??___ftadd,c
  1821  001076  D007               	goto	l2221
  1822  001078                     l563:
  1823  001078  C033  F030         	movff	___ftadd@f2,?___ftadd
  1824  00107C  C034  F031         	movff	___ftadd@f2+1,?___ftadd+1
  1825  001080  C035  F032         	movff	___ftadd@f2+2,?___ftadd+2
  1826  001084  0012               	return	
  1827  001086                     l2221:
  1828  001086  503A               	movf	___ftadd@exp2,w,c
  1829  001088  B4D8               	btfsc	status,2,c
  1830  00108A  D00B               	goto	l567
  1831  00108C  503B               	movf	___ftadd@exp1,w,c
  1832  00108E  5C3A               	subwf	___ftadd@exp2,w,c
  1833  001090  B0D8               	btfsc	status,0,c
  1834  001092  D00E               	goto	l2227
  1835  001094  503A               	movf	___ftadd@exp2,w,c
  1836  001096  0800               	sublw	0
  1837  001098  243B               	addwf	___ftadd@exp1,w,c
  1838  00109A  6E36               	movwf	??___ftadd& (0+255),c
  1839  00109C  0E18               	movlw	24
  1840  00109E  6436               	cpfsgt	??___ftadd,c
  1841  0010A0  D007               	goto	l2227
  1842  0010A2                     l567:
  1843  0010A2  C030  F030         	movff	___ftadd@f1,?___ftadd
  1844  0010A6  C031  F031         	movff	___ftadd@f1+1,?___ftadd+1
  1845  0010AA  C032  F032         	movff	___ftadd@f1+2,?___ftadd+2
  1846  0010AE  0012               	return	
  1847  0010B0                     l2227:
  1848  0010B0  0E06               	movlw	6
  1849  0010B2  6E39               	movwf	___ftadd@sign,c
  1850  0010B4  BE32               	btfsc	___ftadd@f1+2,7,c
  1851  0010B6  8E39               	bsf	___ftadd@sign,7,c
  1852  0010B8  BE35               	btfsc	___ftadd@f2+2,7,c
  1853  0010BA  8C39               	bsf	___ftadd@sign,6,c
  1854  0010BC  8E31               	bsf	___ftadd@f1+1,7,c
  1855  0010BE  0EFF               	movlw	255
  1856  0010C0  1630               	andwf	___ftadd@f1,f,c
  1857  0010C2  0EFF               	movlw	255
  1858  0010C4  1631               	andwf	___ftadd@f1+1,f,c
  1859  0010C6  0E00               	movlw	0
  1860  0010C8  1632               	andwf	___ftadd@f1+2,f,c
  1861  0010CA  8E34               	bsf	___ftadd@f2+1,7,c
  1862  0010CC  0EFF               	movlw	255
  1863  0010CE  1633               	andwf	___ftadd@f2,f,c
  1864  0010D0  0EFF               	movlw	255
  1865  0010D2  1634               	andwf	___ftadd@f2+1,f,c
  1866  0010D4  0E00               	movlw	0
  1867  0010D6  1635               	andwf	___ftadd@f2+2,f,c
  1868  0010D8  503A               	movf	___ftadd@exp2,w,c
  1869  0010DA  5C3B               	subwf	___ftadd@exp1,w,c
  1870  0010DC  B0D8               	btfsc	status,0,c
  1871  0010DE  D01B               	goto	l2253
  1872  0010E0                     l2243:
  1873  0010E0  90D8               	bcf	status,0,c
  1874  0010E2  3633               	rlcf	___ftadd@f2,f,c
  1875  0010E4  3634               	rlcf	___ftadd@f2+1,f,c
  1876  0010E6  3635               	rlcf	___ftadd@f2+2,f,c
  1877  0010E8  063A               	decf	___ftadd@exp2,f,c
  1878  0010EA  503B               	movf	___ftadd@exp1,w,c
  1879  0010EC  183A               	xorwf	___ftadd@exp2,w,c
  1880  0010EE  B4D8               	btfsc	status,2,c
  1881  0010F0  D00D               	goto	l2251
  1882  0010F2  0639               	decf	___ftadd@sign,f,c
  1883  0010F4  C039  F036         	movff	___ftadd@sign,??___ftadd
  1884  0010F8  0E07               	movlw	7
  1885  0010FA  1636               	andwf	??___ftadd,f,c
  1886  0010FC  B4D8               	btfsc	status,2,c
  1887  0010FE  D006               	goto	l2251
  1888  001100  D7EF               	goto	l2243
  1889  001102                     l2249:
  1890  001102  90D8               	bcf	status,0,c
  1891  001104  3232               	rrcf	___ftadd@f1+2,f,c
  1892  001106  3231               	rrcf	___ftadd@f1+1,f,c
  1893  001108  3230               	rrcf	___ftadd@f1,f,c
  1894  00110A  2A3B               	incf	___ftadd@exp1,f,c
  1895  00110C                     l2251:
  1896  00110C  503A               	movf	___ftadd@exp2,w,c
  1897  00110E  183B               	xorwf	___ftadd@exp1,w,c
  1898  001110  B4D8               	btfsc	status,2,c
  1899  001112  D01F               	goto	l578
  1900  001114  D7F6               	goto	l2249
  1901  001116                     l2253:
  1902  001116  503B               	movf	___ftadd@exp1,w,c
  1903  001118  5C3A               	subwf	___ftadd@exp2,w,c
  1904  00111A  B0D8               	btfsc	status,0,c
  1905  00111C  D01A               	goto	l578
  1906  00111E                     l2255:
  1907  00111E  90D8               	bcf	status,0,c
  1908  001120  3630               	rlcf	___ftadd@f1,f,c
  1909  001122  3631               	rlcf	___ftadd@f1+1,f,c
  1910  001124  3632               	rlcf	___ftadd@f1+2,f,c
  1911  001126  063B               	decf	___ftadd@exp1,f,c
  1912  001128  503B               	movf	___ftadd@exp1,w,c
  1913  00112A  183A               	xorwf	___ftadd@exp2,w,c
  1914  00112C  B4D8               	btfsc	status,2,c
  1915  00112E  D00D               	goto	l2263
  1916  001130  0639               	decf	___ftadd@sign,f,c
  1917  001132  C039  F036         	movff	___ftadd@sign,??___ftadd
  1918  001136  0E07               	movlw	7
  1919  001138  1636               	andwf	??___ftadd,f,c
  1920  00113A  B4D8               	btfsc	status,2,c
  1921  00113C  D006               	goto	l2263
  1922  00113E  D7EF               	goto	l2255
  1923  001140                     l2261:
  1924  001140  90D8               	bcf	status,0,c
  1925  001142  3235               	rrcf	___ftadd@f2+2,f,c
  1926  001144  3234               	rrcf	___ftadd@f2+1,f,c
  1927  001146  3233               	rrcf	___ftadd@f2,f,c
  1928  001148  2A3A               	incf	___ftadd@exp2,f,c
  1929  00114A                     l2263:
  1930  00114A  503A               	movf	___ftadd@exp2,w,c
  1931  00114C  183B               	xorwf	___ftadd@exp1,w,c
  1932  00114E  A4D8               	btfss	status,2,c
  1933  001150  D7F7               	goto	l2261
  1934  001152                     l578:
  1935  001152  AE39               	btfss	___ftadd@sign,7,c
  1936  001154  D00C               	goto	l587
  1937  001156  0EFF               	movlw	255
  1938  001158  1A30               	xorwf	___ftadd@f1,f,c
  1939  00115A  0EFF               	movlw	255
  1940  00115C  1A31               	xorwf	___ftadd@f1+1,f,c
  1941  00115E  0EFF               	movlw	255
  1942  001160  1A32               	xorwf	___ftadd@f1+2,f,c
  1943  001162  0E01               	movlw	1
  1944  001164  2630               	addwf	___ftadd@f1,f,c
  1945  001166  0E00               	movlw	0
  1946  001168  2231               	addwfc	___ftadd@f1+1,f,c
  1947  00116A  0E00               	movlw	0
  1948  00116C  2232               	addwfc	___ftadd@f1+2,f,c
  1949  00116E                     l587:
  1950  00116E  AC39               	btfss	___ftadd@sign,6,c
  1951  001170  D00C               	goto	l2269
  1952  001172  0EFF               	movlw	255
  1953  001174  1A33               	xorwf	___ftadd@f2,f,c
  1954  001176  0EFF               	movlw	255
  1955  001178  1A34               	xorwf	___ftadd@f2+1,f,c
  1956  00117A  0EFF               	movlw	255
  1957  00117C  1A35               	xorwf	___ftadd@f2+2,f,c
  1958  00117E  0E01               	movlw	1
  1959  001180  2633               	addwf	___ftadd@f2,f,c
  1960  001182  0E00               	movlw	0
  1961  001184  2234               	addwfc	___ftadd@f2+1,f,c
  1962  001186  0E00               	movlw	0
  1963  001188  2235               	addwfc	___ftadd@f2+2,f,c
  1964  00118A                     l2269:
  1965  00118A  0E00               	movlw	0
  1966  00118C  6E39               	movwf	___ftadd@sign,c
  1967  00118E  5030               	movf	___ftadd@f1,w,c
  1968  001190  2633               	addwf	___ftadd@f2,f,c
  1969  001192  5031               	movf	___ftadd@f1+1,w,c
  1970  001194  2234               	addwfc	___ftadd@f2+1,f,c
  1971  001196  5032               	movf	___ftadd@f1+2,w,c
  1972  001198  2235               	addwfc	___ftadd@f2+2,f,c
  1973  00119A  AE35               	btfss	___ftadd@f2+2,7,c
  1974  00119C  D00E               	goto	l2279
  1975  00119E  0EFF               	movlw	255
  1976  0011A0  1A33               	xorwf	___ftadd@f2,f,c
  1977  0011A2  0EFF               	movlw	255
  1978  0011A4  1A34               	xorwf	___ftadd@f2+1,f,c
  1979  0011A6  0EFF               	movlw	255
  1980  0011A8  1A35               	xorwf	___ftadd@f2+2,f,c
  1981  0011AA  0E01               	movlw	1
  1982  0011AC  2633               	addwf	___ftadd@f2,f,c
  1983  0011AE  0E00               	movlw	0
  1984  0011B0  2234               	addwfc	___ftadd@f2+1,f,c
  1985  0011B2  0E00               	movlw	0
  1986  0011B4  2235               	addwfc	___ftadd@f2+2,f,c
  1987  0011B6  0E01               	movlw	1
  1988  0011B8  6E39               	movwf	___ftadd@sign,c
  1989  0011BA                     l2279:
  1990  0011BA  C033  F015         	movff	___ftadd@f2,___ftpack@arg
  1991  0011BE  C034  F016         	movff	___ftadd@f2+1,___ftpack@arg+1
  1992  0011C2  C035  F017         	movff	___ftadd@f2+2,___ftpack@arg+2
  1993  0011C6  C03B  F018         	movff	___ftadd@exp1,___ftpack@exp
  1994  0011CA  C039  F019         	movff	___ftadd@sign,___ftpack@sign
  1995  0011CE  EC69  F00B         	call	___ftpack	;wreg free
  1996  0011D2  C015  F030         	movff	?___ftpack,?___ftadd
  1997  0011D6  C016  F031         	movff	?___ftpack+1,?___ftadd+1
  1998  0011DA  C017  F032         	movff	?___ftpack+2,?___ftadd+2
  1999  0011DE  0012               	return	
  2000  0011E0                     __end_of___ftadd:
  2001                           	opt stack 0
  2002                           tblptru	equ	0xFF8
  2003                           tblptrh	equ	0xFF7
  2004                           tblptrl	equ	0xFF6
  2005                           tablat	equ	0xFF5
  2006                           intcon	equ	0xFF2
  2007                           postinc0	equ	0xFEE
  2008                           wreg	equ	0xFE8
  2009                           postdec1	equ	0xFE5
  2010                           fsr1l	equ	0xFE1
  2011                           status	equ	0xFD8
  2012                           
  2013 ;; *************** function _getCarPower *****************
  2014 ;; Defined at:
  2015 ;;		line 33 in file "carseat.c"
  2016 ;; Parameters:    Size  Location     Type
  2017 ;;		None
  2018 ;; Auto vars:     Size  Location     Type
  2019 ;;		None
  2020 ;; Return value:  Size  Location     Type
  2021 ;;                  1    wreg      unsigned char 
  2022 ;; Registers used:
  2023 ;;		wreg, status,2, status,0, cstack
  2024 ;; Tracked objects:
  2025 ;;		On entry : 0/0
  2026 ;;		On exit  : 0/0
  2027 ;;		Unchanged: 0/0
  2028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2033 ;;Total ram usage:        0 bytes
  2034 ;; Hardware stack levels used:    1
  2035 ;; Hardware stack levels required when called:    5
  2036 ;; This function calls:
  2037 ;;		_ADC_getCarPower
  2038 ;; This function is called by:
  2039 ;;		_main
  2040 ;; This function uses a non-reentrant model
  2041 ;;
  2042                           
  2043                           	psect	text13
  2044  001BCE                     __ptext13:
  2045                           	opt stack 0
  2046  001BCE                     _getCarPower:
  2047                           	opt stack 25
  2048                           
  2049                           ;carseat.c: 36: return ADC_getCarPower();
  2050                           
  2051                           ;incstack = 0
  2052  001BCE  EC80  F00A         	call	_ADC_getCarPower	;wreg free
  2053  001BD2  0012               	return	
  2054  001BD4                     __end_of_getCarPower:
  2055                           	opt stack 0
  2056                           tblptru	equ	0xFF8
  2057                           tblptrh	equ	0xFF7
  2058                           tblptrl	equ	0xFF6
  2059                           tablat	equ	0xFF5
  2060                           intcon	equ	0xFF2
  2061                           postinc0	equ	0xFEE
  2062                           wreg	equ	0xFE8
  2063                           postdec1	equ	0xFE5
  2064                           fsr1l	equ	0xFE1
  2065                           status	equ	0xFD8
  2066                           
  2067 ;; *************** function _ADC_getCarPower *****************
  2068 ;; Defined at:
  2069 ;;		line 71 in file "atod_converter.c"
  2070 ;; Parameters:    Size  Location     Type
  2071 ;;		None
  2072 ;; Auto vars:     Size  Location     Type
  2073 ;;  Vref            3    0[BANK0 ] float 
  2074 ;;  H_byte          2    7[BANK0 ] short 
  2075 ;;  stepNumber      2    5[BANK0 ] short 
  2076 ;;  L_byte          2    3[BANK0 ] short 
  2077 ;; Return value:  Size  Location     Type
  2078 ;;                  1    wreg      unsigned char 
  2079 ;; Registers used:
  2080 ;;		wreg, status,2, status,0, cstack
  2081 ;; Tracked objects:
  2082 ;;		On entry : 0/0
  2083 ;;		On exit  : 0/0
  2084 ;;		Unchanged: 0/0
  2085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2087 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2089 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2090 ;;Total ram usage:        9 bytes
  2091 ;; Hardware stack levels used:    1
  2092 ;; Hardware stack levels required when called:    4
  2093 ;; This function calls:
  2094 ;;		___awtoft
  2095 ;;		___ftdiv
  2096 ;;		___ftge
  2097 ;;		___ftmul
  2098 ;; This function is called by:
  2099 ;;		_getCarPower
  2100 ;; This function uses a non-reentrant model
  2101 ;;
  2102                           
  2103                           	psect	text14
  2104  001500                     __ptext14:
  2105                           	opt stack 0
  2106  001500                     _ADC_getCarPower:
  2107                           	opt stack 25
  2108                           
  2109                           ;atod_converter.c: 76: short L_byte = 0;
  2110                           
  2111                           ;incstack = 0
  2112  001500  0E00               	movlw	0
  2113  001502  0100               	movlb	0	; () banked
  2114  001504  6FA4               	movwf	(ADC_getCarPower@L_byte+1)& (0+255),b
  2115  001506  0E00               	movlw	0
  2116  001508  6FA3               	movwf	ADC_getCarPower@L_byte& (0+255),b
  2117                           
  2118                           ;atod_converter.c: 77: short H_byte = 0;
  2119  00150A  0E00               	movlw	0
  2120  00150C  0100               	movlb	0	; () banked
  2121  00150E  6FA8               	movwf	(ADC_getCarPower@H_byte+1)& (0+255),b
  2122  001510  0E00               	movlw	0
  2123  001512  6FA7               	movwf	ADC_getCarPower@H_byte& (0+255),b
  2124                           
  2125                           ;atod_converter.c: 78: short stepNumber = 0;
  2126  001514  0E00               	movlw	0
  2127  001516  0100               	movlb	0	; () banked
  2128  001518  6FA6               	movwf	(ADC_getCarPower@stepNumber+1)& (0+255),b
  2129  00151A  0E00               	movlw	0
  2130  00151C  6FA5               	movwf	ADC_getCarPower@stepNumber& (0+255),b
  2131                           
  2132                           ;atod_converter.c: 79: float Vref = 0;
  2133  00151E  0E00               	movlw	0
  2134  001520  0100               	movlb	0	; () banked
  2135  001522  6FA0               	movwf	ADC_getCarPower@Vref& (0+255),b
  2136  001524  0E00               	movlw	0
  2137  001526  0100               	movlb	0	; () banked
  2138  001528  6FA1               	movwf	(ADC_getCarPower@Vref+1)& (0+255),b
  2139  00152A  0E00               	movlw	0
  2140  00152C  0100               	movlb	0	; () banked
  2141  00152E  6FA2               	movwf	(ADC_getCarPower@Vref+2)& (0+255),b
  2142                           
  2143                           ; BSR set to: 0
  2144                           ;atod_converter.c: 81: ADCON0bits.ADON = 1;
  2145  001530  80C2               	bsf	4034,0,c	;volatile
  2146                           
  2147                           ;atod_converter.c: 82: ADCON0bits.CHS = 9;
  2148  001532  50C2               	movf	4034,w,c	;volatile
  2149  001534  0BC3               	andlw	-61
  2150  001536  0924               	iorlw	36
  2151  001538  6EC2               	movwf	4034,c	;volatile
  2152                           
  2153                           ; BSR set to: 0
  2154                           ;atod_converter.c: 83: ADCON0bits.GODONE = 1;
  2155  00153A  82C2               	bsf	4034,1,c	;volatile
  2156  00153C                     l276:
  2157  00153C  B2C2               	btfsc	4034,1,c	;volatile
  2158  00153E  D7FE               	goto	l276
  2159                           
  2160                           ;atod_converter.c: 85: ADCON0bits.ADON = 0;
  2161  001540  90C2               	bcf	4034,0,c	;volatile
  2162                           
  2163                           ;atod_converter.c: 87: L_byte = ADRESL;
  2164  001542  CFC3 F0A3          	movff	4035,ADC_getCarPower@L_byte	;volatile
  2165  001546  0100               	movlb	0	; () banked
  2166  001548  6BA4               	clrf	(ADC_getCarPower@L_byte+1)& (0+255),b
  2167                           
  2168                           ;atod_converter.c: 88: H_byte = ADRESH;
  2169  00154A  CFC4 F0A7          	movff	4036,ADC_getCarPower@H_byte	;volatile
  2170  00154E  0100               	movlb	0	; () banked
  2171  001550  6BA8               	clrf	(ADC_getCarPower@H_byte+1)& (0+255),b
  2172                           
  2173                           ; BSR set to: 0
  2174                           ;atod_converter.c: 90: H_byte = H_byte<<8;
  2175  001552  0100               	movlb	0	; () banked
  2176  001554  51A7               	movf	ADC_getCarPower@H_byte& (0+255),w,b
  2177  001556  0100               	movlb	0	; () banked
  2178  001558  6FA8               	movwf	(ADC_getCarPower@H_byte+1)& (0+255),b
  2179  00155A  6BA7               	clrf	ADC_getCarPower@H_byte& (0+255),b
  2180                           
  2181                           ; BSR set to: 0
  2182                           ;atod_converter.c: 92: stepNumber = (H_byte | L_byte);
  2183  00155C  0100               	movlb	0	; () banked
  2184  00155E  51A3               	movf	ADC_getCarPower@L_byte& (0+255),w,b
  2185  001560  0100               	movlb	0	; () banked
  2186  001562  11A7               	iorwf	ADC_getCarPower@H_byte& (0+255),w,b
  2187  001564  0100               	movlb	0	; () banked
  2188  001566  6FA5               	movwf	ADC_getCarPower@stepNumber& (0+255),b
  2189  001568  0100               	movlb	0	; () banked
  2190  00156A  51A4               	movf	(ADC_getCarPower@L_byte+1)& (0+255),w,b
  2191  00156C  0100               	movlb	0	; () banked
  2192  00156E  11A8               	iorwf	(ADC_getCarPower@H_byte+1)& (0+255),w,b
  2193  001570  0100               	movlb	0	; () banked
  2194  001572  6FA6               	movwf	(ADC_getCarPower@stepNumber+1)& (0+255),b
  2195                           
  2196                           ; BSR set to: 0
  2197                           ;atod_converter.c: 95: Vref = (stepNumber * 3.3) / (float)1024;
  2198  001574  0E33               	movlw	51
  2199  001576  6E24               	movwf	___ftmul@f2,c
  2200  001578  0E53               	movlw	83
  2201  00157A  6E25               	movwf	___ftmul@f2+1,c
  2202  00157C  0E40               	movlw	64
  2203  00157E  6E26               	movwf	___ftmul@f2+2,c
  2204  001580  C0A5  F01D         	movff	ADC_getCarPower@stepNumber,___awtoft@c
  2205  001584  C0A6  F01E         	movff	ADC_getCarPower@stepNumber+1,___awtoft@c+1
  2206  001588  ECE8  F00C         	call	___awtoft	;wreg free
  2207  00158C  C01D  F021         	movff	?___awtoft,___ftmul@f1
  2208  001590  C01E  F022         	movff	?___awtoft+1,___ftmul@f1+1
  2209  001594  C01F  F023         	movff	?___awtoft+2,___ftmul@f1+2
  2210  001598  EC06  F00A         	call	___ftmul	;wreg free
  2211  00159C  C021  F030         	movff	?___ftmul,___ftdiv@f1
  2212  0015A0  C022  F031         	movff	?___ftmul+1,___ftdiv@f1+1
  2213  0015A4  C023  F032         	movff	?___ftmul+2,___ftdiv@f1+2
  2214  0015A8  0E00               	movlw	0
  2215  0015AA  6E33               	movwf	___ftdiv@f2,c
  2216  0015AC  0E80               	movlw	128
  2217  0015AE  6E34               	movwf	___ftdiv@f2+1,c
  2218  0015B0  0E44               	movlw	68
  2219  0015B2  6E35               	movwf	___ftdiv@f2+2,c
  2220  0015B4  ECF6  F00A         	call	___ftdiv	;wreg free
  2221  0015B8  C030  F0A0         	movff	?___ftdiv,ADC_getCarPower@Vref
  2222  0015BC  C031  F0A1         	movff	?___ftdiv+1,ADC_getCarPower@Vref+1
  2223  0015C0  C032  F0A2         	movff	?___ftdiv+2,ADC_getCarPower@Vref+2
  2224                           
  2225                           ;atod_converter.c: 98: if(Vref >= .9)
  2226  0015C4  C0A0  F015         	movff	ADC_getCarPower@Vref,___ftge@ff1
  2227  0015C8  C0A1  F016         	movff	ADC_getCarPower@Vref+1,___ftge@ff1+1
  2228  0015CC  C0A2  F017         	movff	ADC_getCarPower@Vref+2,___ftge@ff1+2
  2229  0015D0  0E66               	movlw	102
  2230  0015D2  6E18               	movwf	___ftge@ff2,c
  2231  0015D4  0E66               	movlw	102
  2232  0015D6  6E19               	movwf	___ftge@ff2+1,c
  2233  0015D8  0E3F               	movlw	63
  2234  0015DA  6E1A               	movwf	___ftge@ff2+2,c
  2235  0015DC  EC09  F00C         	call	___ftge	;wreg free
  2236  0015E0  A0D8               	btfss	status,0,c
  2237  0015E2  D002               	goto	l2471
  2238                           
  2239                           ;atod_converter.c: 99: return 1;
  2240  0015E4  0E01               	movlw	1
  2241  0015E6  0012               	return	
  2242  0015E8                     l2471:
  2243                           
  2244                           ;atod_converter.c: 100: return 0;
  2245  0015E8  0E00               	movlw	0
  2246  0015EA  0012               	return	
  2247  0015EC                     __end_of_ADC_getCarPower:
  2248                           	opt stack 0
  2249                           tblptru	equ	0xFF8
  2250                           tblptrh	equ	0xFF7
  2251                           tblptrl	equ	0xFF6
  2252                           tablat	equ	0xFF5
  2253                           intcon	equ	0xFF2
  2254                           postinc0	equ	0xFEE
  2255                           wreg	equ	0xFE8
  2256                           postdec1	equ	0xFE5
  2257                           fsr1l	equ	0xFE1
  2258                           status	equ	0xFD8
  2259                           
  2260 ;; *************** function ___ftmul *****************
  2261 ;; Defined at:
  2262 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftmul.c"
  2263 ;; Parameters:    Size  Location     Type
  2264 ;;  f1              3   32[COMRAM] float 
  2265 ;;  f2              3   35[COMRAM] float 
  2266 ;; Auto vars:     Size  Location     Type
  2267 ;;  f3_as_produc    3   42[COMRAM] unsigned um
  2268 ;;  sign            1   46[COMRAM] unsigned char 
  2269 ;;  cntr            1   45[COMRAM] unsigned char 
  2270 ;;  exp             1   41[COMRAM] unsigned char 
  2271 ;; Return value:  Size  Location     Type
  2272 ;;                  3   32[COMRAM] float 
  2273 ;; Registers used:
  2274 ;;		wreg, status,2, status,0, cstack
  2275 ;; Tracked objects:
  2276 ;;		On entry : 0/0
  2277 ;;		On exit  : 0/0
  2278 ;;		Unchanged: 0/0
  2279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2280 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2281 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2282 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2283 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2284 ;;Total ram usage:       15 bytes
  2285 ;; Hardware stack levels used:    1
  2286 ;; Hardware stack levels required when called:    3
  2287 ;; This function calls:
  2288 ;;		___ftpack
  2289 ;; This function is called by:
  2290 ;;		_ADC_getTemperature
  2291 ;;		_ADC_getCarPower
  2292 ;; This function uses a non-reentrant model
  2293 ;;
  2294                           
  2295                           	psect	text15
  2296  00140C                     __ptext15:
  2297                           	opt stack 0
  2298  00140C                     ___ftmul:
  2299                           	opt stack 25
  2300                           
  2301                           ;incstack = 0
  2302  00140C  C023  F027         	movff	___ftmul@f1+2,??___ftmul
  2303  001410  6A28               	clrf	(??___ftmul+1)& (0+255),c
  2304  001412  6A29               	clrf	(??___ftmul+2)& (0+255),c
  2305  001414  3422               	rlcf	___ftmul@f1+1,w,c
  2306  001416  3627               	rlcf	??___ftmul& (0+255),f,c
  2307  001418  E301               	bnc	u2061
  2308  00141A  8028               	bsf	(??___ftmul+1)& (0+255),0,c
  2309  00141C                     u2061:
  2310  00141C  5027               	movf	??___ftmul,w,c
  2311  00141E  6E2A               	movwf	___ftmul@exp,c
  2312  001420  502A               	movf	___ftmul@exp,w,c
  2313  001422  A4D8               	btfss	status,2,c
  2314  001424  D007               	goto	l2335
  2315  001426  0E00               	movlw	0
  2316  001428  6E21               	movwf	?___ftmul,c
  2317  00142A  0E00               	movlw	0
  2318  00142C  6E22               	movwf	?___ftmul+1,c
  2319  00142E  0E00               	movlw	0
  2320  001430  6E23               	movwf	?___ftmul+2,c
  2321  001432  0012               	return	
  2322  001434                     l2335:
  2323  001434  C026  F027         	movff	___ftmul@f2+2,??___ftmul
  2324  001438  6A28               	clrf	(??___ftmul+1)& (0+255),c
  2325  00143A  6A29               	clrf	(??___ftmul+2)& (0+255),c
  2326  00143C  3425               	rlcf	___ftmul@f2+1,w,c
  2327  00143E  3627               	rlcf	??___ftmul& (0+255),f,c
  2328  001440  E301               	bnc	u2081
  2329  001442  8028               	bsf	(??___ftmul+1)& (0+255),0,c
  2330  001444                     u2081:
  2331  001444  5027               	movf	??___ftmul,w,c
  2332  001446  6E2F               	movwf	___ftmul@sign,c
  2333  001448  502F               	movf	___ftmul@sign,w,c
  2334  00144A  A4D8               	btfss	status,2,c
  2335  00144C  D007               	goto	l2341
  2336  00144E  0E00               	movlw	0
  2337  001450  6E21               	movwf	?___ftmul,c
  2338  001452  0E00               	movlw	0
  2339  001454  6E22               	movwf	?___ftmul+1,c
  2340  001456  0E00               	movlw	0
  2341  001458  6E23               	movwf	?___ftmul+2,c
  2342  00145A  0012               	return	
  2343  00145C                     l2341:
  2344  00145C  502F               	movf	___ftmul@sign,w,c
  2345  00145E  0F7B               	addlw	123
  2346  001460  262A               	addwf	___ftmul@exp,f,c
  2347  001462  C023  F02F         	movff	___ftmul@f1+2,___ftmul@sign
  2348  001466  5026               	movf	___ftmul@f2+2,w,c
  2349  001468  1A2F               	xorwf	___ftmul@sign,f,c
  2350  00146A  0E80               	movlw	128
  2351  00146C  162F               	andwf	___ftmul@sign,f,c
  2352  00146E  8E22               	bsf	___ftmul@f1+1,7,c
  2353  001470  8E25               	bsf	___ftmul@f2+1,7,c
  2354  001472  0EFF               	movlw	255
  2355  001474  1624               	andwf	___ftmul@f2,f,c
  2356  001476  0EFF               	movlw	255
  2357  001478  1625               	andwf	___ftmul@f2+1,f,c
  2358  00147A  0E00               	movlw	0
  2359  00147C  1626               	andwf	___ftmul@f2+2,f,c
  2360  00147E  0E00               	movlw	0
  2361  001480  6E2B               	movwf	___ftmul@f3_as_product,c
  2362  001482  0E00               	movlw	0
  2363  001484  6E2C               	movwf	___ftmul@f3_as_product+1,c
  2364  001486  0E00               	movlw	0
  2365  001488  6E2D               	movwf	___ftmul@f3_as_product+2,c
  2366  00148A  0E07               	movlw	7
  2367  00148C  6E2E               	movwf	___ftmul@cntr,c
  2368  00148E                     l2355:
  2369  00148E  A021               	btfss	___ftmul@f1,0,c
  2370  001490  D006               	goto	l2359
  2371  001492  5024               	movf	___ftmul@f2,w,c
  2372  001494  262B               	addwf	___ftmul@f3_as_product,f,c
  2373  001496  5025               	movf	___ftmul@f2+1,w,c
  2374  001498  222C               	addwfc	___ftmul@f3_as_product+1,f,c
  2375  00149A  5026               	movf	___ftmul@f2+2,w,c
  2376  00149C  222D               	addwfc	___ftmul@f3_as_product+2,f,c
  2377  00149E                     l2359:
  2378  00149E  90D8               	bcf	status,0,c
  2379  0014A0  3223               	rrcf	___ftmul@f1+2,f,c
  2380  0014A2  3222               	rrcf	___ftmul@f1+1,f,c
  2381  0014A4  3221               	rrcf	___ftmul@f1,f,c
  2382  0014A6  90D8               	bcf	status,0,c
  2383  0014A8  3624               	rlcf	___ftmul@f2,f,c
  2384  0014AA  3625               	rlcf	___ftmul@f2+1,f,c
  2385  0014AC  3626               	rlcf	___ftmul@f2+2,f,c
  2386  0014AE  2E2E               	decfsz	___ftmul@cntr,f,c
  2387  0014B0  D7EE               	goto	l2355
  2388  0014B2  0E09               	movlw	9
  2389  0014B4  6E2E               	movwf	___ftmul@cntr,c
  2390  0014B6                     l2365:
  2391  0014B6  A021               	btfss	___ftmul@f1,0,c
  2392  0014B8  D006               	goto	l2369
  2393  0014BA  5024               	movf	___ftmul@f2,w,c
  2394  0014BC  262B               	addwf	___ftmul@f3_as_product,f,c
  2395  0014BE  5025               	movf	___ftmul@f2+1,w,c
  2396  0014C0  222C               	addwfc	___ftmul@f3_as_product+1,f,c
  2397  0014C2  5026               	movf	___ftmul@f2+2,w,c
  2398  0014C4  222D               	addwfc	___ftmul@f3_as_product+2,f,c
  2399  0014C6                     l2369:
  2400  0014C6  90D8               	bcf	status,0,c
  2401  0014C8  3223               	rrcf	___ftmul@f1+2,f,c
  2402  0014CA  3222               	rrcf	___ftmul@f1+1,f,c
  2403  0014CC  3221               	rrcf	___ftmul@f1,f,c
  2404  0014CE  90D8               	bcf	status,0,c
  2405  0014D0  322D               	rrcf	___ftmul@f3_as_product+2,f,c
  2406  0014D2  322C               	rrcf	___ftmul@f3_as_product+1,f,c
  2407  0014D4  322B               	rrcf	___ftmul@f3_as_product,f,c
  2408  0014D6  2E2E               	decfsz	___ftmul@cntr,f,c
  2409  0014D8  D7EE               	goto	l2365
  2410  0014DA  C02B  F015         	movff	___ftmul@f3_as_product,___ftpack@arg
  2411  0014DE  C02C  F016         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2412  0014E2  C02D  F017         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2413  0014E6  C02A  F018         	movff	___ftmul@exp,___ftpack@exp
  2414  0014EA  C02F  F019         	movff	___ftmul@sign,___ftpack@sign
  2415  0014EE  EC69  F00B         	call	___ftpack	;wreg free
  2416  0014F2  C015  F021         	movff	?___ftpack,?___ftmul
  2417  0014F6  C016  F022         	movff	?___ftpack+1,?___ftmul+1
  2418  0014FA  C017  F023         	movff	?___ftpack+2,?___ftmul+2
  2419  0014FE  0012               	return	
  2420  001500                     __end_of___ftmul:
  2421                           	opt stack 0
  2422                           tblptru	equ	0xFF8
  2423                           tblptrh	equ	0xFF7
  2424                           tblptrl	equ	0xFF6
  2425                           tablat	equ	0xFF5
  2426                           intcon	equ	0xFF2
  2427                           postinc0	equ	0xFEE
  2428                           wreg	equ	0xFE8
  2429                           postdec1	equ	0xFE5
  2430                           fsr1l	equ	0xFE1
  2431                           status	equ	0xFD8
  2432                           
  2433 ;; *************** function ___ftge *****************
  2434 ;; Defined at:
  2435 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftge.c"
  2436 ;; Parameters:    Size  Location     Type
  2437 ;;  ff1             3   20[COMRAM] float 
  2438 ;;  ff2             3   23[COMRAM] float 
  2439 ;; Auto vars:     Size  Location     Type
  2440 ;;		None
  2441 ;; Return value:  Size  Location     Type
  2442 ;;		None               void
  2443 ;; Registers used:
  2444 ;;		wreg, status,2, status,0
  2445 ;; Tracked objects:
  2446 ;;		On entry : 0/0
  2447 ;;		On exit  : 0/0
  2448 ;;		Unchanged: 0/0
  2449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2450 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2452 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2453 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2454 ;;Total ram usage:        9 bytes
  2455 ;; Hardware stack levels used:    1
  2456 ;; Hardware stack levels required when called:    2
  2457 ;; This function calls:
  2458 ;;		Nothing
  2459 ;; This function is called by:
  2460 ;;		_ADC_getCarPower
  2461 ;; This function uses a non-reentrant model
  2462 ;;
  2463                           
  2464                           	psect	text16
  2465  001812                     __ptext16:
  2466                           	opt stack 0
  2467  001812                     ___ftge:
  2468                           	opt stack 26
  2469                           
  2470                           ;incstack = 0
  2471  001812  AE17               	btfss	___ftge@ff1+2,7,c
  2472  001814  D016               	goto	l2393
  2473  001816  C015  F01B         	movff	___ftge@ff1,??___ftge
  2474  00181A  C016  F01C         	movff	___ftge@ff1+1,??___ftge+1
  2475  00181E  C017  F01D         	movff	___ftge@ff1+2,??___ftge+2
  2476  001822  1E1B               	comf	??___ftge,f,c
  2477  001824  1E1C               	comf	??___ftge+1,f,c
  2478  001826  1E1D               	comf	??___ftge+2,f,c
  2479  001828  2A1B               	incf	??___ftge,f,c
  2480  00182A  0E00               	movlw	0
  2481  00182C  221C               	addwfc	??___ftge+1,f,c
  2482  00182E  221D               	addwfc	??___ftge+2,f,c
  2483  001830  0E00               	movlw	0
  2484  001832  241B               	addwf	??___ftge,w,c
  2485  001834  6E15               	movwf	___ftge@ff1,c
  2486  001836  0E00               	movlw	0
  2487  001838  201C               	addwfc	??___ftge+1,w,c
  2488  00183A  6E16               	movwf	___ftge@ff1+1,c
  2489  00183C  0E80               	movlw	128
  2490  00183E  201D               	addwfc	??___ftge+2,w,c
  2491  001840  6E17               	movwf	___ftge@ff1+2,c
  2492  001842                     l2393:
  2493  001842  AE1A               	btfss	___ftge@ff2+2,7,c
  2494  001844  D016               	goto	l2397
  2495  001846  C018  F01B         	movff	___ftge@ff2,??___ftge
  2496  00184A  C019  F01C         	movff	___ftge@ff2+1,??___ftge+1
  2497  00184E  C01A  F01D         	movff	___ftge@ff2+2,??___ftge+2
  2498  001852  1E1B               	comf	??___ftge,f,c
  2499  001854  1E1C               	comf	??___ftge+1,f,c
  2500  001856  1E1D               	comf	??___ftge+2,f,c
  2501  001858  2A1B               	incf	??___ftge,f,c
  2502  00185A  0E00               	movlw	0
  2503  00185C  221C               	addwfc	??___ftge+1,f,c
  2504  00185E  221D               	addwfc	??___ftge+2,f,c
  2505  001860  0E00               	movlw	0
  2506  001862  241B               	addwf	??___ftge,w,c
  2507  001864  6E18               	movwf	___ftge@ff2,c
  2508  001866  0E00               	movlw	0
  2509  001868  201C               	addwfc	??___ftge+1,w,c
  2510  00186A  6E19               	movwf	___ftge@ff2+1,c
  2511  00186C  0E80               	movlw	128
  2512  00186E  201D               	addwfc	??___ftge+2,w,c
  2513  001870  6E1A               	movwf	___ftge@ff2+2,c
  2514  001872                     l2397:
  2515  001872  0E00               	movlw	0
  2516  001874  1A15               	xorwf	___ftge@ff1,f,c
  2517  001876  0E00               	movlw	0
  2518  001878  1A16               	xorwf	___ftge@ff1+1,f,c
  2519  00187A  0E80               	movlw	128
  2520  00187C  1A17               	xorwf	___ftge@ff1+2,f,c
  2521  00187E  0E00               	movlw	0
  2522  001880  1A18               	xorwf	___ftge@ff2,f,c
  2523  001882  0E00               	movlw	0
  2524  001884  1A19               	xorwf	___ftge@ff2+1,f,c
  2525  001886  0E80               	movlw	128
  2526  001888  1A1A               	xorwf	___ftge@ff2+2,f,c
  2527  00188A  5018               	movf	___ftge@ff2,w,c
  2528  00188C  5C15               	subwf	___ftge@ff1,w,c
  2529  00188E  5019               	movf	___ftge@ff2+1,w,c
  2530  001890  5816               	subwfb	___ftge@ff1+1,w,c
  2531  001892  501A               	movf	___ftge@ff2+2,w,c
  2532  001894  5817               	subwfb	___ftge@ff1+2,w,c
  2533  001896  B0D8               	btfsc	status,0,c
  2534  001898  D002               	goto	l2403
  2535  00189A  90D8               	bcf	status,0,c
  2536  00189C  0012               	return	
  2537  00189E                     l2403:
  2538  00189E  80D8               	bsf	status,0,c
  2539  0018A0  0012               	return	
  2540  0018A2                     __end_of___ftge:
  2541                           	opt stack 0
  2542                           tblptru	equ	0xFF8
  2543                           tblptrh	equ	0xFF7
  2544                           tblptrl	equ	0xFF6
  2545                           tablat	equ	0xFF5
  2546                           intcon	equ	0xFF2
  2547                           postinc0	equ	0xFEE
  2548                           wreg	equ	0xFE8
  2549                           postdec1	equ	0xFE5
  2550                           fsr1l	equ	0xFE1
  2551                           status	equ	0xFD8
  2552                           
  2553 ;; *************** function ___ftdiv *****************
  2554 ;; Defined at:
  2555 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftdiv.c"
  2556 ;; Parameters:    Size  Location     Type
  2557 ;;  f1              3   47[COMRAM] float 
  2558 ;;  f2              3   50[COMRAM] float 
  2559 ;; Auto vars:     Size  Location     Type
  2560 ;;  f3              3   57[COMRAM] float 
  2561 ;;  sign            1   61[COMRAM] unsigned char 
  2562 ;;  exp             1   60[COMRAM] unsigned char 
  2563 ;;  cntr            1   56[COMRAM] unsigned char 
  2564 ;; Return value:  Size  Location     Type
  2565 ;;                  3   47[COMRAM] float 
  2566 ;; Registers used:
  2567 ;;		wreg, status,2, status,0, cstack
  2568 ;; Tracked objects:
  2569 ;;		On entry : 0/0
  2570 ;;		On exit  : 0/0
  2571 ;;		Unchanged: 0/0
  2572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2573 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2574 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2575 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2576 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2577 ;;Total ram usage:       15 bytes
  2578 ;; Hardware stack levels used:    1
  2579 ;; Hardware stack levels required when called:    3
  2580 ;; This function calls:
  2581 ;;		___ftpack
  2582 ;; This function is called by:
  2583 ;;		_ADC_getCarPower
  2584 ;; This function uses a non-reentrant model
  2585 ;;
  2586                           
  2587                           	psect	text17
  2588  0015EC                     __ptext17:
  2589                           	opt stack 0
  2590  0015EC                     ___ftdiv:
  2591                           	opt stack 25
  2592                           
  2593                           ;incstack = 0
  2594  0015EC  C032  F036         	movff	___ftdiv@f1+2,??___ftdiv
  2595  0015F0  6A37               	clrf	(??___ftdiv+1)& (0+255),c
  2596  0015F2  6A38               	clrf	(??___ftdiv+2)& (0+255),c
  2597  0015F4  3431               	rlcf	___ftdiv@f1+1,w,c
  2598  0015F6  3636               	rlcf	??___ftdiv& (0+255),f,c
  2599  0015F8  E301               	bnc	u2011
  2600  0015FA  8037               	bsf	(??___ftdiv+1)& (0+255),0,c
  2601  0015FC                     u2011:
  2602  0015FC  5036               	movf	??___ftdiv,w,c
  2603  0015FE  6E3D               	movwf	___ftdiv@exp,c
  2604  001600  503D               	movf	___ftdiv@exp,w,c
  2605  001602  A4D8               	btfss	status,2,c
  2606  001604  D007               	goto	l2289
  2607  001606  0E00               	movlw	0
  2608  001608  6E30               	movwf	?___ftdiv,c
  2609  00160A  0E00               	movlw	0
  2610  00160C  6E31               	movwf	?___ftdiv+1,c
  2611  00160E  0E00               	movlw	0
  2612  001610  6E32               	movwf	?___ftdiv+2,c
  2613  001612  0012               	return	
  2614  001614                     l2289:
  2615  001614  C035  F036         	movff	___ftdiv@f2+2,??___ftdiv
  2616  001618  6A37               	clrf	(??___ftdiv+1)& (0+255),c
  2617  00161A  6A38               	clrf	(??___ftdiv+2)& (0+255),c
  2618  00161C  3434               	rlcf	___ftdiv@f2+1,w,c
  2619  00161E  3636               	rlcf	??___ftdiv& (0+255),f,c
  2620  001620  E301               	bnc	u2031
  2621  001622  8037               	bsf	(??___ftdiv+1)& (0+255),0,c
  2622  001624                     u2031:
  2623  001624  5036               	movf	??___ftdiv,w,c
  2624  001626  6E3E               	movwf	___ftdiv@sign,c
  2625  001628  503E               	movf	___ftdiv@sign,w,c
  2626  00162A  A4D8               	btfss	status,2,c
  2627  00162C  D007               	goto	l2295
  2628  00162E  0E00               	movlw	0
  2629  001630  6E30               	movwf	?___ftdiv,c
  2630  001632  0E00               	movlw	0
  2631  001634  6E31               	movwf	?___ftdiv+1,c
  2632  001636  0E00               	movlw	0
  2633  001638  6E32               	movwf	?___ftdiv+2,c
  2634  00163A  0012               	return	
  2635  00163C                     l2295:
  2636  00163C  0E00               	movlw	0
  2637  00163E  6E3A               	movwf	___ftdiv@f3,c
  2638  001640  0E00               	movlw	0
  2639  001642  6E3B               	movwf	___ftdiv@f3+1,c
  2640  001644  0E00               	movlw	0
  2641  001646  6E3C               	movwf	___ftdiv@f3+2,c
  2642  001648  503E               	movf	___ftdiv@sign,w,c
  2643  00164A  0F89               	addlw	137
  2644  00164C  5E3D               	subwf	___ftdiv@exp,f,c
  2645  00164E  C032  F03E         	movff	___ftdiv@f1+2,___ftdiv@sign
  2646  001652  5035               	movf	___ftdiv@f2+2,w,c
  2647  001654  1A3E               	xorwf	___ftdiv@sign,f,c
  2648  001656  0E80               	movlw	128
  2649  001658  163E               	andwf	___ftdiv@sign,f,c
  2650  00165A  8E31               	bsf	___ftdiv@f1+1,7,c
  2651  00165C  0EFF               	movlw	255
  2652  00165E  1630               	andwf	___ftdiv@f1,f,c
  2653  001660  0EFF               	movlw	255
  2654  001662  1631               	andwf	___ftdiv@f1+1,f,c
  2655  001664  0E00               	movlw	0
  2656  001666  1632               	andwf	___ftdiv@f1+2,f,c
  2657  001668  8E34               	bsf	___ftdiv@f2+1,7,c
  2658  00166A  0EFF               	movlw	255
  2659  00166C  1633               	andwf	___ftdiv@f2,f,c
  2660  00166E  0EFF               	movlw	255
  2661  001670  1634               	andwf	___ftdiv@f2+1,f,c
  2662  001672  0E00               	movlw	0
  2663  001674  1635               	andwf	___ftdiv@f2+2,f,c
  2664  001676  0E18               	movlw	24
  2665  001678  6E39               	movwf	___ftdiv@cntr,c
  2666  00167A                     l2315:
  2667  00167A  90D8               	bcf	status,0,c
  2668  00167C  363A               	rlcf	___ftdiv@f3,f,c
  2669  00167E  363B               	rlcf	___ftdiv@f3+1,f,c
  2670  001680  363C               	rlcf	___ftdiv@f3+2,f,c
  2671  001682  5033               	movf	___ftdiv@f2,w,c
  2672  001684  5C30               	subwf	___ftdiv@f1,w,c
  2673  001686  5034               	movf	___ftdiv@f2+1,w,c
  2674  001688  5831               	subwfb	___ftdiv@f1+1,w,c
  2675  00168A  5035               	movf	___ftdiv@f2+2,w,c
  2676  00168C  5832               	subwfb	___ftdiv@f1+2,w,c
  2677  00168E  A0D8               	btfss	status,0,c
  2678  001690  D007               	goto	l598
  2679  001692  5033               	movf	___ftdiv@f2,w,c
  2680  001694  5E30               	subwf	___ftdiv@f1,f,c
  2681  001696  5034               	movf	___ftdiv@f2+1,w,c
  2682  001698  5A31               	subwfb	___ftdiv@f1+1,f,c
  2683  00169A  5035               	movf	___ftdiv@f2+2,w,c
  2684  00169C  5A32               	subwfb	___ftdiv@f1+2,f,c
  2685  00169E  803A               	bsf	___ftdiv@f3,0,c
  2686  0016A0                     l598:
  2687  0016A0  90D8               	bcf	status,0,c
  2688  0016A2  3630               	rlcf	___ftdiv@f1,f,c
  2689  0016A4  3631               	rlcf	___ftdiv@f1+1,f,c
  2690  0016A6  3632               	rlcf	___ftdiv@f1+2,f,c
  2691  0016A8  2E39               	decfsz	___ftdiv@cntr,f,c
  2692  0016AA  D7E7               	goto	l2315
  2693  0016AC  C03A  F015         	movff	___ftdiv@f3,___ftpack@arg
  2694  0016B0  C03B  F016         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2695  0016B4  C03C  F017         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2696  0016B8  C03D  F018         	movff	___ftdiv@exp,___ftpack@exp
  2697  0016BC  C03E  F019         	movff	___ftdiv@sign,___ftpack@sign
  2698  0016C0  EC69  F00B         	call	___ftpack	;wreg free
  2699  0016C4  C015  F030         	movff	?___ftpack,?___ftdiv
  2700  0016C8  C016  F031         	movff	?___ftpack+1,?___ftdiv+1
  2701  0016CC  C017  F032         	movff	?___ftpack+2,?___ftdiv+2
  2702  0016D0  0012               	return	
  2703  0016D2                     __end_of___ftdiv:
  2704                           	opt stack 0
  2705                           tblptru	equ	0xFF8
  2706                           tblptrh	equ	0xFF7
  2707                           tblptrl	equ	0xFF6
  2708                           tablat	equ	0xFF5
  2709                           intcon	equ	0xFF2
  2710                           postinc0	equ	0xFEE
  2711                           wreg	equ	0xFE8
  2712                           postdec1	equ	0xFE5
  2713                           fsr1l	equ	0xFE1
  2714                           status	equ	0xFD8
  2715                           
  2716 ;; *************** function ___awtoft *****************
  2717 ;; Defined at:
  2718 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awtoft.c"
  2719 ;; Parameters:    Size  Location     Type
  2720 ;;  c               2   28[COMRAM] int 
  2721 ;; Auto vars:     Size  Location     Type
  2722 ;;  sign            1   31[COMRAM] unsigned char 
  2723 ;; Return value:  Size  Location     Type
  2724 ;;                  3   28[COMRAM] float 
  2725 ;; Registers used:
  2726 ;;		wreg, status,2, status,0, cstack
  2727 ;; Tracked objects:
  2728 ;;		On entry : 0/0
  2729 ;;		On exit  : 0/0
  2730 ;;		Unchanged: 0/0
  2731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2732 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2733 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2735 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2736 ;;Total ram usage:        4 bytes
  2737 ;; Hardware stack levels used:    1
  2738 ;; Hardware stack levels required when called:    3
  2739 ;; This function calls:
  2740 ;;		___ftpack
  2741 ;; This function is called by:
  2742 ;;		_ADC_getTemperature
  2743 ;;		_ADC_getCarPower
  2744 ;; This function uses a non-reentrant model
  2745 ;;
  2746                           
  2747                           	psect	text18
  2748  0019D0                     __ptext18:
  2749                           	opt stack 0
  2750  0019D0                     ___awtoft:
  2751                           	opt stack 25
  2752                           
  2753                           ;incstack = 0
  2754  0019D0  0E00               	movlw	0
  2755  0019D2  6E20               	movwf	___awtoft@sign,c
  2756  0019D4  AE1E               	btfss	___awtoft@c+1,7,c
  2757  0019D6  D006               	goto	l2385
  2758  0019D8  6C1D               	negf	___awtoft@c,c
  2759  0019DA  1E1E               	comf	___awtoft@c+1,f,c
  2760  0019DC  B0D8               	btfsc	status,0,c
  2761  0019DE  2A1E               	incf	___awtoft@c+1,f,c
  2762  0019E0  0E01               	movlw	1
  2763  0019E2  6E20               	movwf	___awtoft@sign,c
  2764  0019E4                     l2385:
  2765  0019E4  C01D  F015         	movff	___awtoft@c,___ftpack@arg
  2766  0019E8  C01E  F016         	movff	___awtoft@c+1,___ftpack@arg+1
  2767  0019EC  6A17               	clrf	___ftpack@arg+2,c
  2768  0019EE  0E8E               	movlw	142
  2769  0019F0  6E18               	movwf	___ftpack@exp,c
  2770  0019F2  C020  F019         	movff	___awtoft@sign,___ftpack@sign
  2771  0019F6  EC69  F00B         	call	___ftpack	;wreg free
  2772  0019FA  C015  F01D         	movff	?___ftpack,?___awtoft
  2773  0019FE  C016  F01E         	movff	?___ftpack+1,?___awtoft+1
  2774  001A02  C017  F01F         	movff	?___ftpack+2,?___awtoft+2
  2775  001A06  0012               	return	
  2776  001A08                     __end_of___awtoft:
  2777                           	opt stack 0
  2778                           tblptru	equ	0xFF8
  2779                           tblptrh	equ	0xFF7
  2780                           tblptrl	equ	0xFF6
  2781                           tablat	equ	0xFF5
  2782                           intcon	equ	0xFF2
  2783                           postinc0	equ	0xFEE
  2784                           wreg	equ	0xFE8
  2785                           postdec1	equ	0xFE5
  2786                           fsr1l	equ	0xFE1
  2787                           status	equ	0xFD8
  2788                           
  2789 ;; *************** function ___ftpack *****************
  2790 ;; Defined at:
  2791 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\float.c"
  2792 ;; Parameters:    Size  Location     Type
  2793 ;;  arg             3   20[COMRAM] unsigned um
  2794 ;;  exp             1   23[COMRAM] unsigned char 
  2795 ;;  sign            1   24[COMRAM] unsigned char 
  2796 ;; Auto vars:     Size  Location     Type
  2797 ;;		None
  2798 ;; Return value:  Size  Location     Type
  2799 ;;                  3   20[COMRAM] float 
  2800 ;; Registers used:
  2801 ;;		wreg, status,2, status,0
  2802 ;; Tracked objects:
  2803 ;;		On entry : 0/0
  2804 ;;		On exit  : 0/0
  2805 ;;		Unchanged: 0/0
  2806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2807 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2809 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2810 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2811 ;;Total ram usage:        8 bytes
  2812 ;; Hardware stack levels used:    1
  2813 ;; Hardware stack levels required when called:    2
  2814 ;; This function calls:
  2815 ;;		Nothing
  2816 ;; This function is called by:
  2817 ;;		___awtoft
  2818 ;;		___ftadd
  2819 ;;		___ftdiv
  2820 ;;		___ftmul
  2821 ;; This function uses a non-reentrant model
  2822 ;;
  2823                           
  2824                           	psect	text19
  2825  0016D2                     __ptext19:
  2826                           	opt stack 0
  2827  0016D2                     ___ftpack:
  2828                           	opt stack 25
  2829                           
  2830                           ;incstack = 0
  2831  0016D2  5018               	movf	___ftpack@exp,w,c
  2832  0016D4  B4D8               	btfsc	status,2,c
  2833  0016D6  D005               	goto	l2181
  2834  0016D8  5015               	movf	___ftpack@arg,w,c
  2835  0016DA  1016               	iorwf	___ftpack@arg+1,w,c
  2836  0016DC  1017               	iorwf	___ftpack@arg+2,w,c
  2837  0016DE  A4D8               	btfss	status,2,c
  2838  0016E0  D00C               	goto	l2187
  2839  0016E2                     l2181:
  2840  0016E2  0E00               	movlw	0
  2841  0016E4  6E15               	movwf	?___ftpack,c
  2842  0016E6  0E00               	movlw	0
  2843  0016E8  6E16               	movwf	?___ftpack+1,c
  2844  0016EA  0E00               	movlw	0
  2845  0016EC  6E17               	movwf	?___ftpack+2,c
  2846  0016EE  0012               	return	
  2847  0016F0                     l2185:
  2848  0016F0  2A18               	incf	___ftpack@exp,f,c
  2849  0016F2  90D8               	bcf	status,0,c
  2850  0016F4  3217               	rrcf	___ftpack@arg+2,f,c
  2851  0016F6  3216               	rrcf	___ftpack@arg+1,f,c
  2852  0016F8  3215               	rrcf	___ftpack@arg,f,c
  2853  0016FA                     l2187:
  2854  0016FA  0E00               	movlw	0
  2855  0016FC  1415               	andwf	___ftpack@arg,w,c
  2856  0016FE  6E1A               	movwf	??___ftpack& (0+255),c
  2857  001700  0E00               	movlw	0
  2858  001702  1416               	andwf	___ftpack@arg+1,w,c
  2859  001704  6E1B               	movwf	(??___ftpack+1)& (0+255),c
  2860  001706  0EFE               	movlw	254
  2861  001708  1417               	andwf	___ftpack@arg+2,w,c
  2862  00170A  6E1C               	movwf	(??___ftpack+2)& (0+255),c
  2863  00170C  501A               	movf	??___ftpack,w,c
  2864  00170E  101B               	iorwf	??___ftpack+1,w,c
  2865  001710  101C               	iorwf	??___ftpack+2,w,c
  2866  001712  B4D8               	btfsc	status,2,c
  2867  001714  D00C               	goto	l2193
  2868  001716  D7EC               	goto	l2185
  2869  001718                     l2189:
  2870  001718  2A18               	incf	___ftpack@exp,f,c
  2871  00171A  0E01               	movlw	1
  2872  00171C  2615               	addwf	___ftpack@arg,f,c
  2873  00171E  0E00               	movlw	0
  2874  001720  2216               	addwfc	___ftpack@arg+1,f,c
  2875  001722  0E00               	movlw	0
  2876  001724  2217               	addwfc	___ftpack@arg+2,f,c
  2877  001726  90D8               	bcf	status,0,c
  2878  001728  3217               	rrcf	___ftpack@arg+2,f,c
  2879  00172A  3216               	rrcf	___ftpack@arg+1,f,c
  2880  00172C  3215               	rrcf	___ftpack@arg,f,c
  2881  00172E                     l2193:
  2882  00172E  0E00               	movlw	0
  2883  001730  1415               	andwf	___ftpack@arg,w,c
  2884  001732  6E1A               	movwf	??___ftpack& (0+255),c
  2885  001734  0E00               	movlw	0
  2886  001736  1416               	andwf	___ftpack@arg+1,w,c
  2887  001738  6E1B               	movwf	(??___ftpack+1)& (0+255),c
  2888  00173A  0EFF               	movlw	255
  2889  00173C  1417               	andwf	___ftpack@arg+2,w,c
  2890  00173E  6E1C               	movwf	(??___ftpack+2)& (0+255),c
  2891  001740  501A               	movf	??___ftpack,w,c
  2892  001742  101B               	iorwf	??___ftpack+1,w,c
  2893  001744  101C               	iorwf	??___ftpack+2,w,c
  2894  001746  B4D8               	btfsc	status,2,c
  2895  001748  D006               	goto	l2197
  2896  00174A  D7E6               	goto	l2189
  2897  00174C                     l2195:
  2898  00174C  0618               	decf	___ftpack@exp,f,c
  2899  00174E  90D8               	bcf	status,0,c
  2900  001750  3615               	rlcf	___ftpack@arg,f,c
  2901  001752  3616               	rlcf	___ftpack@arg+1,f,c
  2902  001754  3617               	rlcf	___ftpack@arg+2,f,c
  2903  001756                     l2197:
  2904  001756  BE16               	btfsc	___ftpack@arg+1,7,c
  2905  001758  D003               	goto	l540
  2906  00175A  0E02               	movlw	2
  2907  00175C  6018               	cpfslt	___ftpack@exp,c
  2908  00175E  D7F6               	goto	l2195
  2909  001760                     l540:
  2910  001760  A018               	btfss	___ftpack@exp,0,c
  2911  001762  9E16               	bcf	___ftpack@arg+1,7,c
  2912  001764  90D8               	bcf	status,0,c
  2913  001766  3218               	rrcf	___ftpack@exp,f,c
  2914  001768  5018               	movf	___ftpack@exp,w,c
  2915  00176A  1217               	iorwf	___ftpack@arg+2,f,c
  2916  00176C  5019               	movf	___ftpack@sign,w,c
  2917  00176E  A4D8               	btfss	status,2,c
  2918  001770  8E17               	bsf	___ftpack@arg+2,7,c
  2919  001772  C015  F015         	movff	___ftpack@arg,?___ftpack
  2920  001776  C016  F016         	movff	___ftpack@arg+1,?___ftpack+1
  2921  00177A  C017  F017         	movff	___ftpack@arg+2,?___ftpack+2
  2922  00177E  0012               	return	
  2923  001780                     __end_of___ftpack:
  2924                           	opt stack 0
  2925                           tblptru	equ	0xFF8
  2926                           tblptrh	equ	0xFF7
  2927                           tblptrl	equ	0xFF6
  2928                           tablat	equ	0xFF5
  2929                           intcon	equ	0xFF2
  2930                           postinc0	equ	0xFEE
  2931                           wreg	equ	0xFE8
  2932                           postdec1	equ	0xFE5
  2933                           fsr1l	equ	0xFE1
  2934                           status	equ	0xFD8
  2935                           
  2936 ;; *************** function _delay_sec *****************
  2937 ;; Defined at:
  2938 ;;		line 73 in file "timers.c"
  2939 ;; Parameters:    Size  Location     Type
  2940 ;;  i               1    wreg     unsigned char 
  2941 ;; Auto vars:     Size  Location     Type
  2942 ;;  i               1   20[COMRAM] unsigned char 
  2943 ;; Return value:  Size  Location     Type
  2944 ;;                  1    wreg      void 
  2945 ;; Registers used:
  2946 ;;		wreg, status,2, status,0, cstack
  2947 ;; Tracked objects:
  2948 ;;		On entry : 0/0
  2949 ;;		On exit  : 0/0
  2950 ;;		Unchanged: 0/0
  2951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2953 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2955 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2956 ;;Total ram usage:        1 bytes
  2957 ;; Hardware stack levels used:    1
  2958 ;; Hardware stack levels required when called:    3
  2959 ;; This function calls:
  2960 ;;		_delay_1s
  2961 ;; This function is called by:
  2962 ;;		_main
  2963 ;; This function uses a non-reentrant model
  2964 ;;
  2965                           
  2966                           	psect	text20
  2967  001B18                     __ptext20:
  2968                           	opt stack 0
  2969  001B18                     _delay_sec:
  2970                           	opt stack 27
  2971                           
  2972                           ;incstack = 0
  2973                           ;delay_sec@i stored from wreg
  2974  001B18  6E15               	movwf	delay_sec@i,c
  2975                           
  2976                           ;timers.c: 74: while(i > 0){
  2977  001B1A  D003               	goto	l1989
  2978  001B1C                     l1985:
  2979                           
  2980                           ;timers.c: 75: delay_1s();
  2981  001B1C  EC65  F00D         	call	_delay_1s	;wreg free
  2982                           
  2983                           ;timers.c: 76: i--;
  2984  001B20  0615               	decf	delay_sec@i,f,c
  2985  001B22                     l1989:
  2986  001B22  5015               	movf	delay_sec@i,w,c
  2987  001B24  B4D8               	btfsc	status,2,c
  2988  001B26  0012               	return	
  2989  001B28  D7F9               	goto	l1985
  2990  001B2A                     __end_of_delay_sec:
  2991                           	opt stack 0
  2992                           tblptru	equ	0xFF8
  2993                           tblptrh	equ	0xFF7
  2994                           tblptrl	equ	0xFF6
  2995                           tablat	equ	0xFF5
  2996                           intcon	equ	0xFF2
  2997                           postinc0	equ	0xFEE
  2998                           wreg	equ	0xFE8
  2999                           postdec1	equ	0xFE5
  3000                           fsr1l	equ	0xFE1
  3001                           status	equ	0xFD8
  3002                           
  3003 ;; *************** function _checkTemperature *****************
  3004 ;; Defined at:
  3005 ;;		line 48 in file "carseat.c"
  3006 ;; Parameters:    Size  Location     Type
  3007 ;;  t               2   20[COMRAM] short 
  3008 ;; Auto vars:     Size  Location     Type
  3009 ;;  c               1   22[COMRAM] unsigned char 
  3010 ;; Return value:  Size  Location     Type
  3011 ;;                  1    wreg      unsigned char 
  3012 ;; Registers used:
  3013 ;;		wreg, status,2, status,0
  3014 ;; Tracked objects:
  3015 ;;		On entry : 0/0
  3016 ;;		On exit  : 0/0
  3017 ;;		Unchanged: 0/0
  3018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3019 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3020 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3022 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3023 ;;Total ram usage:        3 bytes
  3024 ;; Hardware stack levels used:    1
  3025 ;; Hardware stack levels required when called:    2
  3026 ;; This function calls:
  3027 ;;		Nothing
  3028 ;; This function is called by:
  3029 ;;		_main
  3030 ;; This function uses a non-reentrant model
  3031 ;;
  3032                           
  3033                           	psect	text21
  3034  001A08                     __ptext21:
  3035                           	opt stack 0
  3036  001A08                     _checkTemperature:
  3037                           	opt stack 28
  3038                           
  3039                           ;carseat.c: 49: unsigned char c = 0;
  3040                           
  3041                           ;incstack = 0
  3042  001A08  0E00               	movlw	0
  3043  001A0A  6E17               	movwf	checkTemperature@c,c
  3044                           
  3045                           ;carseat.c: 51: if(t >= 75)
  3046  001A0C  BE16               	btfsc	checkTemperature@t+1,7,c
  3047  001A0E  D008               	goto	l2015
  3048  001A10  5016               	movf	checkTemperature@t+1,w,c
  3049  001A12  E104               	bnz	u1540
  3050  001A14  0E4B               	movlw	75
  3051  001A16  5C15               	subwf	checkTemperature@t,w,c
  3052  001A18  A0D8               	btfss	status,0,c
  3053  001A1A  D002               	goto	l2015
  3054  001A1C                     u1540:
  3055                           
  3056                           ;carseat.c: 52: c = 1;
  3057  001A1C  0E01               	movlw	1
  3058  001A1E  6E17               	movwf	checkTemperature@c,c
  3059  001A20                     l2015:
  3060                           
  3061                           ;carseat.c: 53: if(t >= 90)
  3062  001A20  BE16               	btfsc	checkTemperature@t+1,7,c
  3063  001A22  D008               	goto	l64
  3064  001A24  5016               	movf	checkTemperature@t+1,w,c
  3065  001A26  E104               	bnz	u1550
  3066  001A28  0E5A               	movlw	90
  3067  001A2A  5C15               	subwf	checkTemperature@t,w,c
  3068  001A2C  A0D8               	btfss	status,0,c
  3069  001A2E  D002               	goto	l64
  3070  001A30                     u1550:
  3071                           
  3072                           ;carseat.c: 54: c = 2;
  3073  001A30  0E02               	movlw	2
  3074  001A32  6E17               	movwf	checkTemperature@c,c
  3075  001A34                     l64:
  3076                           
  3077                           ;carseat.c: 55: return c;
  3078  001A34  5017               	movf	checkTemperature@c,w,c
  3079  001A36  0012               	return	
  3080  001A38                     __end_of_checkTemperature:
  3081                           	opt stack 0
  3082                           tblptru	equ	0xFF8
  3083                           tblptrh	equ	0xFF7
  3084                           tblptrl	equ	0xFF6
  3085                           tablat	equ	0xFF5
  3086                           intcon	equ	0xFF2
  3087                           postinc0	equ	0xFEE
  3088                           wreg	equ	0xFE8
  3089                           postdec1	equ	0xFE5
  3090                           fsr1l	equ	0xFE1
  3091                           status	equ	0xFD8
  3092                           
  3093 ;; *************** function _UART_init *****************
  3094 ;; Defined at:
  3095 ;;		line 22 in file "uart.c"
  3096 ;; Parameters:    Size  Location     Type
  3097 ;;		None
  3098 ;; Auto vars:     Size  Location     Type
  3099 ;;		None
  3100 ;; Return value:  Size  Location     Type
  3101 ;;                  1    wreg      void 
  3102 ;; Registers used:
  3103 ;;		wreg, status,2, cstack
  3104 ;; Tracked objects:
  3105 ;;		On entry : 0/0
  3106 ;;		On exit  : 0/0
  3107 ;;		Unchanged: 0/0
  3108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3113 ;;Total ram usage:        0 bytes
  3114 ;; Hardware stack levels used:    1
  3115 ;; Hardware stack levels required when called:    3
  3116 ;; This function calls:
  3117 ;;		_set_UARTBaudConfig
  3118 ;;		_set_UARTBaudRate
  3119 ;;		_set_UARTrx
  3120 ;;		_set_UARTtx
  3121 ;; This function is called by:
  3122 ;;		_main
  3123 ;; This function uses a non-reentrant model
  3124 ;;
  3125                           
  3126                           	psect	text22
  3127  001B2A                     __ptext22:
  3128                           	opt stack 0
  3129  001B2A                     _UART_init:
  3130                           	opt stack 27
  3131                           
  3132                           ;uart.c: 24: set_UARTtx();
  3133                           
  3134                           ;incstack = 0
  3135  001B2A  ECB5  F00D         	call	_set_UARTtx	;wreg free
  3136                           
  3137                           ;uart.c: 25: set_UARTrx();
  3138  001B2E  ECBC  F00D         	call	_set_UARTrx	;wreg free
  3139                           
  3140                           ;uart.c: 26: set_UARTBaudConfig();
  3141  001B32  ECCF  F00D         	call	_set_UARTBaudConfig	;wreg free
  3142                           
  3143                           ;uart.c: 27: set_UARTBaudRate();
  3144  001B36  ECEA  F00D         	call	_set_UARTBaudRate	;wreg free
  3145  001B3A  0012               	return		;funcret
  3146  001B3C                     __end_of_UART_init:
  3147                           	opt stack 0
  3148                           tblptru	equ	0xFF8
  3149                           tblptrh	equ	0xFF7
  3150                           tblptrl	equ	0xFF6
  3151                           tablat	equ	0xFF5
  3152                           intcon	equ	0xFF2
  3153                           postinc0	equ	0xFEE
  3154                           wreg	equ	0xFE8
  3155                           postdec1	equ	0xFE5
  3156                           fsr1l	equ	0xFE1
  3157                           status	equ	0xFD8
  3158                           
  3159 ;; *************** function _set_UARTtx *****************
  3160 ;; Defined at:
  3161 ;;		line 32 in file "uart.c"
  3162 ;; Parameters:    Size  Location     Type
  3163 ;;		None
  3164 ;; Auto vars:     Size  Location     Type
  3165 ;;		None
  3166 ;; Return value:  Size  Location     Type
  3167 ;;                  1    wreg      void 
  3168 ;; Registers used:
  3169 ;;		None
  3170 ;; Tracked objects:
  3171 ;;		On entry : 0/0
  3172 ;;		On exit  : 0/0
  3173 ;;		Unchanged: 0/0
  3174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3179 ;;Total ram usage:        0 bytes
  3180 ;; Hardware stack levels used:    1
  3181 ;; Hardware stack levels required when called:    2
  3182 ;; This function calls:
  3183 ;;		Nothing
  3184 ;; This function is called by:
  3185 ;;		_UART_init
  3186 ;; This function uses a non-reentrant model
  3187 ;;
  3188                           
  3189                           	psect	text23
  3190  001B6A                     __ptext23:
  3191                           	opt stack 0
  3192  001B6A                     _set_UARTtx:
  3193                           	opt stack 27
  3194                           
  3195                           ;uart.c: 33: TXSTA1bits.CSRC = 0;
  3196                           
  3197                           ;incstack = 0
  3198  001B6A  9EAD               	bcf	4013,7,c	;volatile
  3199                           
  3200                           ;uart.c: 34: TXSTA1bits.TX9 = 0;
  3201  001B6C  9CAD               	bcf	4013,6,c	;volatile
  3202                           
  3203                           ;uart.c: 35: TXSTA1bits.TXEN = 1;
  3204  001B6E  8AAD               	bsf	4013,5,c	;volatile
  3205                           
  3206                           ;uart.c: 36: TXSTA1bits.SYNC = 0;
  3207  001B70  98AD               	bcf	4013,4,c	;volatile
  3208                           
  3209                           ;uart.c: 37: TXSTA1bits.SENDB = 0;
  3210  001B72  96AD               	bcf	4013,3,c	;volatile
  3211                           
  3212                           ;uart.c: 38: TXSTA1bits.BRGH = 1;
  3213  001B74  84AD               	bsf	4013,2,c	;volatile
  3214  001B76  0012               	return		;funcret
  3215  001B78                     __end_of_set_UARTtx:
  3216                           	opt stack 0
  3217                           tblptru	equ	0xFF8
  3218                           tblptrh	equ	0xFF7
  3219                           tblptrl	equ	0xFF6
  3220                           tablat	equ	0xFF5
  3221                           intcon	equ	0xFF2
  3222                           postinc0	equ	0xFEE
  3223                           wreg	equ	0xFE8
  3224                           postdec1	equ	0xFE5
  3225                           fsr1l	equ	0xFE1
  3226                           status	equ	0xFD8
  3227                           
  3228 ;; *************** function _set_UARTrx *****************
  3229 ;; Defined at:
  3230 ;;		line 43 in file "uart.c"
  3231 ;; Parameters:    Size  Location     Type
  3232 ;;		None
  3233 ;; Auto vars:     Size  Location     Type
  3234 ;;		None
  3235 ;; Return value:  Size  Location     Type
  3236 ;;                  1    wreg      void 
  3237 ;; Registers used:
  3238 ;;		None
  3239 ;; Tracked objects:
  3240 ;;		On entry : 0/0
  3241 ;;		On exit  : 0/0
  3242 ;;		Unchanged: 0/0
  3243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3248 ;;Total ram usage:        0 bytes
  3249 ;; Hardware stack levels used:    1
  3250 ;; Hardware stack levels required when called:    2
  3251 ;; This function calls:
  3252 ;;		Nothing
  3253 ;; This function is called by:
  3254 ;;		_UART_init
  3255 ;; This function uses a non-reentrant model
  3256 ;;
  3257                           
  3258                           	psect	text24
  3259  001B78                     __ptext24:
  3260                           	opt stack 0
  3261  001B78                     _set_UARTrx:
  3262                           	opt stack 27
  3263                           
  3264                           ;uart.c: 44: RCSTA1bits.SPEN = 1;
  3265                           
  3266                           ;incstack = 0
  3267  001B78  8EAC               	bsf	4012,7,c	;volatile
  3268                           
  3269                           ;uart.c: 45: RCSTA1bits.RX9 = 0;
  3270  001B7A  9CAC               	bcf	4012,6,c	;volatile
  3271                           
  3272                           ;uart.c: 46: RCSTA1bits.SREN = 1;
  3273  001B7C  8AAC               	bsf	4012,5,c	;volatile
  3274                           
  3275                           ;uart.c: 47: RCSTA1bits.CREN = 1;
  3276  001B7E  88AC               	bsf	4012,4,c	;volatile
  3277                           
  3278                           ;uart.c: 48: RCSTA1bits.ADDEN = 0;
  3279  001B80  96AC               	bcf	4012,3,c	;volatile
  3280                           
  3281                           ;uart.c: 49: SSP1CON2bits.RCEN = 1;
  3282  001B82  86C5               	bsf	4037,3,c	;volatile
  3283  001B84  0012               	return		;funcret
  3284  001B86                     __end_of_set_UARTrx:
  3285                           	opt stack 0
  3286                           tblptru	equ	0xFF8
  3287                           tblptrh	equ	0xFF7
  3288                           tblptrl	equ	0xFF6
  3289                           tablat	equ	0xFF5
  3290                           intcon	equ	0xFF2
  3291                           postinc0	equ	0xFEE
  3292                           wreg	equ	0xFE8
  3293                           postdec1	equ	0xFE5
  3294                           fsr1l	equ	0xFE1
  3295                           status	equ	0xFD8
  3296                           
  3297 ;; *************** function _set_UARTBaudRate *****************
  3298 ;; Defined at:
  3299 ;;		line 64 in file "uart.c"
  3300 ;; Parameters:    Size  Location     Type
  3301 ;;		None
  3302 ;; Auto vars:     Size  Location     Type
  3303 ;;		None
  3304 ;; Return value:  Size  Location     Type
  3305 ;;                  1    wreg      void 
  3306 ;; Registers used:
  3307 ;;		wreg, status,2
  3308 ;; Tracked objects:
  3309 ;;		On entry : 0/0
  3310 ;;		On exit  : 0/0
  3311 ;;		Unchanged: 0/0
  3312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3317 ;;Total ram usage:        0 bytes
  3318 ;; Hardware stack levels used:    1
  3319 ;; Hardware stack levels required when called:    2
  3320 ;; This function calls:
  3321 ;;		Nothing
  3322 ;; This function is called by:
  3323 ;;		_UART_init
  3324 ;; This function uses a non-reentrant model
  3325 ;;
  3326                           
  3327                           	psect	text25
  3328  001BD4                     __ptext25:
  3329                           	opt stack 0
  3330  001BD4                     _set_UARTBaudRate:
  3331                           	opt stack 27
  3332                           
  3333                           ;uart.c: 68: SPBRG1 = (char)(((float)8000000/((float)115200 * (float)4)) - 1.0);
  3334                           
  3335                           ;incstack = 0
  3336  001BD4  0E10               	movlw	16
  3337  001BD6  6EB0               	movwf	4016,c	;volatile
  3338  001BD8  0012               	return		;funcret
  3339  001BDA                     __end_of_set_UARTBaudRate:
  3340                           	opt stack 0
  3341                           tblptru	equ	0xFF8
  3342                           tblptrh	equ	0xFF7
  3343                           tblptrl	equ	0xFF6
  3344                           tablat	equ	0xFF5
  3345                           intcon	equ	0xFF2
  3346                           postinc0	equ	0xFEE
  3347                           wreg	equ	0xFE8
  3348                           postdec1	equ	0xFE5
  3349                           fsr1l	equ	0xFE1
  3350                           status	equ	0xFD8
  3351                           
  3352 ;; *************** function _set_UARTBaudConfig *****************
  3353 ;; Defined at:
  3354 ;;		line 54 in file "uart.c"
  3355 ;; Parameters:    Size  Location     Type
  3356 ;;		None
  3357 ;; Auto vars:     Size  Location     Type
  3358 ;;		None
  3359 ;; Return value:  Size  Location     Type
  3360 ;;                  1    wreg      void 
  3361 ;; Registers used:
  3362 ;;		None
  3363 ;; Tracked objects:
  3364 ;;		On entry : 0/0
  3365 ;;		On exit  : 0/0
  3366 ;;		Unchanged: 0/0
  3367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3372 ;;Total ram usage:        0 bytes
  3373 ;; Hardware stack levels used:    1
  3374 ;; Hardware stack levels required when called:    2
  3375 ;; This function calls:
  3376 ;;		Nothing
  3377 ;; This function is called by:
  3378 ;;		_UART_init
  3379 ;; This function uses a non-reentrant model
  3380 ;;
  3381                           
  3382                           	psect	text26
  3383  001B9E                     __ptext26:
  3384                           	opt stack 0
  3385  001B9E                     _set_UARTBaudConfig:
  3386                           	opt stack 27
  3387                           
  3388                           ;uart.c: 55: BAUDCON1bits.ABDOVF = 0;
  3389                           
  3390                           ;incstack = 0
  3391  001B9E  9E7E               	bcf	3966,7,c	;volatile
  3392                           
  3393                           ;uart.c: 56: BAUDCON1bits.RXDTP = 0;
  3394  001BA0  9A7E               	bcf	3966,5,c	;volatile
  3395                           
  3396                           ;uart.c: 57: BAUDCON1bits.TXCKP = 0;
  3397  001BA2  987E               	bcf	3966,4,c	;volatile
  3398                           
  3399                           ;uart.c: 58: BAUDCON1bits.BRG16 = 1;
  3400  001BA4  867E               	bsf	3966,3,c	;volatile
  3401                           
  3402                           ;uart.c: 59: BAUDCON1bits.WUE = 0;
  3403  001BA6  927E               	bcf	3966,1,c	;volatile
  3404  001BA8  0012               	return		;funcret
  3405  001BAA                     __end_of_set_UARTBaudConfig:
  3406                           	opt stack 0
  3407                           tblptru	equ	0xFF8
  3408                           tblptrh	equ	0xFF7
  3409                           tblptrl	equ	0xFF6
  3410                           tablat	equ	0xFF5
  3411                           intcon	equ	0xFF2
  3412                           postinc0	equ	0xFEE
  3413                           wreg	equ	0xFE8
  3414                           postdec1	equ	0xFE5
  3415                           fsr1l	equ	0xFE1
  3416                           status	equ	0xFD8
  3417                           
  3418 ;; *************** function _UART_SmartSeatStatus *****************
  3419 ;; Defined at:
  3420 ;;		line 73 in file "uart.c"
  3421 ;; Parameters:    Size  Location     Type
  3422 ;;  bitmap          1    wreg     unsigned char 
  3423 ;; Auto vars:     Size  Location     Type
  3424 ;;  bitmap          1   22[COMRAM] unsigned char 
  3425 ;;  s               5   23[COMRAM] unsigned char [5]
  3426 ;; Return value:  Size  Location     Type
  3427 ;;                  1    wreg      void 
  3428 ;; Registers used:
  3429 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3430 ;; Tracked objects:
  3431 ;;		On entry : 0/0
  3432 ;;		On exit  : 0/0
  3433 ;;		Unchanged: 0/0
  3434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3436 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3438 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3439 ;;Total ram usage:        6 bytes
  3440 ;; Hardware stack levels used:    1
  3441 ;; Hardware stack levels required when called:    4
  3442 ;; This function calls:
  3443 ;;		_UART_transmit
  3444 ;; This function is called by:
  3445 ;;		_main
  3446 ;; This function uses a non-reentrant model
  3447 ;;
  3448                           
  3449                           	psect	text27
  3450  00194C                     __ptext27:
  3451                           	opt stack 0
  3452  00194C                     _UART_SmartSeatStatus:
  3453                           	opt stack 26
  3454                           
  3455                           ;incstack = 0
  3456                           ;UART_SmartSeatStatus@bitmap stored from wreg
  3457  00194C  6E17               	movwf	UART_SmartSeatStatus@bitmap,c
  3458                           
  3459                           ;uart.c: 74: LATD = bitmap;
  3460  00194E  C017  FF8C         	movff	UART_SmartSeatStatus@bitmap,3980	;volatile
  3461                           
  3462                           ;uart.c: 75: unsigned char s[5] = {83,48, 48, 48, 48};
  3463  001952  EE20  F040         	lfsr	2,UART_SmartSeatStatus@F6754
  3464  001956  EE10  F018         	lfsr	1,UART_SmartSeatStatus@s
  3465  00195A  0E04               	movlw	4
  3466  00195C                     u1561:
  3467  00195C  CFDB FFE3          	movff	plusw2,plusw1
  3468  001960  06E8               	decf	wreg,f,c
  3469  001962  E2FC               	bc	u1561
  3470                           
  3471                           ;uart.c: 76: if(LATDbits.LATD0) s[4] = 49;
  3472  001964  A08C               	btfss	3980,0,c	;volatile
  3473  001966  D002               	goto	l2037
  3474  001968  0E31               	movlw	49
  3475  00196A  6E1C               	movwf	UART_SmartSeatStatus@s+4,c
  3476  00196C                     l2037:
  3477                           
  3478                           ;uart.c: 77: if(LATDbits.LATD1) s[3] = 49;
  3479  00196C  A28C               	btfss	3980,1,c	;volatile
  3480  00196E  D002               	goto	l2041
  3481  001970  0E31               	movlw	49
  3482  001972  6E1B               	movwf	UART_SmartSeatStatus@s+3,c
  3483  001974                     l2041:
  3484                           
  3485                           ;uart.c: 78: if(LATDbits.LATD2) s[2] = 49;
  3486  001974  A48C               	btfss	3980,2,c	;volatile
  3487  001976  D002               	goto	l2045
  3488  001978  0E31               	movlw	49
  3489  00197A  6E1A               	movwf	UART_SmartSeatStatus@s+2,c
  3490  00197C                     l2045:
  3491                           
  3492                           ;uart.c: 79: if(LATDbits.LATD3) s[1] = 49;
  3493  00197C  A68C               	btfss	3980,3,c	;volatile
  3494  00197E  D002               	goto	l2049
  3495  001980  0E31               	movlw	49
  3496  001982  6E19               	movwf	UART_SmartSeatStatus@s+1,c
  3497  001984                     l2049:
  3498                           
  3499                           ;uart.c: 81: UART_transmit((char *) s);
  3500  001984  0E18               	movlw	low UART_SmartSeatStatus@s
  3501  001986  6E15               	movwf	UART_transmit@s,c
  3502  001988  0E00               	movlw	high UART_SmartSeatStatus@s
  3503  00198A  6E16               	movwf	UART_transmit@s+1,c
  3504  00198C  EC51  F00C         	call	_UART_transmit	;wreg free
  3505  001990  0012               	return		;funcret
  3506  001992                     __end_of_UART_SmartSeatStatus:
  3507                           	opt stack 0
  3508                           tblptru	equ	0xFF8
  3509                           tblptrh	equ	0xFF7
  3510                           tblptrl	equ	0xFF6
  3511                           tablat	equ	0xFF5
  3512                           intcon	equ	0xFF2
  3513                           postinc0	equ	0xFEE
  3514                           wreg	equ	0xFE8
  3515                           postdec1	equ	0xFE5
  3516                           plusw1	equ	0xFE3
  3517                           fsr1l	equ	0xFE1
  3518                           plusw2	equ	0xFDB
  3519                           status	equ	0xFD8
  3520                           
  3521 ;; *************** function _BTLE_set *****************
  3522 ;; Defined at:
  3523 ;;		line 22 in file "bluetooth.c"
  3524 ;; Parameters:    Size  Location     Type
  3525 ;;		None
  3526 ;; Auto vars:     Size  Location     Type
  3527 ;;		None
  3528 ;; Return value:  Size  Location     Type
  3529 ;;                  1    wreg      void 
  3530 ;; Registers used:
  3531 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3532 ;; Tracked objects:
  3533 ;;		On entry : 0/0
  3534 ;;		On exit  : 0/0
  3535 ;;		Unchanged: 0/0
  3536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3541 ;;Total ram usage:        0 bytes
  3542 ;; Hardware stack levels used:    1
  3543 ;; Hardware stack levels required when called:    5
  3544 ;; This function calls:
  3545 ;;		_BTLE_reboot
  3546 ;;		_UART_transmit
  3547 ;;		_clearStringBuffer
  3548 ;;		_delay_1s
  3549 ;; This function is called by:
  3550 ;;		_main
  3551 ;; This function uses a non-reentrant model
  3552 ;;
  3553                           
  3554                           	psect	text28
  3555  001902                     __ptext28:
  3556                           	opt stack 0
  3557  001902                     _BTLE_set:
  3558                           	opt stack 25
  3559                           
  3560                           ;bluetooth.c: 23: clearStringBuffer();
  3561                           
  3562                           ;incstack = 0
  3563  001902  EC33  F00D         	call	_clearStringBuffer	;wreg free
  3564                           
  3565                           ;bluetooth.c: 25: LATBbits.LATB2 = 0;
  3566  001906  948A               	bcf	3978,2,c	;volatile
  3567                           
  3568                           ;bluetooth.c: 26: delay_1s();
  3569  001908  EC65  F00D         	call	_delay_1s	;wreg free
  3570                           
  3571                           ;bluetooth.c: 27: LATAbits.LATA4 = 1;
  3572  00190C  8889               	bsf	3977,4,c	;volatile
  3573                           
  3574                           ;bluetooth.c: 28: delay_1s();
  3575  00190E  EC65  F00D         	call	_delay_1s	;wreg free
  3576                           
  3577                           ;bluetooth.c: 30: UART_transmit((char *)"SN,SmartSeat\r");
  3578  001912  0E01               	movlw	low STR_1
  3579  001914  6E15               	movwf	UART_transmit@s,c
  3580  001916  0E10               	movlw	high STR_1
  3581  001918  6E16               	movwf	UART_transmit@s+1,c
  3582  00191A  EC51  F00C         	call	_UART_transmit	;wreg free
  3583                           
  3584                           ;bluetooth.c: 31: delay_1s();
  3585  00191E  EC65  F00D         	call	_delay_1s	;wreg free
  3586                           
  3587                           ;bluetooth.c: 32: clearStringBuffer();
  3588  001922  EC33  F00D         	call	_clearStringBuffer	;wreg free
  3589                           
  3590                           ;bluetooth.c: 34: UART_transmit((char *)"SR,36004800\r");
  3591  001926  0E1D               	movlw	low STR_2
  3592  001928  6E15               	movwf	UART_transmit@s,c
  3593  00192A  0E10               	movlw	high STR_2
  3594  00192C  6E16               	movwf	UART_transmit@s+1,c
  3595  00192E  EC51  F00C         	call	_UART_transmit	;wreg free
  3596                           
  3597                           ;bluetooth.c: 35: delay_1s();
  3598  001932  EC65  F00D         	call	_delay_1s	;wreg free
  3599                           
  3600                           ;bluetooth.c: 36: clearStringBuffer();
  3601  001936  EC33  F00D         	call	_clearStringBuffer	;wreg free
  3602                           
  3603                           ;bluetooth.c: 38: BTLE_reboot();
  3604  00193A  EC9E  F00D         	call	_BTLE_reboot	;wreg free
  3605                           
  3606                           ;bluetooth.c: 40: LATAbits.LATA4 = 1;
  3607  00193E  8889               	bsf	3977,4,c	;volatile
  3608                           
  3609                           ;bluetooth.c: 41: delay_1s();
  3610  001940  EC65  F00D         	call	_delay_1s	;wreg free
  3611                           
  3612                           ;bluetooth.c: 42: LATBbits.LATB2 = 1;
  3613  001944  848A               	bsf	3978,2,c	;volatile
  3614                           
  3615                           ;bluetooth.c: 43: delay_1s();
  3616  001946  EC65  F00D         	call	_delay_1s	;wreg free
  3617  00194A  0012               	return		;funcret
  3618  00194C                     __end_of_BTLE_set:
  3619                           	opt stack 0
  3620                           tblptru	equ	0xFF8
  3621                           tblptrh	equ	0xFF7
  3622                           tblptrl	equ	0xFF6
  3623                           tablat	equ	0xFF5
  3624                           intcon	equ	0xFF2
  3625                           postinc0	equ	0xFEE
  3626                           wreg	equ	0xFE8
  3627                           postdec1	equ	0xFE5
  3628                           plusw1	equ	0xFE3
  3629                           fsr1l	equ	0xFE1
  3630                           plusw2	equ	0xFDB
  3631                           status	equ	0xFD8
  3632                           
  3633 ;; *************** function _clearStringBuffer *****************
  3634 ;; Defined at:
  3635 ;;		line 50 in file "functions.c"
  3636 ;; Parameters:    Size  Location     Type
  3637 ;;		None
  3638 ;; Auto vars:     Size  Location     Type
  3639 ;;  i               1   20[COMRAM] unsigned char 
  3640 ;; Return value:  Size  Location     Type
  3641 ;;                  1    wreg      void 
  3642 ;; Registers used:
  3643 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3644 ;; Tracked objects:
  3645 ;;		On entry : 0/0
  3646 ;;		On exit  : 0/0
  3647 ;;		Unchanged: 0/0
  3648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3650 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3652 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3653 ;;Total ram usage:        1 bytes
  3654 ;; Hardware stack levels used:    1
  3655 ;; Hardware stack levels required when called:    2
  3656 ;; This function calls:
  3657 ;;		Nothing
  3658 ;; This function is called by:
  3659 ;;		_main
  3660 ;;		_BTLE_set
  3661 ;;		_BTLE_checkConnection
  3662 ;; This function uses a non-reentrant model
  3663 ;;
  3664                           
  3665                           	psect	text29
  3666  001A66                     __ptext29:
  3667                           	opt stack 0
  3668  001A66                     _clearStringBuffer:
  3669                           	opt stack 28
  3670                           
  3671                           ;functions.c: 51: unsigned char i;
  3672                           ;functions.c: 53: for(i = 0; i < 32; i++)
  3673                           
  3674                           ;incstack = 0
  3675  001A66  0E00               	movlw	0
  3676  001A68  6E15               	movwf	clearStringBuffer@i,c
  3677  001A6A                     l1869:
  3678  001A6A  0E1F               	movlw	31
  3679  001A6C  6415               	cpfsgt	clearStringBuffer@i,c
  3680  001A6E  D001               	goto	l1873
  3681  001A70  0012               	return	
  3682  001A72                     l1873:
  3683                           
  3684                           ;functions.c: 54: rxBuffer[i] = 0x00;
  3685  001A72  5015               	movf	clearStringBuffer@i,w,c
  3686  001A74  0D01               	mullw	1
  3687  001A76  0E80               	movlw	low _rxBuffer
  3688  001A78  24F3               	addwf	prodl,w,c
  3689  001A7A  6ED9               	movwf	fsr2l,c
  3690  001A7C  0E00               	movlw	high _rxBuffer
  3691  001A7E  20F4               	addwfc	prodh,w,c
  3692  001A80  6EDA               	movwf	fsr2h,c
  3693  001A82  0E00               	movlw	0
  3694  001A84  6EDF               	movwf	indf2,c
  3695  001A86  2A15               	incf	clearStringBuffer@i,f,c
  3696  001A88  D7F0               	goto	l1869
  3697  001A8A                     __end_of_clearStringBuffer:
  3698                           	opt stack 0
  3699                           tblptru	equ	0xFF8
  3700                           tblptrh	equ	0xFF7
  3701                           tblptrl	equ	0xFF6
  3702                           tablat	equ	0xFF5
  3703                           prodh	equ	0xFF4
  3704                           prodl	equ	0xFF3
  3705                           intcon	equ	0xFF2
  3706                           postinc0	equ	0xFEE
  3707                           wreg	equ	0xFE8
  3708                           postdec1	equ	0xFE5
  3709                           plusw1	equ	0xFE3
  3710                           fsr1l	equ	0xFE1
  3711                           indf2	equ	0xFDF
  3712                           plusw2	equ	0xFDB
  3713                           fsr2h	equ	0xFDA
  3714                           fsr2l	equ	0xFD9
  3715                           status	equ	0xFD8
  3716                           
  3717 ;; *************** function _BTLE_reboot *****************
  3718 ;; Defined at:
  3719 ;;		line 64 in file "bluetooth.c"
  3720 ;; Parameters:    Size  Location     Type
  3721 ;;		None
  3722 ;; Auto vars:     Size  Location     Type
  3723 ;;		None
  3724 ;; Return value:  Size  Location     Type
  3725 ;;                  1    wreg      void 
  3726 ;; Registers used:
  3727 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3728 ;; Tracked objects:
  3729 ;;		On entry : 0/0
  3730 ;;		On exit  : 0/0
  3731 ;;		Unchanged: 0/0
  3732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3737 ;;Total ram usage:        0 bytes
  3738 ;; Hardware stack levels used:    1
  3739 ;; Hardware stack levels required when called:    4
  3740 ;; This function calls:
  3741 ;;		_UART_transmit
  3742 ;;		_delay_1s
  3743 ;; This function is called by:
  3744 ;;		_BTLE_set
  3745 ;; This function uses a non-reentrant model
  3746 ;;
  3747                           
  3748                           	psect	text30
  3749  001B3C                     __ptext30:
  3750                           	opt stack 0
  3751  001B3C                     _BTLE_reboot:
  3752                           	opt stack 25
  3753                           
  3754                           ;bluetooth.c: 65: UART_transmit((char *)"R,1\r");
  3755                           
  3756                           ;incstack = 0
  3757  001B3C  0E2A               	movlw	low STR_5
  3758  001B3E  6E15               	movwf	UART_transmit@s,c
  3759  001B40  0E10               	movlw	high STR_5
  3760  001B42  6E16               	movwf	UART_transmit@s+1,c
  3761  001B44  EC51  F00C         	call	_UART_transmit	;wreg free
  3762                           
  3763                           ;bluetooth.c: 66: delay_1s();
  3764  001B48  EC65  F00D         	call	_delay_1s	;wreg free
  3765  001B4C  0012               	return		;funcret
  3766  001B4E                     __end_of_BTLE_reboot:
  3767                           	opt stack 0
  3768                           tblptru	equ	0xFF8
  3769                           tblptrh	equ	0xFF7
  3770                           tblptrl	equ	0xFF6
  3771                           tablat	equ	0xFF5
  3772                           prodh	equ	0xFF4
  3773                           prodl	equ	0xFF3
  3774                           intcon	equ	0xFF2
  3775                           postinc0	equ	0xFEE
  3776                           wreg	equ	0xFE8
  3777                           postdec1	equ	0xFE5
  3778                           plusw1	equ	0xFE3
  3779                           fsr1l	equ	0xFE1
  3780                           indf2	equ	0xFDF
  3781                           plusw2	equ	0xFDB
  3782                           fsr2h	equ	0xFDA
  3783                           fsr2l	equ	0xFD9
  3784                           status	equ	0xFD8
  3785                           
  3786 ;; *************** function _delay_1s *****************
  3787 ;; Defined at:
  3788 ;;		line 60 in file "timers.c"
  3789 ;; Parameters:    Size  Location     Type
  3790 ;;		None
  3791 ;; Auto vars:     Size  Location     Type
  3792 ;;		None
  3793 ;; Return value:  Size  Location     Type
  3794 ;;                  1    wreg      void 
  3795 ;; Registers used:
  3796 ;;		wreg, status,2
  3797 ;; Tracked objects:
  3798 ;;		On entry : 0/0
  3799 ;;		On exit  : 0/0
  3800 ;;		Unchanged: 0/0
  3801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3806 ;;Total ram usage:        0 bytes
  3807 ;; Hardware stack levels used:    1
  3808 ;; Hardware stack levels required when called:    2
  3809 ;; This function calls:
  3810 ;;		Nothing
  3811 ;; This function is called by:
  3812 ;;		_BTLE_set
  3813 ;;		_BTLE_reboot
  3814 ;;		_delay_sec
  3815 ;;		_BTLE_checkConnection
  3816 ;; This function uses a non-reentrant model
  3817 ;;
  3818                           
  3819                           	psect	text31
  3820  001ACA                     __ptext31:
  3821                           	opt stack 0
  3822  001ACA                     _delay_1s:
  3823                           	opt stack 27
  3824                           
  3825                           ;timers.c: 61: T0CONbits.T0PS = 4;
  3826                           
  3827                           ;incstack = 0
  3828  001ACA  50D5               	movf	4053,w,c	;volatile
  3829  001ACC  0BF8               	andlw	-8
  3830  001ACE  0904               	iorlw	4
  3831  001AD0  6ED5               	movwf	4053,c	;volatile
  3832                           
  3833                           ;timers.c: 62: TMR0H = 0x0B;
  3834  001AD2  0E0B               	movlw	11
  3835  001AD4  6ED7               	movwf	4055,c	;volatile
  3836                           
  3837                           ;timers.c: 63: TMR0L = 0xDD;
  3838  001AD6  0EDD               	movlw	221
  3839  001AD8  6ED6               	movwf	4054,c	;volatile
  3840                           
  3841                           ;timers.c: 64: T0CONbits.TMR0ON = 1;
  3842  001ADA  8ED5               	bsf	4053,7,c	;volatile
  3843  001ADC                     l306:
  3844  001ADC  A4F2               	btfss	intcon,2,c	;volatile
  3845  001ADE  D7FE               	goto	l306
  3846                           
  3847                           ;timers.c: 66: T0CONbits.TMR0ON = 0;
  3848  001AE0  9ED5               	bcf	4053,7,c	;volatile
  3849                           
  3850                           ;timers.c: 67: INTCONbits.TMR0IF = 0;
  3851  001AE2  94F2               	bcf	intcon,2,c	;volatile
  3852  001AE4  0012               	return		;funcret
  3853  001AE6                     __end_of_delay_1s:
  3854                           	opt stack 0
  3855                           tblptru	equ	0xFF8
  3856                           tblptrh	equ	0xFF7
  3857                           tblptrl	equ	0xFF6
  3858                           tablat	equ	0xFF5
  3859                           prodh	equ	0xFF4
  3860                           prodl	equ	0xFF3
  3861                           intcon	equ	0xFF2
  3862                           postinc0	equ	0xFEE
  3863                           wreg	equ	0xFE8
  3864                           postdec1	equ	0xFE5
  3865                           plusw1	equ	0xFE3
  3866                           fsr1l	equ	0xFE1
  3867                           indf2	equ	0xFDF
  3868                           plusw2	equ	0xFDB
  3869                           fsr2h	equ	0xFDA
  3870                           fsr2l	equ	0xFD9
  3871                           status	equ	0xFD8
  3872                           
  3873 ;; *************** function _UART_transmit *****************
  3874 ;; Defined at:
  3875 ;;		line 116 in file "uart.c"
  3876 ;; Parameters:    Size  Location     Type
  3877 ;;  s               2   20[COMRAM] PTR unsigned char 
  3878 ;;		 -> STR_5(5), STR_3(3), STR_2(13), STR_1(14), 
  3879 ;;		 -> UART_SmartSeatStatus@s(5), 
  3880 ;; Auto vars:     Size  Location     Type
  3881 ;;		None
  3882 ;; Return value:  Size  Location     Type
  3883 ;;                  1    wreg      void 
  3884 ;; Registers used:
  3885 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3886 ;; Tracked objects:
  3887 ;;		On entry : 0/0
  3888 ;;		On exit  : 0/0
  3889 ;;		Unchanged: 0/0
  3890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3891 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3894 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3895 ;;Total ram usage:        2 bytes
  3896 ;; Hardware stack levels used:    1
  3897 ;; Hardware stack levels required when called:    3
  3898 ;; This function calls:
  3899 ;;		_delay_100ms
  3900 ;; This function is called by:
  3901 ;;		_UART_SmartSeatStatus
  3902 ;;		_BTLE_set
  3903 ;;		_BTLE_reboot
  3904 ;;		_BTLE_checkConnection
  3905 ;; This function uses a non-reentrant model
  3906 ;;
  3907                           
  3908                           	psect	text32
  3909  0018A2                     __ptext32:
  3910                           	opt stack 0
  3911  0018A2                     _UART_transmit:
  3912                           	opt stack 26
  3913                           
  3914                           ;uart.c: 117: while(*s){
  3915                           
  3916                           ;incstack = 0
  3917  0018A2  D018               	goto	l1621
  3918  0018A4                     l1615:
  3919                           
  3920                           ;uart.c: 118: delay_100ms();
  3921  0018A4  EC73  F00D         	call	_delay_100ms	;wreg free
  3922  0018A8                     l132:
  3923  0018A8  A2AD               	btfss	4013,1,c	;volatile
  3924  0018AA  D7FE               	goto	l132
  3925                           
  3926                           ;uart.c: 120: TXREG = *s;
  3927  0018AC  C015  FFF6         	movff	UART_transmit@s,tblptrl
  3928  0018B0  C016  FFF7         	movff	UART_transmit@s+1,tblptrh
  3929  0018B4  0E00               	movlw	low (__smallconst shr (0+16))
  3930  0018B6  6EF8               	movwf	tblptru,c
  3931  0018B8  0E0F               	movlw	(high __ramtop+-1)
  3932  0018BA  64F7               	cpfsgt	tblptrh,c
  3933  0018BC  D003               	bra	u987
  3934  0018BE  0008               	tblrd		*
  3935  0018C0  50F5               	movf	tablat,w,c
  3936  0018C2  D005               	bra	u980
  3937  0018C4                     u987:
  3938  0018C4  CFF6 FFE9          	movff	tblptrl,fsr0l
  3939  0018C8  CFF7 FFEA          	movff	tblptrh,fsr0h
  3940  0018CC  50EF               	movf	indf0,w,c
  3941  0018CE                     u980:
  3942  0018CE  6EAE               	movwf	4014,c	;volatile
  3943                           
  3944                           ;uart.c: 121: s++;
  3945  0018D0  4A15               	infsnz	UART_transmit@s,f,c
  3946  0018D2  2A16               	incf	UART_transmit@s+1,f,c
  3947  0018D4                     l1621:
  3948  0018D4  C015  FFF6         	movff	UART_transmit@s,tblptrl
  3949  0018D8  C016  FFF7         	movff	UART_transmit@s+1,tblptrh
  3950  0018DC  0E00               	movlw	low (__smallconst shr (0+16))
  3951  0018DE  6EF8               	movwf	tblptru,c
  3952  0018E0  0E0F               	movlw	(high __ramtop+-1)
  3953  0018E2  64F7               	cpfsgt	tblptrh,c
  3954  0018E4  D003               	bra	u997
  3955  0018E6  0008               	tblrd		*
  3956  0018E8  50F5               	movf	tablat,w,c
  3957  0018EA  D005               	bra	u990
  3958  0018EC                     u997:
  3959  0018EC  CFF6 FFE9          	movff	tblptrl,fsr0l
  3960  0018F0  CFF7 FFEA          	movff	tblptrh,fsr0h
  3961  0018F4  50EF               	movf	indf0,w,c
  3962  0018F6                     u990:
  3963  0018F6  0900               	iorlw	0
  3964  0018F8  A4D8               	btfss	status,2,c
  3965  0018FA  D7D4               	goto	l1615
  3966  0018FC                     l136:
  3967  0018FC  B2AD               	btfsc	4013,1,c	;volatile
  3968  0018FE  0012               	return	
  3969  001900  D7FD               	goto	l136
  3970  001902                     __end_of_UART_transmit:
  3971                           	opt stack 0
  3972                           tblptru	equ	0xFF8
  3973                           tblptrh	equ	0xFF7
  3974                           tblptrl	equ	0xFF6
  3975                           tablat	equ	0xFF5
  3976                           prodh	equ	0xFF4
  3977                           prodl	equ	0xFF3
  3978                           intcon	equ	0xFF2
  3979                           indf0	equ	0xFEF
  3980                           postinc0	equ	0xFEE
  3981                           fsr0h	equ	0xFEA
  3982                           fsr0l	equ	0xFE9
  3983                           wreg	equ	0xFE8
  3984                           postdec1	equ	0xFE5
  3985                           plusw1	equ	0xFE3
  3986                           fsr1l	equ	0xFE1
  3987                           indf2	equ	0xFDF
  3988                           plusw2	equ	0xFDB
  3989                           fsr2h	equ	0xFDA
  3990                           fsr2l	equ	0xFD9
  3991                           status	equ	0xFD8
  3992                           
  3993 ;; *************** function _delay_100ms *****************
  3994 ;; Defined at:
  3995 ;;		line 47 in file "timers.c"
  3996 ;; Parameters:    Size  Location     Type
  3997 ;;		None
  3998 ;; Auto vars:     Size  Location     Type
  3999 ;;		None
  4000 ;; Return value:  Size  Location     Type
  4001 ;;                  1    wreg      void 
  4002 ;; Registers used:
  4003 ;;		wreg, status,2
  4004 ;; Tracked objects:
  4005 ;;		On entry : 0/0
  4006 ;;		On exit  : 0/0
  4007 ;;		Unchanged: 0/0
  4008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4013 ;;Total ram usage:        0 bytes
  4014 ;; Hardware stack levels used:    1
  4015 ;; Hardware stack levels required when called:    2
  4016 ;; This function calls:
  4017 ;;		Nothing
  4018 ;; This function is called by:
  4019 ;;		_UART_transmit
  4020 ;; This function uses a non-reentrant model
  4021 ;;
  4022                           
  4023                           	psect	text33
  4024  001AE6                     __ptext33:
  4025                           	opt stack 0
  4026  001AE6                     _delay_100ms:
  4027                           	opt stack 26
  4028                           
  4029                           ;timers.c: 48: T0CONbits.T0PS = 1;
  4030                           
  4031                           ;incstack = 0
  4032  001AE6  50D5               	movf	4053,w,c	;volatile
  4033  001AE8  0BF8               	andlw	-8
  4034  001AEA  0901               	iorlw	1
  4035  001AEC  6ED5               	movwf	4053,c	;volatile
  4036                           
  4037                           ;timers.c: 49: TMR0H = 0x3C;
  4038  001AEE  0E3C               	movlw	60
  4039  001AF0  6ED7               	movwf	4055,c	;volatile
  4040                           
  4041                           ;timers.c: 50: TMR0L = 0xB1;
  4042  001AF2  0EB1               	movlw	177
  4043  001AF4  6ED6               	movwf	4054,c	;volatile
  4044                           
  4045                           ;timers.c: 51: T0CONbits.TMR0ON = 1;
  4046  001AF6  8ED5               	bsf	4053,7,c	;volatile
  4047  001AF8                     l300:
  4048  001AF8  A4F2               	btfss	intcon,2,c	;volatile
  4049  001AFA  D7FE               	goto	l300
  4050                           
  4051                           ;timers.c: 53: T0CONbits.TMR0ON = 0;
  4052  001AFC  9ED5               	bcf	4053,7,c	;volatile
  4053                           
  4054                           ;timers.c: 54: INTCONbits.TMR0IF = 0;
  4055  001AFE  94F2               	bcf	intcon,2,c	;volatile
  4056  001B00  0012               	return		;funcret
  4057  001B02                     __end_of_delay_100ms:
  4058                           	opt stack 0
  4059                           tblptru	equ	0xFF8
  4060                           tblptrh	equ	0xFF7
  4061                           tblptrl	equ	0xFF6
  4062                           tablat	equ	0xFF5
  4063                           prodh	equ	0xFF4
  4064                           prodl	equ	0xFF3
  4065                           intcon	equ	0xFF2
  4066                           indf0	equ	0xFEF
  4067                           postinc0	equ	0xFEE
  4068                           fsr0h	equ	0xFEA
  4069                           fsr0l	equ	0xFE9
  4070                           wreg	equ	0xFE8
  4071                           postdec1	equ	0xFE5
  4072                           plusw1	equ	0xFE3
  4073                           fsr1l	equ	0xFE1
  4074                           indf2	equ	0xFDF
  4075                           plusw2	equ	0xFDB
  4076                           fsr2h	equ	0xFDA
  4077                           fsr2l	equ	0xFD9
  4078                           status	equ	0xFD8
  4079                           
  4080 ;; *************** function _ADC_set *****************
  4081 ;; Defined at:
  4082 ;;		line 24 in file "atod_converter.c"
  4083 ;; Parameters:    Size  Location     Type
  4084 ;;		None
  4085 ;; Auto vars:     Size  Location     Type
  4086 ;;		None
  4087 ;; Return value:  Size  Location     Type
  4088 ;;                  1    wreg      void 
  4089 ;; Registers used:
  4090 ;;		wreg, status,2
  4091 ;; Tracked objects:
  4092 ;;		On entry : 0/0
  4093 ;;		On exit  : 0/0
  4094 ;;		Unchanged: 0/0
  4095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4100 ;;Total ram usage:        0 bytes
  4101 ;; Hardware stack levels used:    1
  4102 ;; Hardware stack levels required when called:    2
  4103 ;; This function calls:
  4104 ;;		Nothing
  4105 ;; This function is called by:
  4106 ;;		_main
  4107 ;; This function uses a non-reentrant model
  4108 ;;
  4109                           
  4110                           	psect	text34
  4111  001B02                     __ptext34:
  4112                           	opt stack 0
  4113  001B02                     _ADC_set:
  4114                           	opt stack 28
  4115                           
  4116                           ;atod_converter.c: 26: WDTCONbits.ADSHR = 0;
  4117                           
  4118                           ;incstack = 0
  4119  001B02  98C0               	bcf	4032,4,c	;volatile
  4120                           
  4121                           ;atod_converter.c: 27: ADCON1bits.ADFM = 1;
  4122  001B04  8EC1               	bsf	4033,7,c	;volatile
  4123                           
  4124                           ;atod_converter.c: 28: ADCON1bits.ACQT = 2;
  4125  001B06  50C1               	movf	4033,w,c	;volatile
  4126  001B08  0BC7               	andlw	-57
  4127  001B0A  0910               	iorlw	16
  4128  001B0C  6EC1               	movwf	4033,c	;volatile
  4129                           
  4130                           ;atod_converter.c: 29: ADCON1bits.ADCS = 4;
  4131  001B0E  50C1               	movf	4033,w,c	;volatile
  4132  001B10  0BF8               	andlw	-8
  4133  001B12  0904               	iorlw	4
  4134  001B14  6EC1               	movwf	4033,c	;volatile
  4135  001B16  0012               	return		;funcret
  4136  001B18                     __end_of_ADC_set:
  4137                           	opt stack 0
  4138                           tblptru	equ	0xFF8
  4139                           tblptrh	equ	0xFF7
  4140                           tblptrl	equ	0xFF6
  4141                           tablat	equ	0xFF5
  4142                           prodh	equ	0xFF4
  4143                           prodl	equ	0xFF3
  4144                           intcon	equ	0xFF2
  4145                           indf0	equ	0xFEF
  4146                           postinc0	equ	0xFEE
  4147                           fsr0h	equ	0xFEA
  4148                           fsr0l	equ	0xFE9
  4149                           wreg	equ	0xFE8
  4150                           postdec1	equ	0xFE5
  4151                           plusw1	equ	0xFE3
  4152                           fsr1l	equ	0xFE1
  4153                           indf2	equ	0xFDF
  4154                           plusw2	equ	0xFDB
  4155                           fsr2h	equ	0xFDA
  4156                           fsr2l	equ	0xFD9
  4157                           status	equ	0xFD8
  4158                           
  4159 ;; *************** function _ISR *****************
  4160 ;; Defined at:
  4161 ;;		line 31 in file "interrupts.c"
  4162 ;; Parameters:    Size  Location     Type
  4163 ;;		None
  4164 ;; Auto vars:     Size  Location     Type
  4165 ;;		None
  4166 ;; Return value:  Size  Location     Type
  4167 ;;                  1    wreg      void 
  4168 ;; Registers used:
  4169 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4170 ;; Tracked objects:
  4171 ;;		On entry : 0/0
  4172 ;;		On exit  : 0/0
  4173 ;;		Unchanged: 0/0
  4174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4177 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4178 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4179 ;;Total ram usage:       14 bytes
  4180 ;; Hardware stack levels used:    1
  4181 ;; Hardware stack levels required when called:    1
  4182 ;; This function calls:
  4183 ;;		_str_copy
  4184 ;;		i2_clearStringBuffer
  4185 ;; This function is called by:
  4186 ;;		Interrupt level 2
  4187 ;; This function uses a non-reentrant model
  4188 ;;
  4189                           
  4190                           	psect	intcode
  4191  000008                     __pintcode:
  4192                           	opt stack 0
  4193  000008                     _ISR:
  4194                           	opt stack 25
  4195                           
  4196                           ;incstack = 0
  4197  000008  8247               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4198  00000A  CFFA F007          	movff	pclath,??_ISR
  4199  00000E  CFFB F008          	movff	pclatu,??_ISR+1
  4200  000012  CFE9 F009          	movff	fsr0l,??_ISR+2
  4201  000016  CFEA F00A          	movff	fsr0h,??_ISR+3
  4202  00001A  CFE1 F00B          	movff	fsr1l,??_ISR+4
  4203  00001E  CFE2 F00C          	movff	fsr1h,??_ISR+5
  4204  000022  CFD9 F00D          	movff	fsr2l,??_ISR+6
  4205  000026  CFDA F00E          	movff	fsr2h,??_ISR+7
  4206  00002A  CFF3 F00F          	movff	prodl,??_ISR+8
  4207  00002E  CFF4 F010          	movff	prodh,??_ISR+9
  4208  000032  CFF6 F011          	movff	tblptrl,??_ISR+10
  4209  000036  CFF7 F012          	movff	tblptrh,??_ISR+11
  4210  00003A  CFF8 F013          	movff	tblptru,??_ISR+12
  4211  00003E  CFF5 F014          	movff	tablat,??_ISR+13
  4212                           
  4213                           ;interrupts.c: 35: if(PIR1bits.RC1IF){
  4214  000042  AA9E               	btfss	3998,5,c	;volatile
  4215  000044  D02D               	goto	i2l225
  4216                           
  4217                           ;interrupts.c: 36: asciiValue = RCREG1;
  4218  000046  CFAF F045          	movff	4015,_asciiValue	;volatile
  4219                           
  4220                           ;interrupts.c: 40: if((asciiValue != 0x0A && asciiValue !=0x0D) && (ptr < 32)){
  4221  00004A  0E0A               	movlw	10
  4222  00004C  1845               	xorwf	_asciiValue,w,c	;volatile
  4223  00004E  B4D8               	btfsc	status,2,c
  4224  000050  D016               	goto	i2l2165
  4225  000052  0E0D               	movlw	13
  4226  000054  1845               	xorwf	_asciiValue,w,c	;volatile
  4227  000056  B4D8               	btfsc	status,2,c
  4228  000058  D012               	goto	i2l2165
  4229  00005A  0E20               	movlw	32
  4230  00005C  6046               	cpfslt	_ptr,c	;volatile
  4231  00005E  D00F               	goto	i2l2165
  4232                           
  4233                           ;interrupts.c: 41: if(asciiValue < 0x7F){
  4234  000060  0E7F               	movlw	127
  4235  000062  6045               	cpfslt	_asciiValue,c	;volatile
  4236  000064  D01C               	goto	i2l2171
  4237                           
  4238                           ;interrupts.c: 42: rxBuffer[ptr] = asciiValue;
  4239  000066  5046               	movf	_ptr,w,c	;volatile
  4240  000068  0D01               	mullw	1
  4241  00006A  0E80               	movlw	low _rxBuffer
  4242  00006C  24F3               	addwf	prodl,w,c
  4243  00006E  6ED9               	movwf	fsr2l,c
  4244  000070  0E00               	movlw	high _rxBuffer
  4245  000072  20F4               	addwfc	prodh,w,c
  4246  000074  6EDA               	movwf	fsr2h,c
  4247  000076  C045  FFDF         	movff	_asciiValue,indf2	;volatile
  4248                           
  4249                           ;interrupts.c: 43: ptr++;
  4250  00007A  2A46               	incf	_ptr,f,c	;volatile
  4251                           
  4252                           ;interrupts.c: 44: }
  4253                           ;interrupts.c: 45: }
  4254  00007C  D010               	goto	i2l2171
  4255  00007E                     i2l2165:
  4256                           
  4257                           ;interrupts.c: 48: else{
  4258                           ;interrupts.c: 50: str_copy((char *) rxBuffer, (char *) message, ptr);
  4259  00007E  0E80               	movlw	low _rxBuffer
  4260  000080  6E01               	movwf	str_copy@s1,c
  4261  000082  0E00               	movlw	high _rxBuffer
  4262  000084  6E02               	movwf	str_copy@s1+1,c
  4263  000086  0E60               	movlw	low _message
  4264  000088  6E03               	movwf	str_copy@s2,c
  4265  00008A  0E00               	movlw	high _message
  4266  00008C  6E04               	movwf	str_copy@s2+1,c
  4267  00008E  C046  F005         	movff	_ptr,str_copy@c	;volatile
  4268  000092  EC1C  F00D         	call	_str_copy	;wreg free
  4269                           
  4270                           ;interrupts.c: 51: clearStringBuffer();
  4271  000096  EC45  F00D         	call	i2_clearStringBuffer	;wreg free
  4272                           
  4273                           ;interrupts.c: 52: ptr = 0;
  4274  00009A  0E00               	movlw	0
  4275  00009C  6E46               	movwf	_ptr,c	;volatile
  4276  00009E                     i2l2171:
  4277                           
  4278                           ;interrupts.c: 53: }
  4279                           ;interrupts.c: 54: PIR1bits.RCIF = 0;
  4280  00009E  9A9E               	bcf	3998,5,c	;volatile
  4281  0000A0                     i2l225:
  4282  0000A0  C014  FFF5         	movff	??_ISR+13,tablat
  4283  0000A4  C013  FFF8         	movff	??_ISR+12,tblptru
  4284  0000A8  C012  FFF7         	movff	??_ISR+11,tblptrh
  4285  0000AC  C011  FFF6         	movff	??_ISR+10,tblptrl
  4286  0000B0  C010  FFF4         	movff	??_ISR+9,prodh
  4287  0000B4  C00F  FFF3         	movff	??_ISR+8,prodl
  4288  0000B8  C00E  FFDA         	movff	??_ISR+7,fsr2h
  4289  0000BC  C00D  FFD9         	movff	??_ISR+6,fsr2l
  4290  0000C0  C00C  FFE2         	movff	??_ISR+5,fsr1h
  4291  0000C4  C00B  FFE1         	movff	??_ISR+4,fsr1l
  4292  0000C8  C00A  FFEA         	movff	??_ISR+3,fsr0h
  4293  0000CC  C009  FFE9         	movff	??_ISR+2,fsr0l
  4294  0000D0  C008  FFFB         	movff	??_ISR+1,pclatu
  4295  0000D4  C007  FFFA         	movff	??_ISR,pclath
  4296  0000D8  9247               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4297  0000DA  0011               	retfie		f
  4298  0000DC                     __end_of_ISR:
  4299                           	opt stack 0
  4300                           pclatu	equ	0xFFB
  4301                           pclath	equ	0xFFA
  4302                           tblptru	equ	0xFF8
  4303                           tblptrh	equ	0xFF7
  4304                           tblptrl	equ	0xFF6
  4305                           tablat	equ	0xFF5
  4306                           prodh	equ	0xFF4
  4307                           prodl	equ	0xFF3
  4308                           intcon	equ	0xFF2
  4309                           indf0	equ	0xFEF
  4310                           postinc0	equ	0xFEE
  4311                           fsr0h	equ	0xFEA
  4312                           fsr0l	equ	0xFE9
  4313                           wreg	equ	0xFE8
  4314                           postdec1	equ	0xFE5
  4315                           plusw1	equ	0xFE3
  4316                           fsr1h	equ	0xFE2
  4317                           fsr1l	equ	0xFE1
  4318                           indf2	equ	0xFDF
  4319                           plusw2	equ	0xFDB
  4320                           fsr2h	equ	0xFDA
  4321                           fsr2l	equ	0xFD9
  4322                           status	equ	0xFD8
  4323                           
  4324 ;; *************** function i2_clearStringBuffer *****************
  4325 ;; Defined at:
  4326 ;;		line 50 in file "functions.c"
  4327 ;; Parameters:    Size  Location     Type
  4328 ;;		None
  4329 ;; Auto vars:     Size  Location     Type
  4330 ;;  clearStringB    1    0[COMRAM] unsigned char 
  4331 ;; Return value:  Size  Location     Type
  4332 ;;                  1    wreg      void 
  4333 ;; Registers used:
  4334 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4335 ;; Tracked objects:
  4336 ;;		On entry : 0/0
  4337 ;;		On exit  : 0/0
  4338 ;;		Unchanged: 0/0
  4339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4341 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4343 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4344 ;;Total ram usage:        1 bytes
  4345 ;; Hardware stack levels used:    1
  4346 ;; This function calls:
  4347 ;;		Nothing
  4348 ;; This function is called by:
  4349 ;;		_ISR
  4350 ;; This function uses a non-reentrant model
  4351 ;;
  4352                           
  4353                           	psect	text36
  4354  001A8A                     __ptext36:
  4355                           	opt stack 0
  4356  001A8A                     i2_clearStringBuffer:
  4357                           	opt stack 25
  4358                           
  4359                           ;functions.c: 51: unsigned char i;
  4360                           ;functions.c: 53: for(i = 0; i < 32; i++)
  4361                           
  4362                           ;incstack = 0
  4363  001A8A  0E00               	movlw	0
  4364  001A8C  6E01               	movwf	i2clearStringBuffer@i,c
  4365  001A8E                     i2l2065:
  4366  001A8E  0E1F               	movlw	31
  4367  001A90  6401               	cpfsgt	i2clearStringBuffer@i,c
  4368  001A92  D001               	goto	i2l2069
  4369  001A94  0012               	return	
  4370  001A96                     i2l2069:
  4371                           
  4372                           ;functions.c: 54: rxBuffer[i] = 0x00;
  4373  001A96  5001               	movf	i2clearStringBuffer@i,w,c
  4374  001A98  0D01               	mullw	1
  4375  001A9A  0E80               	movlw	low _rxBuffer
  4376  001A9C  24F3               	addwf	prodl,w,c
  4377  001A9E  6ED9               	movwf	fsr2l,c
  4378  001AA0  0E00               	movlw	high _rxBuffer
  4379  001AA2  20F4               	addwfc	prodh,w,c
  4380  001AA4  6EDA               	movwf	fsr2h,c
  4381  001AA6  0E00               	movlw	0
  4382  001AA8  6EDF               	movwf	indf2,c
  4383  001AAA  2A01               	incf	i2clearStringBuffer@i,f,c
  4384  001AAC  D7F0               	goto	i2l2065
  4385  001AAE                     __end_ofi2_clearStringBuffer:
  4386                           	opt stack 0
  4387                           pclatu	equ	0xFFB
  4388                           pclath	equ	0xFFA
  4389                           tblptru	equ	0xFF8
  4390                           tblptrh	equ	0xFF7
  4391                           tblptrl	equ	0xFF6
  4392                           tablat	equ	0xFF5
  4393                           prodh	equ	0xFF4
  4394                           prodl	equ	0xFF3
  4395                           intcon	equ	0xFF2
  4396                           indf0	equ	0xFEF
  4397                           postinc0	equ	0xFEE
  4398                           fsr0h	equ	0xFEA
  4399                           fsr0l	equ	0xFE9
  4400                           wreg	equ	0xFE8
  4401                           postdec1	equ	0xFE5
  4402                           plusw1	equ	0xFE3
  4403                           fsr1h	equ	0xFE2
  4404                           fsr1l	equ	0xFE1
  4405                           indf2	equ	0xFDF
  4406                           plusw2	equ	0xFDB
  4407                           fsr2h	equ	0xFDA
  4408                           fsr2l	equ	0xFD9
  4409                           status	equ	0xFD8
  4410                           
  4411 ;; *************** function _str_copy *****************
  4412 ;; Defined at:
  4413 ;;		line 38 in file "functions.c"
  4414 ;; Parameters:    Size  Location     Type
  4415 ;;  s1              2    0[COMRAM] PTR unsigned char 
  4416 ;;		 -> rxBuffer(32), 
  4417 ;;  s2              2    2[COMRAM] PTR unsigned char 
  4418 ;;		 -> message(32), 
  4419 ;;  c               1    4[COMRAM] unsigned char 
  4420 ;; Auto vars:     Size  Location     Type
  4421 ;;  i               1    5[COMRAM] unsigned char 
  4422 ;; Return value:  Size  Location     Type
  4423 ;;                  1    wreg      void 
  4424 ;; Registers used:
  4425 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4426 ;; Tracked objects:
  4427 ;;		On entry : 0/0
  4428 ;;		On exit  : 0/0
  4429 ;;		Unchanged: 0/0
  4430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4431 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4432 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4434 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4435 ;;Total ram usage:        6 bytes
  4436 ;; Hardware stack levels used:    1
  4437 ;; This function calls:
  4438 ;;		Nothing
  4439 ;; This function is called by:
  4440 ;;		_ISR
  4441 ;; This function uses a non-reentrant model
  4442 ;;
  4443                           
  4444                           	psect	text37
  4445  001A38                     __ptext37:
  4446                           	opt stack 0
  4447  001A38                     _str_copy:
  4448                           	opt stack 25
  4449                           
  4450                           ;functions.c: 39: unsigned char i = 0;
  4451                           
  4452                           ;incstack = 0
  4453  001A38  0E00               	movlw	0
  4454  001A3A  6E06               	movwf	str_copy@i,c
  4455                           
  4456                           ;functions.c: 40: while(i < c){
  4457  001A3C  D00F               	goto	i2l2061
  4458  001A3E                     i2l2053:
  4459                           
  4460                           ;functions.c: 41: *s2 = *s1;
  4461  001A3E  C001  FFD9         	movff	str_copy@s1,fsr2l
  4462  001A42  C002  FFDA         	movff	str_copy@s1+1,fsr2h
  4463  001A46  C003  FFE1         	movff	str_copy@s2,fsr1l
  4464  001A4A  C004  FFE2         	movff	str_copy@s2+1,fsr1h
  4465  001A4E  CFDF FFE7          	movff	indf2,indf1
  4466                           
  4467                           ;functions.c: 42: s1++;
  4468  001A52  4A01               	infsnz	str_copy@s1,f,c
  4469  001A54  2A02               	incf	str_copy@s1+1,f,c
  4470                           
  4471                           ;functions.c: 43: s2++;
  4472  001A56  4A03               	infsnz	str_copy@s2,f,c
  4473  001A58  2A04               	incf	str_copy@s2+1,f,c
  4474                           
  4475                           ;functions.c: 44: i++;
  4476  001A5A  2A06               	incf	str_copy@i,f,c
  4477  001A5C                     i2l2061:
  4478  001A5C  5005               	movf	str_copy@c,w,c
  4479  001A5E  5C06               	subwf	str_copy@i,w,c
  4480  001A60  B0D8               	btfsc	status,0,c
  4481  001A62  0012               	return	
  4482  001A64  D7EC               	goto	i2l2053
  4483  001A66                     __end_of_str_copy:
  4484                           	opt stack 0
  4485                           pclatu	equ	0xFFB
  4486                           pclath	equ	0xFFA
  4487                           tblptru	equ	0xFF8
  4488                           tblptrh	equ	0xFF7
  4489                           tblptrl	equ	0xFF6
  4490                           tablat	equ	0xFF5
  4491                           prodh	equ	0xFF4
  4492                           prodl	equ	0xFF3
  4493                           intcon	equ	0xFF2
  4494                           indf0	equ	0xFEF
  4495                           postinc0	equ	0xFEE
  4496                           fsr0h	equ	0xFEA
  4497                           fsr0l	equ	0xFE9
  4498                           wreg	equ	0xFE8
  4499                           indf1	equ	0xFE7
  4500                           postdec1	equ	0xFE5
  4501                           plusw1	equ	0xFE3
  4502                           fsr1h	equ	0xFE2
  4503                           fsr1l	equ	0xFE1
  4504                           indf2	equ	0xFDF
  4505                           plusw2	equ	0xFDB
  4506                           fsr2h	equ	0xFDA
  4507                           fsr2l	equ	0xFD9
  4508                           status	equ	0xFD8
  4509                           pclatu	equ	0xFFB
  4510                           pclath	equ	0xFFA
  4511                           tblptru	equ	0xFF8
  4512                           tblptrh	equ	0xFF7
  4513                           tblptrl	equ	0xFF6
  4514                           tablat	equ	0xFF5
  4515                           prodh	equ	0xFF4
  4516                           prodl	equ	0xFF3
  4517                           intcon	equ	0xFF2
  4518                           indf0	equ	0xFEF
  4519                           postinc0	equ	0xFEE
  4520                           fsr0h	equ	0xFEA
  4521                           fsr0l	equ	0xFE9
  4522                           wreg	equ	0xFE8
  4523                           indf1	equ	0xFE7
  4524                           postdec1	equ	0xFE5
  4525                           plusw1	equ	0xFE3
  4526                           fsr1h	equ	0xFE2
  4527                           fsr1l	equ	0xFE1
  4528                           indf2	equ	0xFDF
  4529                           plusw2	equ	0xFDB
  4530                           fsr2h	equ	0xFDA
  4531                           fsr2l	equ	0xFD9
  4532                           status	equ	0xFD8
  4533                           
  4534                           	psect	rparam
  4535  0000                     pclatu	equ	0xFFB
  4536                           pclath	equ	0xFFA
  4537                           tblptru	equ	0xFF8
  4538                           tblptrh	equ	0xFF7
  4539                           tblptrl	equ	0xFF6
  4540                           tablat	equ	0xFF5
  4541                           prodh	equ	0xFF4
  4542                           prodl	equ	0xFF3
  4543                           intcon	equ	0xFF2
  4544                           indf0	equ	0xFEF
  4545                           postinc0	equ	0xFEE
  4546                           fsr0h	equ	0xFEA
  4547                           fsr0l	equ	0xFE9
  4548                           wreg	equ	0xFE8
  4549                           indf1	equ	0xFE7
  4550                           postdec1	equ	0xFE5
  4551                           plusw1	equ	0xFE3
  4552                           fsr1h	equ	0xFE2
  4553                           fsr1l	equ	0xFE1
  4554                           indf2	equ	0xFDF
  4555                           plusw2	equ	0xFDB
  4556                           fsr2h	equ	0xFDA
  4557                           fsr2l	equ	0xFD9
  4558                           status	equ	0xFD8
  4559                           
  4560                           	psect	temp
  4561  000047                     btemp:
  4562                           	opt stack 0
  4563  000047                     	ds	1
  4564  0000                     int$flags	set	btemp
  4565                           pclatu	equ	0xFFB
  4566                           pclath	equ	0xFFA
  4567                           tblptru	equ	0xFF8
  4568                           tblptrh	equ	0xFF7
  4569                           tblptrl	equ	0xFF6
  4570                           tablat	equ	0xFF5
  4571                           prodh	equ	0xFF4
  4572                           prodl	equ	0xFF3
  4573                           intcon	equ	0xFF2
  4574                           indf0	equ	0xFEF
  4575                           postinc0	equ	0xFEE
  4576                           fsr0h	equ	0xFEA
  4577                           fsr0l	equ	0xFE9
  4578                           wreg	equ	0xFE8
  4579                           indf1	equ	0xFE7
  4580                           postdec1	equ	0xFE5
  4581                           plusw1	equ	0xFE3
  4582                           fsr1h	equ	0xFE2
  4583                           fsr1l	equ	0xFE1
  4584                           indf2	equ	0xFDF
  4585                           plusw2	equ	0xFDB
  4586                           fsr2h	equ	0xFDA
  4587                           fsr2l	equ	0xFD9
  4588                           status	equ	0xFD8


Data Sizes:
    Strings     49
    Constant    0
    Data        5
    BSS         66
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     63      70
    BANK0           160     36     100
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           64      0       0

Pointer List with Targets:

    str_copy@s1	PTR unsigned char  size(2) Largest target is 32
		 -> rxBuffer(BANK0[32]), 

    str_copy@s2	PTR unsigned char  size(2) Largest target is 32
		 -> message(BANK0[32]), 

    UART_transmit@s	PTR unsigned char  size(2) Largest target is 14
		 -> STR_5(CODE[5]), STR_3(CODE[3]), STR_2(CODE[13]), STR_1(CODE[14]), 
		 -> UART_SmartSeatStatus@s(COMRAM[5]), 


Critical Paths under _main in COMRAM

    _ADC_getTemperature->___fttol
    ___fttol->___ftadd
    ___ftadd->___ftmul
    _ADC_getCarPower->___ftdiv
    ___ftmul->___awtoft
    ___ftdiv->___ftmul
    ___awtoft->___ftpack
    _UART_SmartSeatStatus->_UART_transmit
    _BTLE_set->_UART_transmit
    _BTLE_reboot->_UART_transmit

Critical Paths under _ISR in COMRAM

    _ISR->_str_copy

Critical Paths under _main in BANK0

    _main->_getTemperature
    _getTemperature->_ADC_getTemperature
    _ADC_getTemperature->___fttol
    _getCarPower->_ADC_getCarPower

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   22683
                                             30 BANK0      6     6      0
                            _ADC_set
                           _BTLE_set
               _UART_SmartSeatStatus
                          _UART_init
                   _checkTemperature
                  _clearStringBuffer
                          _delay_sec
                        _getCarPower
                     _getTemperature
                    _getWeightInSeat
                      _packageBitmap
                           _set_Fosc
                     _set_interrupts
                           _set_pins
                         _set_timer0
 ---------------------------------------------------------------------------------
 (1) _set_timer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_pins                                             0     0      0       0
                     _set_input_pins
                    _set_output_pins
 ---------------------------------------------------------------------------------
 (2) _set_output_pins                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _set_input_pins                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_interrupts                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_Fosc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _packageBitmap                                        4     2      2     263
                                             20 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _getWeightInSeat                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getTemperature                                       2     0      2   10894
                                             28 BANK0      2     0      2
                 _ADC_getTemperature
 ---------------------------------------------------------------------------------
 (2) _ADC_getTemperature                                  17    15      2   10894
                                             11 BANK0     17    15      2
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     448
                                             59 COMRAM     4     0      4
                                              0 BANK0     11    11      0
                            ___ftadd (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    4071
                                             47 COMRAM    12     6      6
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _getCarPower                                          0     0      0    9811
                    _ADC_getCarPower
 ---------------------------------------------------------------------------------
 (2) _ADC_getCarPower                                      9     9      0    9811
                                              0 BANK0      9     9      0
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3374
                                             32 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     352
                                             20 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3152
                                             47 COMRAM    15     9      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    2751
                                             28 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2464
                                             20 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _delay_sec                                            1     1      0      23
                                             20 COMRAM     1     1      0
                           _delay_1s
 ---------------------------------------------------------------------------------
 (1) _checkTemperature                                     3     1      2     133
                                             20 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            0     0      0       0
                 _set_UARTBaudConfig
                   _set_UARTBaudRate
                         _set_UARTrx
                         _set_UARTtx
 ---------------------------------------------------------------------------------
 (2) _set_UARTtx                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _set_UARTrx                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _set_UARTBaudRate                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _set_UARTBaudConfig                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_SmartSeatStatus                                 6     6      0     508
                                             22 COMRAM     6     6      0
                      _UART_transmit
 ---------------------------------------------------------------------------------
 (1) _BTLE_set                                             0     0      0     798
                        _BTLE_reboot
                      _UART_transmit
                  _clearStringBuffer
                           _delay_1s
 ---------------------------------------------------------------------------------
 (1) _clearStringBuffer                                    1     1      0      68
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _BTLE_reboot                                          0     0      0     365
                      _UART_transmit
                           _delay_1s
 ---------------------------------------------------------------------------------
 (2) _delay_1s                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART_transmit                                        2     0      2     365
                                             20 COMRAM     2     0      2
                        _delay_100ms
 ---------------------------------------------------------------------------------
 (3) _delay_100ms                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                 14    14      0     352
                                              6 COMRAM    14    14      0
                           _str_copy
                i2_clearStringBuffer
 ---------------------------------------------------------------------------------
 (6) i2_clearStringBuffer                                  1     1      0      68
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _str_copy                                             6     1      5     284
                                              0 COMRAM     6     1      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_set
   _BTLE_set
     _BTLE_reboot
       _UART_transmit
         _delay_100ms
       _delay_1s
     _UART_transmit
       _delay_100ms
     _clearStringBuffer
     _delay_1s
   _UART_SmartSeatStatus
     _UART_transmit
       _delay_100ms
   _UART_init
     _set_UARTBaudConfig
     _set_UARTBaudRate
     _set_UARTrx
     _set_UARTtx
   _checkTemperature
   _clearStringBuffer
   _delay_sec
     _delay_1s
   _getCarPower
     _ADC_getCarPower
       ___awtoft
         ___ftpack
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
   _getTemperature
     _ADC_getTemperature
       ___awtoft
         ___ftpack
       ___ftadd
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
   _getWeightInSeat
   _packageBitmap
   _set_Fosc
   _set_interrupts
   _set_pins
     _set_input_pins
     _set_output_pins
   _set_timer0

 _ISR (ROOT)
   _str_copy
   i2_clearStringBuffer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F3F      0       0      37        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     24      64       5       62.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3F      46       1       74.5%
BITBANK15           40      0       0      35        0.0%
BANK15              40      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      AA      12        0.0%
DATA                 0      0      AA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Sat Apr 30 17:39:41 2016

                   __CFG_BW$16 000000                             l64 1A34                   __CFG_CP0$OFF 000000  
                 ___ftadd@exp1 003B                   ___ftadd@exp2 003A               ??_getTemperature 0040  
                 ___ftadd@sign 0039                            l300 1AF8                            l132 18A8  
                          l136 18FC                            l306 1ADC                            l270 136E  
                          l540 1760                            l276 153C                            l563 1078  
                          l567 10A2                            l578 1152                            l587 116E  
                          l598 16A0                            _ISR 0008                            u980 18CE  
                          u990 18F6                            u987 18C4                            u997 18EC  
                          _ptr 0046                            prod 000FF3                            wreg 000FE8  
                   _TXSTA1bits 000FAD                __end_of_ADC_set 1B18                   __CFG_IESO$ON 000000  
                 __CFG_MODE$MM 000000                           ?_ISR 0001                   ___ftdiv@cntr 0039  
                 ___ftdiv@sign 003E         __size_of_packageBitmap 001C                           l2015 1A20  
                         l2041 1974                           l2045 197C                           l2037 196C  
                         l2221 1086                           l2049 1984                           l2315 167A  
                         l2403 189E                           l2251 110C                           l2243 10E0  
                         l2227 10B0                           l1621 18D4                           l2181 16E2  
                         l2341 145C                           l2261 1140                           l2253 1116  
                         l2413 1216                           l1615 18A4                           l2335 1434  
                         l2263 114A                           l2255 111E                           l2431 1298  
                         l2193 172E                           l2185 16F0                           l2249 1102  
                         l2441 12C6                           l2195 174C                           l2187 16FA  
                         l2355 148E                           l2443 12D6                           l2435 12AC  
                         l2197 1756                           l2189 1718                           l2365 14B6  
                         l2269 118A                           l2445 12E0                           l2525 17C2  
                         l2295 163C                           l2359 149E                           l2471 15E8  
                         l2279 11BA                           l2385 19E4                           l2289 1614  
                         l2393 1842                           l2369 14C6                           l2449 12FC  
                         l2397 1872                           l1873 1A72                           l1869 1A6A  
                         l1985 1B1C                           l1989 1B22                           l1997 1B9A  
                         STR_1 1001                           STR_2 101D                           STR_3 102F  
                         STR_4 100F                           STR_5 102A                           u2011 15FC  
                         u2031 1624                           u2061 141C                           _LATD 000F8C  
                         u2081 1444                           u2161 11F4                           u1540 1A1C  
                         u2180 123C                           u1550 1A30                           u1561 195C  
                         u1801 1044                           u2185 1232                           u1811 1058  
                __CFG_FCMEN$ON 000000                           _main 1780                   ___ftpack@arg 0015  
                 ___ftpack@exp 0018                           fsr0h 000FEA                           fsr1h 000FE2  
                         indf0 000FEF                           fsr0l 000FE9                           fsr2h 000FDA  
                         indf1 000FE7                           fsr1l 000FE1                           indf2 000FDF  
                         fsr2l 000FD9      ADC_getCarPower@stepNumber 00A5                           btemp 0047  
                         pclat 000FFA                           prodh 000FF4                           prodl 000FF3  
            ??_getWeightInSeat 0015                           start 00DC                   main@carPower 00C1  
                 ___ftmul@cntr 002E                   ___param_bank 000010                   ___ftmul@sign 002F  
   __end_of_set_UARTBaudConfig 1BAA                          ??_ISR 0007                   ___fttol@exp1 00AA  
     __size_of_ADC_getCarPower 00EC               __end_of_BTLE_set 194C                   ___fttol@lval 00A6  
                 _BAUDCON1bits 000F7E                  __CFG_WAIT$OFF 000000                          ?_main 0001  
              __end_of___ftadd 11E0                __end_of___ftdiv 16D2                __end_of___ftmul 1500  
              __end_of___fttol 130E                 __CFG_DEBUG$OFF 000000                          i2l225 00A0  
             _set_UARTBaudRate 1BD4                          _TMR0H 000FD7                          _TMR0L 000FD6  
                        _TRISD 000F95                          _TXREG 000FAE                 __CFG_EASHFT$ON 000000  
               packageBitmap@c 0015                  ___awtoft@sign 0020                 packageBitmap@t 0016  
               packageBitmap@w 0017             __size_of_UART_init 0012                   main@tempFlag 00C2  
                ___ftpack@sign 0019           __size_of_delay_100ms 001C                          tablat 000FF5  
                        plusw1 000FE3                          plusw2 000FDB                          status 000FD8  
           _ADC_getTemperature 130E            i2_clearStringBuffer 1A8A                __initialization 1992  
          ?_ADC_getTemperature 00AB           __size_of_getCarPower 0006                   __end_of_main 1812  
                _packageBitmap 1AAE       __end_of_checkTemperature 1A38                      ??_ADC_set 0015  
                       ??_main 0040           ?i2_clearStringBuffer 0001                  ___fttol@sign1 00A5  
                __activetblptr 000002           ??_ADC_getTemperature 0040                         _ADRESH 000FC4  
                       _ADRESL 000FC3               __end_of___awtoft 1A08               __end_of___ftpack 1780  
                       i2l2053 1A3E                         i2l2061 1A5C                         i2l2065 1A8E  
                       i2l2171 009E                         i2l2069 1A96                         i2l2165 007E  
               __CFG_WDTEN$OFF 000000                         _RCREG1 000FAF                         _OSCCON 000FD3  
                       _SPBRG1 000FB0               __end_of_delay_1s 1AE6                _set_output_pins 1B4E  
               __CFG_XINST$OFF 000000           __size_of_BTLE_reboot 0012                         ___ftge 1812  
               ?_packageBitmap 0015              __end_of_UART_init 1B3C                      ??___ftadd 0036  
                    ??___ftdiv 0036                      ??___ftmul 0027                      ??___fttol 00A0  
                       clear_0 1998          ??i2_clearStringBuffer 0001               __end_of_set_Fosc 1BCE  
        ___ftmul@f3_as_product 002B              ??_ADC_getCarPower 003F                   __pdataCOMRAM 0040  
             __end_of_set_pins 1BB4                   __mediumconst 0000                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8   __end_of_UART_SmartSeatStatus 1992  
             __end_of_str_copy 1A66                      ?_BTLE_set 0001                     __accesstop 0060  
      __end_of__initialization 19C2                     ___ftadd@f1 0030                     ___ftadd@f2 0033  
                   ___ftge@ff1 0015                     ___ftge@ff2 0018                  ___rparam_used 000001  
                   ___ftdiv@f1 0030                     ___ftdiv@f2 0033                     ___ftdiv@f3 003A  
                   ___awtoft@c 001D                     ___ftmul@f1 0021                     ___ftmul@f2 0024  
                   ___fttol@f1 003C                 __pcstackCOMRAM 0001             __size_of_delay_sec 0012  
              _getWeightInSeat 1B92        __size_of_set_interrupts 000A        __end_of_set_output_pins 1B5C  
      __size_of_set_input_pins 000A                     __pbssBANK0 0060          ADC_getCarPower@H_byte 00A7  
                   ??_BTLE_set 0017          ADC_getCarPower@L_byte 00A3       __end_of_set_UARTBaudRate 1BDA  
          packageBitmap@result 0018          __end_of_UART_transmit 1902             clearStringBuffer@i 0015  
              ??_packageBitmap 0017            ADC_getCarPower@Vref 00A0                        ?___ftge 0015  
                   _asciiValue 0045                      ?___awtoft 001D                      ?___ftpack 0015  
                      _ADC_set 1B02             _set_UARTBaudConfig 1B9E                      ?_delay_1s 0001  
          ?_set_UARTBaudConfig 0001              __end_of_delay_sec 1B2A                      ?_set_Fosc 0001  
                      __Hparam 0000                        __Lparam 0000                      ?_set_pins 0001  
         _UART_SmartSeatStatus 194C     UART_SmartSeatStatus@bitmap 0017                __size_of___ftge 0090  
                      ___ftadd 1034                        ___ftdiv 15EC                        ___ftmul 140C  
                      ___fttol 11E0           ??_set_UARTBaudConfig 0015                   __psmallconst 1000  
              __CFG_STVREN$OFF 000000                      ?_str_copy 0001                        __pcinit 1992  
                   ??___awtoft 0020                     ??___ftpack 001A                        __ramtop 1000  
                      __ptext0 1780                        __ptext1 1B86              ?_checkTemperature 0015  
                      __ptext2 1BAA                        __ptext3 1B4E                        __ptext4 1BB4  
                      __ptext5 1BBE                        __ptext6 1BC8                        __ptext7 1AAE  
                      __ptext8 1B92                        __ptext9 1B5C       ADC_getTemperature@H_byte 00BA  
      __end_of_getWeightInSeat 1B9E              _clearStringBuffer 1A66                      _T0CONbits 000FD5  
     ADC_getTemperature@L_byte 00B6                   __size_of_ISR 00D4             ??_checkTemperature 0017  
                      _message 0060             ?_clearStringBuffer 0001                     ??_delay_1s 0015  
                ??_delay_100ms 0015              __CFG_MSSPMSK$MSK7 000000                     _set_UARTrx 1B78  
                   _set_UARTtx 1B6A               ?_set_output_pins 0001           end_of_initialization 19C2  
                   delay_sec@i 0015        __size_of_getTemperature 000E            ??_clearStringBuffer 0015  
     ADC_getTemperature@result 00B8                  __Lmediumconst 0000                  ??_getCarPower 003F  
                   ??_set_Fosc 0015                     ??_set_pins 0015          ?_UART_SmartSeatStatus 0001  
              _ADC_getCarPower 1500                     _set_timer0 1B86                        postdec1 000FE5  
                      postinc0 000FEE      __end_of_clearStringBuffer 1A8A                     ??_str_copy 0006  
                    _UART_init 1B2A                      _PORTHbits 000F87               __CFG_FOSC$INTOSC 000000  
                    _TRISAbits 000F92                      _TRISBbits 000F93                      _TRISCbits 000F94  
                    _TRISFbits 000F97                      _TRISHbits 000F99    __size_of_ADC_getTemperature 00FE  
               _set_interrupts 1BBE                 _set_input_pins 1BB4            __end_of_delay_100ms 1B02  
                   main@bitmap 00C3                    ___ftdiv@exp 003D                      _TXSTAbits 000FAD  
                ??_BTLE_reboot 0017              __size_of_BTLE_set 004A                     main@weight 00C0  
                  ___ftmul@exp 002A    __end_ofi2_clearStringBuffer 1AAE            __end_of_getCarPower 1BD4  
               __end_of___ftge 18A2                  __pidataCOMRAM 1BDA                     ?_UART_init 0001  
             ?_getWeightInSeat 0001            start_initialization 1992         __end_of_set_interrupts 1BC8  
                  __end_of_ISR 00DC         __end_of_set_input_pins 1BBE                    ?_set_UARTrx 0001  
                  ?_set_UARTtx 0001        __end_of_ADC_getCarPower 15EC              ?_set_UARTBaudRate 0001  
       ??_UART_SmartSeatStatus 0017                       ??___ftge 001B             ??_set_UARTBaudRate 0015  
                  ?_set_timer0 0001            __end_of_BTLE_reboot 1B4E     __size_of_clearStringBuffer 0024  
                     ?_ADC_set 0001              __size_of___awtoft 0038              __size_of___ftpack 00AE  
                  __pbssCOMRAM 0045                ?_set_interrupts 0001                  __pcstackBANK0 00A0  
              ?_set_input_pins 0001                    _delay_100ms 1AE6              __size_of_delay_1s 001C  
               _getTemperature 1B5C            __CFG_CCP2MX$DEFAULT 000000                    _getCarPower 1BCE  
                    _delay_sec 1B18                      __pintcode 0008          __end_of_packageBitmap 1ACA  
            __size_of_set_Fosc 0006                       ?___ftadd 0030                       ?___ftdiv 0030  
                     ?___ftmul 0021                       ?___fttol 003C              __size_of_set_pins 000A  
          __size_of_set_UARTrx 000E            __size_of_set_UARTtx 000E      UART_SmartSeatStatus@F6754 0040  
                  ??_UART_init 0015              __size_of_str_copy 002E                    __smallconst 1000  
       __size_of_UART_transmit 0060         __end_of_getTemperature 1B6A            __size_of_set_timer0 000C  
    __size_of_checkTemperature 0030                       _BTLE_set 1902                       _LATAbits 000F89  
                     _LATBbits 000F8A                       _LATDbits 000F8C               ?_ADC_getCarPower 0001  
                     _IPR1bits 000F9F                       _PIE1bits 000F9D           i2clearStringBuffer@i 0001  
                  _BTLE_reboot 1B3C                 UART_transmit@s 0015                     ?_delay_sec 0001  
                     _PIR1bits 000F9E                       _RCONbits 000FD0               __CFG_WDTPS$32768 000000  
           __CFG_PMPMX$DEFAULT 000000    __size_of_set_UARTBaudConfig 000C                     _ADCON0bits 000FC2  
                   _ADCON1bits 000FC1               __size_of_ADC_set 0016          UART_SmartSeatStatus@s 0018  
          ADC_getTemperature@b 00AD            ADC_getTemperature@m 00B0                ?_getTemperature 00BC  
                    copy_data0 19B6                       __Hrparam 0000       __size_of_set_output_pins 000E  
                _UART_transmit 18A2                       __Lrparam 0000               __size_of___ftadd 01AC  
             __size_of___ftdiv 00E6               __size_of___ftmul 00F4               __size_of___fttol 012E  
                     ___awtoft 19D0                       ___ftpack 16D2     __end_of_ADC_getTemperature 140C  
                     _delay_1s 1ACA                     str_copy@s1 0001                     str_copy@s2 0003  
                     __ptext10 130E                       __ptext11 11E0                       __ptext20 1B18  
                     __ptext12 1034                       __ptext21 1A08                       __ptext13 1BCE  
                     __ptext30 1B3C                       __ptext22 1B2A                       __ptext14 1500  
                     __ptext31 1ACA                       __ptext23 1B6A                       __ptext15 140C  
                     __ptext32 18A2                       __ptext24 1B78                       __ptext16 1812  
                     __ptext33 1AE6                       __ptext25 1BD4                       __ptext17 15EC  
                     __ptext34 1B02                       __ptext26 1B9E                       __ptext18 19D0  
                     __ptext27 194C                       __ptext19 16D2                       __ptext36 1A8A  
                     __ptext28 1902                       __ptext37 1A38                       __ptext29 1A66  
                 _SSP1CON2bits 000FC5                   ??_set_UARTrx 0015                   ??_set_UARTtx 0015  
                __size_of_main 0092                 ?_UART_transmit 0015                       _set_Fosc 1BC8  
                     _rxBuffer 0080                    ??_delay_sec 0015                       _set_pins 1BAA  
                 ??_set_timer0 0015                       int$flags 0047   ADC_getTemperature@stepNumber 00B3  
                     _str_copy 1A38             __end_of_set_UARTrx 1B86             __end_of_set_UARTtx 1B78  
             ??_set_interrupts 0015               ??_set_input_pins 0015   __size_ofi2_clearStringBuffer 0024  
              main@temperature 00BE      __size_of_set_UARTBaudRate 0006                     _INTCONbits 000FF2  
                 ?_delay_100ms 0001       __size_of_getWeightInSeat 000C                       intlevel2 0000  
           __end_of_set_timer0 1B92               _checkTemperature 1A08                      str_copy@c 0005  
                    str_copy@i 0006                     _RCSTA1bits 000FAC                   ?_getCarPower 0001  
__size_of_UART_SmartSeatStatus 0046              ??_set_output_pins 0015                     _WDTCONbits 000FC0  
            checkTemperature@c 0017              checkTemperature@t 0015            __CFG_ECCPMX$DEFAULT 000000  
              ??_UART_transmit 0017                   ?_BTLE_reboot 0001  
